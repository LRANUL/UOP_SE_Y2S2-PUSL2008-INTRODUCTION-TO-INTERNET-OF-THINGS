{"version":3,"sources":["src/app/office/notices/notices.page.html","src/app/office/notices/notices-routing.module.ts","src/app/office/notices/notices.module.ts","src/app/office/notices/notices.page.scss","src/app/office/notices/notices.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Notices</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- Importing js file -->\\r\\n  <script src=\\\"../../../assets/js/accountNotices.js\\\"></script>\\r\\n\\r\\n\\r\\n  <!-- Vertical line in the center of the page -->\\r\\n  <!--\\r\\n  <div style=\\\"border-left: rgb(236, 236, 236) solid 2px;\\r\\n              height: 100%;\\r\\n              position: relative;\\r\\n              left: 50%;\\\">\\r\\n  </div>\\r\\n  -->\\r\\n\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Send New Notice\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n\\r\\n\\r\\n            <ion-card id=\\\"newNoticeFormSection\\\" style=\\\"background-color: #F3FAFC;\\\">\\r\\n              <ion-card-content style=\\\"margin-top: -20px;\\\">\\r\\n\\r\\n                <!-- Student and Lecturer Form Selection Buttons -->\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"full\\\" id=\\\"newNoticeButtonStudent\\\" (click)=\\\"showStudentNoticeForm()\\\" style=\\\"--background: #02A5D7;\\r\\n                                                                                                                    margin-left: -23px;\\r\\n                                                                                                                    margin-right: -5px;\\\">\\r\\n                        Student\\r\\n                      </ion-button> \\r\\n                    </ion-col>\\r\\n                    \\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"full\\\" id=\\\"newNoticeButtonLecturer\\\" (click)=\\\"showLecturerNoticeForm()\\\" style=\\\"--background: #0B80D3;\\r\\n                                                                                                                      margin-left: -5px;\\r\\n                                                                                                                      margin-right: -23px;\\\">\\r\\n                        Lecturer\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n                <!-- New Notice to Student Section -->\\r\\n                <div id=\\\"newStudentNoticeSubmit\\\" style=\\\"display: inline\\\">\\r\\n                \\r\\n                  <form [formGroup]=\\\"newStudentNoticeSendForm\\\" (ngSubmit)=\\\"doNewStudentNoticeSend(newStudentNoticeSendForm.value)\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Title\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Title\\\" clearInput formControlName=\\\"noticeTitle\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Description\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-textarea rows=11 style=\\\"height: 300px;\\r\\n                                                        min-width: 100%;\\\" placeholder=\\\"Enter Description\\\" formControlName=\\\"noticeDescription\\\"></ion-textarea>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Category\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-select interface=\\\"popover\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Category\\\" formControlName=\\\"noticeCategory\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedNoticeCategories\\\" value=\\\"{{ item.payload.doc.data().category }}\\\">\\r\\n                                {{ item.payload.doc.data().category }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Recipient\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeRecipientModule\\\" style=\\\"min-width: 100%;\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of registeredModules\\\" value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                  {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-label style=\\\"position: relative;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\\">\\r\\n                              <p>OR</p>\\r\\n                            </ion-label>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Batch\\\" formControlName=\\\"noticeRecipientBatch\\\" style=\\\"min-width: 100%;\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                  {{ item.payload.doc.data().batch }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Author\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" value=\\\"Program Office: {{ userFaculty }}\\\" readOnly style=\\\"min-width: 100%;\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\" style=\\\"position: relative;\\r\\n                                                                          left: 50%;\\r\\n                                                                          transform: translateX(-50%);\\\">\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!newStudentNoticeSendForm.valid\\\">\\r\\n                            Send Notice\\r\\n                          </ion-button>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                     \\r\\n\\r\\n\\r\\n                    </ion-grid>\\r\\n                  </form>\\r\\n\\r\\n                  \\r\\n                </div>\\r\\n                \\r\\n                <!-- Send New Notice to Lecturer -->\\r\\n                <div id=\\\"newLecturerNoticeSubmit\\\" style=\\\"display: none;\\\">\\r\\n                  <form [formGroup]=\\\"newLecturerNoticeSendForm\\\" (ngSubmit)=\\\"doNewLecturerNoticeSendForm(newLecturerNoticeSendForm.value)\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Title\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" clearInput placeholder=\\\"Enter Title\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeTitle\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Description\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-textarea rows=11 style=\\\"height: 300px;\\r\\n                                                        min-width: 100%;\\\" placeholder=\\\"Enter Description\\\" formControlName=\\\"noticeDescription\\\"></ion-textarea>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Category\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-select interface=\\\"popover\\\" placeholder=\\\"Select Category\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeCategory\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedNoticeCategories\\\" value=\\\"{{ item.payload.doc.data().category }}\\\">\\r\\n                                {{ item.payload.doc.data().category }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Recipient\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Lecturer\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeRecipient\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" value=\\\"{{ item.payload.doc.id }}\\\">\\r\\n                                  {{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Author\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" value=\\\"Program Office: {{ userFaculty }}\\\" readOnly style=\\\"min-width: 100%;\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\" style=\\\"position: relative;\\r\\n                                                                          left: 50%;\\r\\n                                                                          transform: translateX(-50%);\\\">\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!newLecturerNoticeSendForm.valid\\\">\\r\\n                            Send Notice\\r\\n                          </ion-button>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Notices Sent to Lecturers -->\\r\\n        <ion-card style=\\\"width: 99%;\\r\\n                          height: 700px;\\r\\n                          background-color: white;\\r\\n                          margin-left: 4px;\\r\\n                          margin-top: 0px;\\\">\\r\\n            <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                      Notices Sent to Lecturers \\r\\n                    </ion-label>\\r\\n                  </ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-item style=\\\"margin-top: -12px;\\r\\n                                    color: black;\\\">\\r\\n                      <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                      <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticePOToLecturersSelectedDate($event)\\\"></ion-datetime>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n              \\r\\n\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n\\r\\n              <div style=\\\"border-top: #ccc solid 2px;\\r\\n                          width: 100%;\\r\\n                          margin-top: -20px;\\\">\\r\\n              </div>\\r\\n\\r\\n              <!-- No Notices Available Text -->\\r\\n              <div *ngIf=\\\"noNoticePOToLecturersText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                border-radius: 5px;\\r\\n                                padding: 5px;\\\">\\r\\n                  <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                    No Notices were sent to lecturers for the selected date\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n              </div>\\r\\n\\r\\n              <!-- Loading Spinner -->\\r\\n              <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\r\\n                                              margin-top: 20px;\\r\\n                                              height: 100px;\\r\\n                                              width: 100px;\\\" *ngIf=\\\"loadingSpinnerPOToLecturer\\\"></ion-spinner>\\r\\n\\r\\n              <div style=\\\"overflow-y: scroll;\\r\\n                          width: 100%;\\r\\n                          height: 610px;\\\">\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedPOLecturerNotices\\\">\\r\\n\\r\\n                      <ion-card>\\r\\n                        <ion-card-header>\\r\\n                          <ion-card-title>\\r\\n                            {{ list.payload.doc.data().noticeTitle }}\\r\\n                          </ion-card-title>\\r\\n                          <ion-card-subtitle>\\r\\n                            {{ list.payload.doc.data().noticeDescription }}\\r\\n                          </ion-card-subtitle>\\r\\n                        </ion-card-header>\\r\\n                        <ion-card-content>\\r\\n                          <ion-label>\\r\\n                            <b>Notice Category: </b>\\r\\n                            {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                          </ion-label>\\r\\n                          <ion-label>\\r\\n                            <b>Notice Published: </b> <br>\\r\\n                            {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                          </ion-label>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col style=\\\"width: 45px;\\\">\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                          height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                  <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    More\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                              <ion-col style=\\\"width: 45px;\\\">\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                         height: 40px;\\\">\\r\\n                                  <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    Edit\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                          height: 40px;\\\">\\r\\n                                  <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    Remove\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-content>\\r\\n                      </ion-card>\\r\\n\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\">\\r\\n        \\r\\n        <ion-row>\\r\\n\\r\\n          <ion-col>\\r\\n\\r\\n            <!-- Notices From Lecturers -->\\r\\n            <ion-card style=\\\"width: 99%;\\r\\n                            height: 700px;\\r\\n                            background-color: white;\\r\\n                            margin-left: 4px;\\r\\n                            margin-top: 10px;\\\">\\r\\n              <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                        Notices From Lecturers \\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col>\\r\\n                      <ion-item style=\\\"margin-top: -12px;\\r\\n                                      color: black;\\\">\\r\\n                        <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                        <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticeLecturersToPOSelectedDate($event)\\\"></ion-datetime>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n                  \\r\\n\\r\\n              </ion-card-header>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <div style=\\\"border-top: #ccc solid 2px;\\r\\n                            width: 100%;\\r\\n                            margin-top: -20px;\\\">\\r\\n                </div>\\r\\n\\r\\n                <!-- No Notices Available Text -->\\r\\n                <div *ngIf=\\\"noNoticeLecturersToPOText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                  <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  padding: 5px;\\\">\\r\\n                    <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                      No Notices were sent from lecturers for the selected date\\r\\n                    </ion-label>\\r\\n                  </ion-item>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                transform: translateX(-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"loadingSpinnerLecturerToPO\\\"></ion-spinner>\\r\\n\\r\\n                <div style=\\\"overflow-y: scroll;\\r\\n                              width: 100%;\\r\\n                              height: 610px;\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedLecturerPONotices\\\">\\r\\n\\r\\n                          <ion-card>\\r\\n                            <ion-card-header>\\r\\n                              <ion-card-title>\\r\\n                                {{ list.payload.doc.data().noticeTitle }}\\r\\n                              </ion-card-title>\\r\\n                              <ion-card-subtitle>\\r\\n                                {{ list.payload.doc.data().noticeDescription }} \\r\\n                              </ion-card-subtitle>\\r\\n                            </ion-card-header>\\r\\n                            <ion-card-content>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Category: </b>\\r\\n                                {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                              </ion-label>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Published: </b> <br>\\r\\n                                {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                              </ion-label>\\r\\n                              <ion-grid>\\r\\n                                <ion-row>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                              height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                      <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        More\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                             height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Edit\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-col>\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                              height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Remove\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                              </ion-grid>\\r\\n                            </ion-card-content>\\r\\n                          </ion-card>\\r\\n\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </div>\\r\\n                \\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n\\r\\n\\r\\n          </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n\\r\\n          <ion-col>\\r\\n\\r\\n             <!-- Notices Sent to Students -->\\r\\n              <ion-card style=\\\"width: 99%;\\r\\n                              height: 830px;\\r\\n                              background-color: white;\\r\\n                              margin-left: 4px;\\r\\n                              margin-top: 0px;\\\">\\r\\n                <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n                  <ion-grid>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                          Notices Sent to Students \\r\\n                        </ion-label>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                          <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                          <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticePOToStudentsSelectedDate($event)\\\"></ion-datetime>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n                  \\r\\n\\r\\n                </ion-card-header>\\r\\n                <ion-card-content>\\r\\n\\r\\n                  <div style=\\\"border-top: #ccc solid 2px;\\r\\n                              width: 100%;\\r\\n                              margin-top: -20px;\\\">\\r\\n                  </div>\\r\\n\\r\\n                  <!-- No Notices Available Text -->\\r\\n                  <div *ngIf=\\\"noNoticePOToStudentsText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                    <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                    border-radius: 5px;\\r\\n                                    padding: 5px;\\\">\\r\\n                      <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                        No Notices were sent to students for the selected date\\r\\n                      </ion-label>\\r\\n                    </ion-item>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Loading Spinner -->\\r\\n                  <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                  left: 50%;\\r\\n                                                  transform: translateX(-50%);\\r\\n                                                  margin-top: 20px;\\r\\n                                                  height: 100px;\\r\\n                                                  width: 100px;\\\" *ngIf=\\\"loadingSpinnerPOToStudent\\\"></ion-spinner>\\r\\n\\r\\n                  <div style=\\\"overflow-y: scroll;\\r\\n                              width: 100%;\\r\\n                              height: 740px;\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedPOStudentNotices\\\">\\r\\n\\r\\n                          <ion-card>\\r\\n                            <ion-card-header>\\r\\n                              <ion-card-title>\\r\\n                                {{ list.payload.doc.data().noticeTitle }}\\r\\n                              </ion-card-title>\\r\\n                              <ion-card-subtitle>\\r\\n                                {{ list.payload.doc.data().noticeDescription }}\\r\\n                              </ion-card-subtitle>\\r\\n                            </ion-card-header>\\r\\n                            <ion-card-content>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Category: </b>\\r\\n                                {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                              </ion-label>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Published: </b> <br>\\r\\n                                {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                              </ion-label>\\r\\n                              <ion-grid>\\r\\n                                <ion-row>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                              height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                      <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        More\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                             height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Edit\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-col>\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                              height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Remove\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                              </ion-grid>\\r\\n                            </ion-card-content>\\r\\n                          </ion-card>\\r\\n\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </div>\\r\\n\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NoticesPage } from './notices.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NoticesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NoticesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NoticesPageRoutingModule } from './notices-routing.module';\r\n\r\nimport { NoticesPage } from './notices.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NoticesPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NoticesPage]\r\n})\r\nexport class NoticesPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-label {\\n  color: black; }\\n\\n.newNoticeFormLabel {\\n  font-size: 17px;\\n  position: relative;\\n  top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL25vdGljZXMvQzpcXFVzZXJzXFxyYW51bFxcRG9jdW1lbnRzXFxHaXRIdWJcXDJuZCBZZWFyXFwybmQgU2VtZXN0ZXJcXFVPUF9TRV9ZMlMyLVBVU0wyMDA4LUlOVFJPRFVDVElPTi1UTy1JTlRFUk5FVC1PRi1USElOR1NcXFdvcmtzcGFjZVxcaVNBTS9zcmNcXGFwcFxcb2ZmaWNlXFxub3RpY2VzXFxub3RpY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29mZmljZS9ub3RpY2VzL25vdGljZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbn1cclxuXHJcbmlvbi1jYXJke1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLm5ld05vdGljZUZvcm1MYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-notices',\r\n  templateUrl: './notices.page.html',\r\n  styleUrls: ['./notices.page.scss'],\r\n})\r\nexport class NoticesPage implements OnInit {\r\n\r\n\r\n  newStudentNoticeSendForm: FormGroup;\r\n\r\n  newLecturerNoticeSendForm: FormGroup;\r\n\r\n  showLoadingDot: Boolean = true;\r\n\r\n  userFaculty;\r\n\r\n\r\n  currentDate;\r\n\r\n  dateThreeDaysBeforeCurrentDate;\r\n\r\n\r\n  noNoticePOToLecturersText: Boolean = false;\r\n\r\n  noNoticeLecturersToPOText: Boolean = false;\r\n\r\n  noNoticePOToStudentsText: Boolean = false;\r\n\r\n  \r\n\r\n  loadingSpinnerPOToLecturer: Boolean = true;\r\n\r\n  loadingSpinnerLecturerToPO: Boolean = true;\r\n\r\n  loadingSpinnerPOToStudent: Boolean = true;\r\n  \r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private noticesService: FirebaseService,\r\n    private alertController: AlertController,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private popoverController: PopoverController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userFaculty = this.sideMenuPageUserFaculty.passLoggedInUserFaculty();\r\n\r\n    this.currentDate = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate.setDate(this.currentDate.getDate()-3);\r\n\r\n\r\n    this.retrievePublishedLecturerToPONotice();\r\n\r\n    this.retrievePublishedPOToStudentNotice();\r\n\r\n    this.retrievePublishedPOToLecturerNotice();\r\n\r\n\r\n    this.retrieveRegisteredModules();\r\n\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n    this.retrievePublishedNoticeCategories();\r\n\r\n    // New Student Notice Form\r\n    this.newStudentNoticeSendForm = this.formBuilder.group({\r\n      noticeTitle: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeDescription: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeCategory: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeRecipientModule: new FormControl(''),\r\n      noticeRecipientBatch: new FormControl('')\r\n    });\r\n\r\n\r\n    // New Lecturer Notice Form\r\n    this.newLecturerNoticeSendForm = this.formBuilder.group({\r\n      noticeTitle: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeDescription: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeCategory: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeRecipient: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ]))\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  moreDetailsNotice(event, value){\r\n    \r\n  }\r\n\r\n  // Retrieving registered modules from the firestore database\r\n  registeredModules;\r\n  retrieveRegisteredModules = () =>\r\n    this.noticesService.retrieveRegisteredModules(this.userFaculty).subscribe(response => (this.registeredModules = response));\r\n\r\n  // Retrieving published batches from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => \r\n    this.noticesService.retrievePublishedBatch(this.userFaculty).subscribe(response => (this.publishedBatches = response));\r\n\r\n  // Retrieving registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () =>\r\n    this.noticesService.retrieveRegisteredLecturers().subscribe(response => (this.registeredLecturers = response));\r\n\r\n  // Retrieving published notice categories from the firestore database\r\n  publishedNoticeCategories;\r\n  retrievePublishedNoticeCategories = () => \r\n    this.noticesService.retrievePublishedNoticeCategories().subscribe(response => (this.publishedNoticeCategories = response));\r\n\r\n\r\n\r\n  // Retrieving Lecturer to PO notices from current date to three days ago from the firestore database\r\n  publishedLecturerPONotices;\r\n  retrievePublishedLecturerToPONotice = () =>\r\n    this.noticesService.retrievePublishedLecturerToPONotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerLecturerToPO = false;\r\n        this.publishedLecturerPONotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerLecturerToPO = false;\r\n        this.noNoticeLecturersToPOText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerLecturerToPO = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  // Retrieving PO to Student notices from current date to three days ago from the firestore database\r\n  publishedPOStudentNotices;\r\n  retrievePublishedPOToStudentNotice = () =>\r\n    this.noticesService.retrievePublishedPOToStudentNotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToStudent = false;\r\n        this.publishedPOStudentNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToStudent = false;\r\n        this.noNoticePOToStudentsText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToStudent = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  // Retrieving PO to Lecturer notices from current date to three days ago from the firestore database\r\n  publishedPOLecturerNotices;\r\n  retrievePublishedPOToLecturerNotice = () =>\r\n    this.noticesService.retrievePublishedPOToLecturerNotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToLecturer = false;\r\n        this.publishedPOLecturerNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToLecturer = false;\r\n        this.noNoticePOToLecturersText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToLecturer = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n\r\n\r\n\r\n  /* Javascript Functions */\r\n  showLecturerNoticeForm(){\r\n    var userClickOnLecturer = document.getElementById(\"newLecturerNoticeSubmit\");\r\n    var userClickOnStudent = document.getElementById(\"newStudentNoticeSubmit\");\r\n    var newNoticeSectionCard = document.getElementById(\"newNoticeFormSection\");\r\n    if(userClickOnStudent.style.display === \"inline\"){\r\n      userClickOnStudent.style.display = \"none\";\r\n      userClickOnLecturer.style.display = \"inline\";\r\n      newNoticeSectionCard.style.background = \"#CDE7F9\";\r\n    }\r\n  }\r\n  showStudentNoticeForm(){\r\n    var userClickOnLecturer = document.getElementById(\"newLecturerNoticeSubmit\");\r\n    var userClickOnStudent = document.getElementById(\"newStudentNoticeSubmit\");\r\n    var newNoticeSectionCard = document.getElementById(\"newNoticeFormSection\");\r\n    if(userClickOnLecturer.style.display === \"inline\"){\r\n      userClickOnLecturer.style.display = \"none\";\r\n      userClickOnStudent.style.display = \"inline\";\r\n      newNoticeSectionCard.style.background = \"#F3FAFC\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n\r\n  // Creating new student notice\r\n  doNewStudentNoticeSend(value){\r\n\r\n    // Displaying confirm box requesting to continue to firestore data submission\r\n    this.confirmNewStudentNotice('Send Student Notice', 'Click on continue to create new student notice', value);    \r\n    \r\n  }\r\n\r\n  // Confirm Box Implementation (Create New Student Notice)\r\n  async confirmNewStudentNotice ( title: string, content: string, value) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Student Notice Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Student Notice Request Accepted\");\r\n\r\n            // Adding new student notice details into firestore if the user agrees\r\n            this.noticesService.newStudentNoticeDetailsSubmission(value, this.sideMenuPageUserFaculty.passLoggedInUserId(), this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            // Displaying new student notice created confirmation in alert message \r\n            this.alertNotice('New Student Notice Created Successfully', 'Student notice has been created successfully. Please refer the \"Notices Sent to Students\" section to view notice.');\r\n\r\n            // Resetting the new student notice form to initial state\r\n            this.newStudentNoticeSendForm.reset();\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Creating new student notice\r\n  doNewLecturerNoticeSendForm(value){\r\n\r\n      // Displaying confirm box requesting to continue to add the detail to firestore\r\n      this.confirmNewLecturerNotice('Send Lecturer Notice', 'Click on continue to create new lecturer notice', value);    \r\n\r\n  }\r\n\r\n  // Confirm Box Implementation (Create New Student Notice)\r\n  async confirmNewLecturerNotice ( title: string, content: string, value) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Lecturer Notice Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Lecturer Notice Request Accepted\");\r\n\r\n            // Adding new lecturer notice details into firestore if the user agrees\r\n            this.noticesService.newLecturerNoticeDetailsSubmission(value, this.sideMenuPageUserFaculty.passLoggedInUserId(), this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            // Displaying new lecturer notice created confirmation in alert message \r\n            this.alertNotice('New Lecturer Notice Created Successfully', 'Lecturer notice has been created successfully. Please refer the \"Notices Sent to Students\" section to view notice.');\r\n\r\n            // Resetting the new lecturer notice form to initial state\r\n            this.newLecturerNoticeSendForm.reset();\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // Process of retrieving notices sent to lecturers for the selected date from the firestore database\r\n  retrieveNoticePOToLecturersSelectedDate(event){\r\n\r\n    this.noNoticePOToLecturersText = false;\r\n\r\n    // Assigning existing notices on frontend to null\r\n    this.publishedPOLecturerNotices = null;\r\n\r\n    this.loadingSpinnerPOToLecturer = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedPOToLecturerSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToLecturer = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticePOToLecturersText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedPOLecturerNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToLecturer = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticePOToLecturersText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToLecturer = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Process of retrieving notices sent from lectures for the selected date from the firestore database\r\n  retrieveNoticeLecturersToPOSelectedDate(event){\r\n\r\n    this.noNoticeLecturersToPOText = false;\r\n  \r\n    // Assigning existing notices on frontend to null\r\n    this.publishedLecturerPONotices = null;\r\n\r\n    this.loadingSpinnerLecturerToPO = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedLecturerToPONoticeSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerLecturerToPO = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticeLecturersToPOText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedLecturerPONotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerLecturerToPO = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticeLecturersToPOText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerLecturerToPO = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  // Process of retrieving notices sent to students for the selected date from the firestore database\r\n  retrieveNoticePOToStudentsSelectedDate(event){\r\n\r\n    this.noNoticePOToStudentsText = false;\r\n\r\n    // Assigning existing notices on frontend to null\r\n    this.publishedPOStudentNotices = null;\r\n\r\n    this.loadingSpinnerPOToStudent = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedPOToStudentNoticeSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToStudent = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticePOToStudentsText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedPOStudentNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToStudent = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticePOToStudentsText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToStudent = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n \r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"notices-notices-module-es5.js"}