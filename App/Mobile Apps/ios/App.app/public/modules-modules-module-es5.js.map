{"version":3,"sources":["src/app/office/modules/modules.page.html","src/app/office/modules/modules-routing.module.ts","src/app/office/modules/modules.module.ts","src/app/office/modules/modules.page.scss","src/app/office/modules/modules.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Modules</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card style=\\\"width: 100%;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>Search Registered Modules</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <form [formGroup]=\\\"searchRegisteredModuleForm\\\" (ngSubmit)=\\\"doSearchRegisteredModule(searchRegisteredModuleForm.value)\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                    <ion-col size=\\\"3\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-input type=\\\"text\\\" clearInput style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Module Code\\\" formControlName=\\\"moduleCode\\\" (ionInput)=\\\"validateModuleCodeInput($event)\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"0.5\\\">\\r\\n                      <ion-label style=\\\"font-size: 20px;\\r\\n                                        position: absolute;\\r\\n                                        top: 50%;\\r\\n                                        left: 50%;\\r\\n                                        transform: translate(-50%, -50%);\\\">\\r\\n                        OR\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"3\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-input type=\\\"text\\\" clearInput style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Module Title\\\" formControlName=\\\"moduleTitle\\\" (ionInput)=\\\"validateModuleTitleInput($event)\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"0.5\\\">\\r\\n                      <ion-label style=\\\"font-size: 20px;\\r\\n                                        position: absolute;\\r\\n                                        top: 50%;\\r\\n                                        left: 50%;\\r\\n                                        transform: translate(-50%, -50%);\\\">\\r\\n                        OR\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"3\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label style=\\\"color: #ccc;\\\">\\r\\n                          Select Degree Program\\r\\n                        </ion-label>\\r\\n                        <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 40%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                          <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\">{{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}</ion-select-option>\\r\\n                        </ion-select>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"2\\\">\\r\\n                      <ion-button expand=\\\"block\\\" type=\\\"submit\\\" style=\\\"margin-top: 0px;\\r\\n                                                                      min-height: 50px;\\r\\n                                                                      font-size: 18px;\\\" [disabled]=\\\"searchRegisteredModuleForm.valid\\\">\\r\\n                        <ion-icon name=\\\"search-outline\\\" style=\\\"margin-right: 10px;\\\"></ion-icon>\\r\\n                        SEARCH\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </form>\\r\\n           \\r\\n            \\r\\n\\r\\n\\r\\n            <div style=\\\"overflow-y: scroll; \\r\\n                        height: 500px;\\r\\n                        margin-top: 15px;\\r\\n                        border-top: #ccc solid 1px;\\\">\\r\\n\\r\\n\\r\\n              <!-- Page loading search module text -->\\r\\n              <div *ngIf=\\\"pageLoadSearchModuleText\\\" style=\\\"position: absolute;\\r\\n                                                          top: 150px;\\r\\n                                                          left: 50%;\\r\\n                                                          transform: translateX(-50%);\\r\\n                                                          font-size: 18px;\\r\\n                                                          border: rgb(100, 116, 121) solid 2px;\\r\\n                                                          border-radius: 5px;\\r\\n                                                          padding: 15px;\\r\\n                                                          min-width: 53%;\\\">\\r\\n                <ion-icon name=\\\"chevron-up-circle-outline\\\" style=\\\"color: rgb(8, 177, 219);\\r\\n                                                                  font-size: 30px;\\r\\n                                                                  margin-top: 2px;\\r\\n                                                                  margin-right: 10px;\\\"></ion-icon>\\r\\n                <ion-label style=\\\"position: relative;\\r\\n                                  top: -5px;\\\">\\r\\n                  Please populate a field and click 'Search' button to search for a registered module.\\r\\n                </ion-label>\\r\\n              </div>\\r\\n\\r\\n              <!-- Loading Spinner -->\\r\\n              <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\r\\n                                              margin-top: 20px;\\r\\n                                              height: 100px;\\r\\n                                              width: 100px;\\\" *ngIf=\\\"loadingSpinnerSearchRegisteredModule\\\"></ion-spinner>\\r\\n\\r\\n              <ion-grid>\\r\\n\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"4\\\" size-sm=\\\"4\\\" size-lg=\\\"4\\\" *ngFor=\\\"let item of registeredModules\\\">\\r\\n\\r\\n                    <ion-card style=\\\"min-width: 100%;\\r\\n                                     min-height: 150px;\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-card-title>{{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}</ion-card-title>\\r\\n                      </ion-card-header>\\r\\n                      <ion-card-content>\\r\\n                        <ion-label>\\r\\n                          <b>Credits:</b> {{ item.payload.doc.data().creditsWeighting }}\\r\\n                        </ion-label>\\r\\n                        <br>\\r\\n                        <ion-label>\\r\\n                          <b>Degree Program:</b> {{ item.payload.doc.data().degree }}, \\r\\n                        </ion-label>\\r\\n                        <br>\\r\\n                        <ion-label style=\\\"margin-left: 100px;\\\">\\r\\n                          {{ item.payload.doc.data().awardingBodyUniversity }} \\r\\n                        </ion-label>\\r\\n                        <br>\\r\\n                        <ion-label>\\r\\n                          <b>Module Leader:</b> {{ item.payload.doc.data().moduleLeader }} \\r\\n                        </ion-label>\\r\\n                        <br>\\r\\n                        <ion-label>\\r\\n                          <b>Academic Period:</b> Year {{ item.payload.doc.data().academicPeriod.academicYear }}, Semester {{ item.payload.doc.data().academicPeriod.academicSemester }}  \\r\\n                        </ion-label>\\r\\n\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col>\\r\\n                              <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" style=\\\"min-width: 100%;\\\" (click)=\\\"moreDetailsRegisteredModule($event, item)\\\">\\r\\n                                <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 25px;\\r\\n                                                                      margin-right: 5px;\\\"></ion-icon>\\r\\n                                More Details\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                            <ion-col>\\r\\n                              <ion-button expand=\\\"block\\\" color=\\\"warning\\\" style=\\\"min-width: 100%;\\\" (click)=\\\"editRegisteredModule(item)\\\">\\r\\n                                <ion-icon name=\\\"create\\\" style=\\\"font-size: 25px;\\r\\n                                                              margin-right: 5px;\\r\\n                                                              color: white;\\\"></ion-icon>\\r\\n                                <ion-label style=\\\"color: white;\\\">\\r\\n                                  Edit Details\\r\\n                                </ion-label>\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                            <ion-col>\\r\\n                              <ion-button expand=\\\"block\\\" color=\\\"danger\\\" style=\\\"min-width: 100%;\\\" (click)=\\\"removeRegisteredModule('Confirmation Required', 'Module will be removed, do you want to continue?' , item.payload.doc.id)\\\">\\r\\n                                <ion-icon name=\\\"trash\\\" style=\\\"font-size: 25px;\\r\\n                                                              margin-right: 5px;\\\"></ion-icon>\\r\\n                                Remove\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n\\r\\n                      </ion-card-content>\\r\\n\\r\\n                    </ion-card>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n\\r\\n              </ion-grid>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n               \\r\\n              <ion-card style=\\\"margin-top: -10px;\\\">\\r\\n                <ion-card-header>\\r\\n                  <ion-card-title>Register Module</ion-card-title>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content>\\r\\n\\r\\n                \\r\\n                  <form [formGroup]=\\\"registerModuleForm\\\" (ngSubmit)=\\\"doRegisterModule(registerModuleForm.value)\\\"> \\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\">\\r\\n                            Module Code\\r\\n                          </ion-label>\\r\\n\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-input type=\\\"text\\\" placeholder=\\\"Code\\\" clearInput formControlName=\\\"moduleCode\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\">\\r\\n                            Module Title\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-input type=\\\"text\\\" placeholder=\\\"Title\\\" clearInput formControlName=\\\"moduleTitle\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\">\\r\\n                            Credits Weighting\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-item cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-label class=\\\"registerModuleUserInputLabel\\\">Credits Weighting</ion-label>\\r\\n                            <ion-select placeholder=\\\"Credits\\\" cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"creditsWeighting\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedModuleCreditsWeighting\\\" value=\\\"{{ item.payload.doc.data().creditsWeighting }}\\\">{{ item.payload.doc.data().creditsWeighting }} credits</ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\">\\r\\n                            Degree Program\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-label class=\\\"registerModuleUserInputLabel\\\">Degree</ion-label>\\r\\n                            <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 80%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" \\r\\n                                value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}</ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\" style=\\\"top: 15px;\\\">\\r\\n                            Academic Period\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <div style=\\\"border: #ccc solid 1px;\\r\\n                                          border-radius: 5px;\\\">\\r\\n\\r\\n                            <ion-row>\\r\\n                              <ion-select placeholder=\\\"Year\\\" style=\\\"min-width: 95%;\\\" formControlName=\\\"academicPeriodYear\\\">\\r\\n                                <ion-select-option value=\\\"1\\\">Year 1</ion-select-option>\\r\\n                                <ion-select-option value=\\\"2\\\">Year 2</ion-select-option>\\r\\n                                <ion-select-option value=\\\"3\\\">Year 3</ion-select-option>\\r\\n                                <ion-select-option value=\\\"4\\\">Year 4</ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-select placeholder=\\\"Semester\\\" style=\\\"min-width: 95%;\\\" formControlName=\\\"academicPeriodSemester\\\">\\r\\n                                <ion-select-option value=\\\"1\\\">Semester 1</ion-select-option>\\r\\n                                <ion-select-option value=\\\"2\\\">Semester 2</ion-select-option>\\r\\n                                <ion-select-option value=\\\"3\\\">Semester 3</ion-select-option>\\r\\n                                <ion-select-option value=\\\"4\\\">Semester 4</ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-row>\\r\\n\\r\\n                          </div>\\r\\n\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\" style=\\\"top: 15px;\\\">\\r\\n                            Module Leader\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-label class=\\\"registerModuleUserInputLabel\\\">Module Leader</ion-label>\\r\\n                            <ion-select placeholder=\\\"Leader\\\" cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"moduleLeader\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of registeredLecturerUsers\\\" \\r\\n                                value=\\\"{{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\\">\\r\\n                                {{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\" style=\\\"top: 15px;\\\">\\r\\n                            Assigned Lecturer\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-label class=\\\"registerModuleUserInputLabel\\\">Assigned Lecturer</ion-label>\\r\\n                            <ion-select placeholder=\\\"Lecturer\\\" cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"assignedLecturer\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of registeredLecturerUsers\\\" \\r\\n                                value=\\\"{{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\\">\\r\\n                                {{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n                          <ion-label class=\\\"registerModuleFormLabel\\\" style=\\\"top: 15px;\\\">\\r\\n                            Assigned Lecture Hall\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                          <ion-item class=\\\"registerModuleFormItem\\\">\\r\\n                            <ion-label class=\\\"registerModuleUserInputLabel\\\">Assigned Lecture Hall</ion-label>\\r\\n                            <ion-select placeholder=\\\"Lecture Hall\\\" cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"assignedLectureHall\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedLectureHalls\\\" value=\\\"{{ item.payload.doc.data().lectureHall }}\\\">{{ item.payload.doc.data().lectureHall }}</ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col>\\r\\n                          <ion-button  style=\\\"position: relative;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\\" type=\\\"submit\\\">                      \\r\\n                            Register\\r\\n                          </ion-button>\\r\\n                        </ion-col>\\r\\n\\r\\n                      </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n                    </ion-grid>\\r\\n                  </form>\\r\\n\\r\\n\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ModulesPage } from './modules.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ModulesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ModulesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ModulesPageRoutingModule } from './modules-routing.module';\r\n\r\nimport { ModulesPage } from './modules.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ModulesPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ModulesPage]\r\n})\r\nexport class ModulesPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-label {\\n  color: black; }\\n\\nion-item {\\n  border: #202020 solid 1px;\\n  border-radius: 5px; }\\n\\n.registerModuleFormItem {\\n  border: #ccc solid 1px; }\\n\\n.registerModuleUserInputLabel {\\n  color: #ccc; }\\n\\n.registerModuleFormLabel {\\n  position: relative;\\n  top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL21vZHVsZXMvQzpcXFVzZXJzXFxyYW51bFxcRG9jdW1lbnRzXFxHaXRIdWJcXDJuZCBZZWFyXFwybmQgU2VtZXN0ZXJcXFVPUF9TRV9ZMlMyLVBVU0wyMDA4LUlOVFJPRFVDVElPTi1UTy1JTlRFUk5FVC1PRi1USElOR1NcXFdvcmtzcGFjZVxcaVNBTS9zcmNcXGFwcFxcb2ZmaWNlXFxtb2R1bGVzXFxtb2R1bGVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSx5QkFBaUM7RUFDakMsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksV0FBVyxFQUFBOztBQUdmO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29mZmljZS9tb2R1bGVzL21vZHVsZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbn1cclxuXHJcbmlvbi1jYXJke1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW9uLWl0ZW17XHJcbiAgICBib3JkZXI6IHJnYigzMiwgMzIsIDMyKSBzb2xpZCAxcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5yZWdpc3Rlck1vZHVsZUZvcm1JdGVte1xyXG4gICAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDs7XHJcbn1cclxuXHJcbi5yZWdpc3Rlck1vZHVsZVVzZXJJbnB1dExhYmVse1xyXG4gICAgY29sb3I6ICNjY2M7XHJcbn1cclxuXHJcbi5yZWdpc3Rlck1vZHVsZUZvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AlertController, ModalController, NavParams, PopoverController } from '@ionic/angular';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { DegreeProgramsModalPage } from '../commonModals/degree-programs-modal/degree-programs-modal.page';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { EditModuleModalPage } from './edit-module-modal/edit-module-modal.page';\r\nimport { MoreDetailsModulePopoverPage } from './more-details-module-popover/more-details-module-popover.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-modules',\r\n  templateUrl: './modules.page.html',\r\n  styleUrls: ['./modules.page.scss'],\r\n})\r\nexport class ModulesPage implements OnInit {\r\n\r\n  searchRegisteredModuleForm: FormGroup;\r\n\r\n  registerModuleForm: FormGroup;\r\n\r\n  // Loading spinner variable declaration\r\n  loadingSpinnerSearchRegisteredModule: Boolean = false;\r\n\r\n  // Page load search module text variable declaration\r\n  pageLoadSearchModuleText: Boolean = true;\r\n\r\n\r\n  constructor(\r\n    private modulesService: FirebaseService,\r\n    private formBuilder: FormBuilder,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private popoverController: PopoverController,\r\n    private sideMenuPageUserFaculty: SideMenuPage\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Disabling the button to search for registered modules upon load\r\n    this.searchRegisteredModuleButtonDisabled = \"true\";\r\n   \r\n    this.retrievePublishedModuleCreditsWeightingActive();\r\n\r\n    this.retrievePublishedDegreeProgram();\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n    this.retrievePublishedLectureHalls();\r\n\r\n    this.searchRegisteredModuleForm = this.formBuilder.group({\r\n      moduleCode: new FormControl(''),\r\n      moduleTitle: new FormControl(''),\r\n      degreeProgram: new FormControl('')\r\n    });\r\n\r\n    this.registerModuleForm = this.formBuilder.group({\r\n      moduleCode: new FormControl('', Validators.required),\r\n      moduleTitle: new FormControl('', Validators.required),\r\n      creditsWeighting: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      academicPeriod: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required),\r\n      moduleLeader: new FormControl('', Validators.required),\r\n      assignedLecturer: new FormControl('', Validators.required),\r\n      assignedLectureHall: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  \r\n\r\n\r\n  // Retrieving the published module credits weighting and their details from the firestore database\r\n  publishedModuleCreditsWeighting;\r\n\r\n  retrievePublishedModuleCreditsWeightingActive = () => {\r\n    this.modulesService.retrievePublishedModuleCreditsWeightingActive().subscribe(response => (this.publishedModuleCreditsWeighting = response));\r\n  }\r\n\r\n\r\n  // Retrieving the published degree programs and their details from the firestore database\r\n  publishedDegreePrograms;\r\n\r\n  retrievePublishedDegreeProgram = () => {\r\n    this.modulesService.retrievePublishedDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedDegreePrograms = response));\r\n  }\r\n\r\n  // Implementation of generating an array for the count of, no of years and no of semesters\r\n  convertToArray(n: number): any[] {\r\n    return Array(n);\r\n  }\r\n\r\n\r\n  // Retrieving registered lecturer users and their details from the firestore database\r\n  registeredLecturerUsers;\r\n\r\n  retrieveRegisteredLecturers = () => {\r\n    this.modulesService.retrieveRegisteredLecturers().subscribe(response => (this.registeredLecturerUsers = response));\r\n  }\r\n\r\n\r\n  // Retrieving published lecture halls and their details from the firestore database\r\n  publishedLectureHalls;\r\n\r\n  retrievePublishedLectureHalls = () => {\r\n    this.modulesService.retrievePublishedLectureHalls(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedLectureHalls = response))\r\n  }\r\n\r\n  \r\n  publishedDegreeProgram;\r\n  awardingBodyUniversity;\r\n\r\n  async retrieveAwardingBodyUniversity(event){\r\n\r\n    let selectedDegree = event.detail.value;\r\n\r\n    // Retrieving the awardingBody University of the selected degree\r\n    this.modulesService.retrievingAwardingBodyUniversityOfDegree(selectedDegree, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedDegreeProgram =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.awardingBodyUniversity = firestoreDoc.awardingBodyUniversity;\r\n        console.log(this.awardingBodyUniversity);\r\n      })\r\n    ));\r\n\r\n  }\r\n\r\n\r\n  // Declaring variable to store the string value of true or false for the search registered modules button\r\n  searchRegisteredModuleButtonDisabled: string;\r\n\r\n  // Checking if user entered a value to module code field (Search Registered Module section)\r\n  validateModuleCodeInput(evModuleCode: any){\r\n    \r\n    // Assigning entered value into this variable\r\n    let moduleCodeValue = evModuleCode.target.value;\r\n\r\n    // If field is not empty, search registered modules button will be enabled\r\n    if(moduleCodeValue != \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"false\";\r\n    }// If field id empty, search registered modules button will be disabled\r\n    else if (moduleCodeValue == \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"true\";\r\n    }\r\n  }\r\n\r\n  // Checking if user entered a value to module title field (Search Registered Module section)\r\n  validateModuleTitleInput(evModuleTitle: any){\r\n\r\n    // Assigning entered value into this variable\r\n    let moduleTitleValue = evModuleTitle.target.value;\r\n\r\n    // If field is not empty, search registered modules button will be enabled\r\n    if(moduleTitleValue != \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"false\";\r\n    }// If field id empty, search registered modules button will be disabled\r\n    else if (moduleTitleValue == \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"true\";\r\n    }\r\n  }\r\n\r\n  // Checking if user entered a value to degree program field (Search Registered Module section)\r\n  validateDegreeProgramSelect(evDegreeProgram: any){\r\n\r\n    // Assigning entered value into this variable\r\n    let degreeProgramValue = evDegreeProgram.target.value;\r\n\r\n    // If field is not empty, search registered modules button will be enabled\r\n    if(degreeProgramValue != \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"false\";\r\n    }// If field id empty, search registered modules button will be disabled\r\n    else if (degreeProgramValue == \"\"){\r\n      this.searchRegisteredModuleButtonDisabled = \"true\";\r\n    }\r\n  }\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n  registeredModules;\r\n\r\n  // Used to store the user selected awarding body university, which is identified by the selected degree\r\n  userDataAwardingBodyUniversity;\r\n\r\n  doSearchRegisteredModule(value){\r\n\r\n    // Setting page load search module text to false\r\n    this.pageLoadSearchModuleText = false;\r\n\r\n    // Setting loading spinner as true until necessary content is loaded\r\n    this.loadingSpinnerSearchRegisteredModule = true;\r\n\r\n    // Depending on the user's input the necessary reponse and operation is taken\r\n    if(value.moduleCode != \"\" && value.moduleTitle != \"\" && value.degreeProgram != \"\"){\r\n\r\n      // Alert notice with relavant message\r\n      this.alertNotice(\"ALERT\", \"You have entered a Module Code, Title and selected a Degree Program. Module search will proceed with the Module Code\");\r\n\r\n      // Retrieving registered modules with the search value of moduleCode\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(response => (this.registeredModules = response));\r\n\r\n      // Assigning loading spinner to false upon the necessary content has loaded\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n    }\r\n    else if(value.moduleCode != \"\" && value.moduleTitle){\r\n\r\n      // Alert notice with relavant message\r\n      this.alertNotice(\"ALERT\", \"You have entered a Module Code and Title. Module search will proceed with the Module Code\");\r\n\r\n      // Retrieving registered modules with the search value of moduleCode\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(response => (this.registeredModules = response));\r\n      \r\n      // Assigning loading spinner to false upon the necessary content has loaded\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n    \r\n    }\r\n    else if(value.moduleTitle != \"\" && value.degreeProgram != \"\"){\r\n\r\n      // Alert notice with relavant message\r\n      this.alertNotice(\"ALERT\", \"You have entered a Module Title and selected a Degree Program. Module search will proceed with the Module Title\");\r\n\r\n      // Retrieving registered modules with the search value of moduleTitle\r\n      this.modulesService.retrieveRegisterdModulesModuleTitle(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleTitle).subscribe(response => (this.registeredModules = response));\r\n      \r\n      // Assigning loading spinner to false upon the necessary content has loaded\r\n      this.modulesService.retrieveRegisterdModulesModuleTitle(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleTitle).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n    }\r\n    else if(value.moduleCode != \"\" && value.degreeProgram != \"\"){\r\n\r\n      // Alert notice with relavant message\r\n      this.alertNotice(\"ALERT\", \"You have entered a Module Code and selected a Degree Program. Module search will proceed with the Module Code\");\r\n\r\n      // Retrieving registered modules with the search value of moduleCode\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(response => (this.registeredModules = response));\r\n      \r\n      // Assigning loading spinner to false upon the necessary content has loaded\r\n      this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n    }\r\n    else if(value.moduleCode != \"\" || value.moduleTitle != \"\" || value.degreeProgram != \"\"){\r\n    \r\n      if(value.moduleCode != \"\"){\r\n\r\n        // Retrieving registered modules with the search value of moduleCode\r\n        this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(response => (this.registeredModules = response));\r\n        \r\n        // Assigning loading spinner to false upon the necessary content has loaded\r\n        this.modulesService.retrieveRegisterdModulesModuleCode(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleCode).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n      }\r\n      if(value.moduleTitle != \"\"){\r\n\r\n        // Retrieving registered modules with the search value of moduleTitle\r\n        this.modulesService.retrieveRegisterdModulesModuleTitle(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleTitle).subscribe(response => (this.registeredModules = response));\r\n        \r\n        // Assigning loading spinner to false upon the necessary content has loaded\r\n        this.modulesService.retrieveRegisterdModulesModuleTitle(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.moduleTitle).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n      }\r\n      if(value.degreeProgram != \"\"){\r\n\r\n        // Retrieving registered modules with the search value of degreeProgram\r\n        this.modulesService.retrieveRegisterdModulesDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.degreeProgram, this.awardingBodyUniversity).subscribe(response => (this.registeredModules = response));\r\n        \r\n        // Assigning loading spinner to false upon the necessary content has loaded\r\n        this.modulesService.retrieveRegisterdModulesDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value.degreeProgram, this.awardingBodyUniversity).subscribe(() => this.loadingSpinnerSearchRegisteredModule = false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // Opening more details module popover\r\n  async moreDetailsRegisteredModule(ev: Event, value){\r\n    const moreDetailsModulePopover = await this.popoverController.create({\r\n      component: MoreDetailsModulePopoverPage,\r\n      componentProps: {\r\n        moduleDocId: value.payload.doc.id,\r\n        assignedLecturer: value.payload.doc.data().assignedLecturer,\r\n        assignedLectureHall: value.payload.doc.data().assignedLectureHall\r\n      },\r\n      event: ev\r\n    });\r\n\r\n    moreDetailsModulePopover.present();\r\n  }\r\n\r\n\r\n  // Opening edit module modal \r\n  async editRegisteredModule(value){\r\n    const editModuleModal = await this.modalController.create({\r\n      component: EditModuleModalPage,\r\n      // Passing values to the modal using 'componentProps'\r\n      componentProps: {\r\n        moduleDocId: value.payload.doc.id,\r\n        moduleCode: value.payload.doc.data().moduleCode,\r\n        moduleTitle: value.payload.doc.data().moduleTitle,\r\n        moduleCreditsWeighting: value.payload.doc.data().creditsWeighting,\r\n        moduleDegree: value.payload.doc.data().degree,\r\n        moduleAwardingBodyUniversity: value.payload.doc.data().awardingBodyUniversity,\r\n        moduleAcademicPeriodYear: value.payload.doc.data().academicPeriod.academicYear,\r\n        moduleAcademicPeriodSemester: value.payload.doc.data().academicPeriod.academicSemester,\r\n        moduleModuleLeader: value.payload.doc.data().moduleLeader,\r\n        moduleAssignedLecturer: value.payload.doc.data().assignedLecturer,\r\n        moduleAssignedLectureHall: value.payload.doc.data().assignedLectureHall,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editModuleModal.present();\r\n  }\r\n\r\n\r\n\r\n\r\n  // Confirm Box Implementation (Remove registered module process)\r\n  async removeRegisteredModule ( title: string, content: string, DocId) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Registered Module Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Registered Module Request Accepted\");\r\n\r\n            // Calling function to remove lecture session\r\n            this.modulesService.removeRegisteredModule(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), DocId);\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Function for the process of searching modules\r\n  doRegisterModule(value){\r\n\r\n    console.log(value);\r\n\r\n    // Calling the function to add the details into firestore database by passing the necessary value.\r\n    this.modulesService.registerModule(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity);\r\n\r\n    this.alertNotice(\"Module Registered\", \"Module has been registered.\");\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"modules-modules-module-es5.js"}