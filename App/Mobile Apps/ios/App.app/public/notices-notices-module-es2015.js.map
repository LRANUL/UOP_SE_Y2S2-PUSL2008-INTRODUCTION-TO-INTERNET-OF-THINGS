{"version":3,"sources":["./src/app/office/notices/notices.page.html","./src/app/office/notices/notices-routing.module.ts","./src/app/office/notices/notices.module.ts","./src/app/office/notices/notices.page.scss","./src/app/office/notices/notices.page.ts"],"names":[],"mappings":"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","file":"notices-notices-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Notices</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- Importing js file -->\\r\\n  <script src=\\\"../../../assets/js/accountNotices.js\\\"></script>\\r\\n\\r\\n\\r\\n  <!-- Vertical line in the center of the page -->\\r\\n  <!--\\r\\n  <div style=\\\"border-left: rgb(236, 236, 236) solid 2px;\\r\\n              height: 100%;\\r\\n              position: relative;\\r\\n              left: 50%;\\\">\\r\\n  </div>\\r\\n  -->\\r\\n\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Send New Notice\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n\\r\\n\\r\\n            <ion-card id=\\\"newNoticeFormSection\\\" style=\\\"background-color: #F3FAFC;\\\">\\r\\n              <ion-card-content style=\\\"margin-top: -20px;\\\">\\r\\n\\r\\n                <!-- Student and Lecturer Form Selection Buttons -->\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"full\\\" id=\\\"newNoticeButtonStudent\\\" (click)=\\\"showStudentNoticeForm()\\\" style=\\\"--background: #02A5D7;\\r\\n                                                                                                                    margin-left: -23px;\\r\\n                                                                                                                    margin-right: -5px;\\\">\\r\\n                        Student\\r\\n                      </ion-button> \\r\\n                    </ion-col>\\r\\n                    \\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"full\\\" id=\\\"newNoticeButtonLecturer\\\" (click)=\\\"showLecturerNoticeForm()\\\" style=\\\"--background: #0B80D3;\\r\\n                                                                                                                      margin-left: -5px;\\r\\n                                                                                                                      margin-right: -23px;\\\">\\r\\n                        Lecturer\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n                <!-- New Notice to Student Section -->\\r\\n                <div id=\\\"newStudentNoticeSubmit\\\" style=\\\"display: inline\\\">\\r\\n                \\r\\n                  <form [formGroup]=\\\"newStudentNoticeSendForm\\\" (ngSubmit)=\\\"doNewStudentNoticeSend(newStudentNoticeSendForm.value)\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Title\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Title\\\" clearInput formControlName=\\\"noticeTitle\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Description\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-textarea rows=11 style=\\\"height: 300px;\\r\\n                                                        min-width: 100%;\\\" placeholder=\\\"Enter Description\\\" formControlName=\\\"noticeDescription\\\"></ion-textarea>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Category\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-select interface=\\\"popover\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Category\\\" formControlName=\\\"noticeCategory\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedNoticeCategories\\\" value=\\\"{{ item.payload.doc.data().category }}\\\">\\r\\n                                {{ item.payload.doc.data().category }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Recipient\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeRecipientModule\\\" style=\\\"min-width: 100%;\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of registeredModules\\\" value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                  {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-label style=\\\"position: relative;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\\">\\r\\n                              <p>OR</p>\\r\\n                            </ion-label>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Batch\\\" formControlName=\\\"noticeRecipientBatch\\\" style=\\\"min-width: 100%;\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                  {{ item.payload.doc.data().batch }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Author\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" value=\\\"Program Office: {{ userFaculty }}\\\" readOnly style=\\\"min-width: 100%;\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\" style=\\\"position: relative;\\r\\n                                                                          left: 50%;\\r\\n                                                                          transform: translateX(-50%);\\\">\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!newStudentNoticeSendForm.valid\\\">\\r\\n                            Send Notice\\r\\n                          </ion-button>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                     \\r\\n\\r\\n\\r\\n                    </ion-grid>\\r\\n                  </form>\\r\\n\\r\\n                  \\r\\n                </div>\\r\\n                \\r\\n                <!-- Send New Notice to Lecturer -->\\r\\n                <div id=\\\"newLecturerNoticeSubmit\\\" style=\\\"display: none;\\\">\\r\\n                  <form [formGroup]=\\\"newLecturerNoticeSendForm\\\" (ngSubmit)=\\\"doNewLecturerNoticeSendForm(newLecturerNoticeSendForm.value)\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Title\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" clearInput placeholder=\\\"Enter Title\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeTitle\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Description\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-textarea rows=11 style=\\\"height: 300px;\\r\\n                                                        min-width: 100%;\\\" placeholder=\\\"Enter Description\\\" formControlName=\\\"noticeDescription\\\"></ion-textarea>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Category\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-select interface=\\\"popover\\\" placeholder=\\\"Select Category\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeCategory\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedNoticeCategories\\\" value=\\\"{{ item.payload.doc.data().category }}\\\">\\r\\n                                {{ item.payload.doc.data().category }}\\r\\n                              </ion-select-option>\\r\\n                            </ion-select>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Recipient\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-item style=\\\"width: 100%;\\\">\\r\\n                              <ion-select multiple=\\\"true\\\" cancelText=\\\"Close\\\" okText=\\\"SELECT\\\" placeholder=\\\"Select Lecturer\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"noticeRecipient\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" value=\\\"{{ item.payload.doc.id }}\\\">\\r\\n                                  {{ item.payload.doc.data().name.prefix }} {{ item.payload.doc.data().name.firstName }} {{ item.payload.doc.data().name.lastName }}\\r\\n                                </ion-select-option>\\r\\n                              </ion-select>\\r\\n                            </ion-item>\\r\\n                          </ion-row>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                          <ion-label class=\\\"newNoticeFormLabel\\\">\\r\\n                            Notice Author\\r\\n                          </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"8\\\" size-sm=\\\"12\\\" size-lg=\\\"8\\\" size-xl=\\\"8\\\">\\r\\n                          <ion-item>\\r\\n                            <ion-input type=\\\"text\\\" value=\\\"Program Office: {{ userFaculty }}\\\" readOnly style=\\\"min-width: 100%;\\\"></ion-input>\\r\\n                          </ion-item>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\" style=\\\"position: relative;\\r\\n                                                                          left: 50%;\\r\\n                                                                          transform: translateX(-50%);\\\">\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!newLecturerNoticeSendForm.valid\\\">\\r\\n                            Send Notice\\r\\n                          </ion-button>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Notices Sent to Lecturers -->\\r\\n        <ion-card style=\\\"width: 99%;\\r\\n                          height: 700px;\\r\\n                          background-color: white;\\r\\n                          margin-left: 4px;\\r\\n                          margin-top: 0px;\\\">\\r\\n            <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                      Notices Sent to Lecturers \\r\\n                    </ion-label>\\r\\n                  </ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-item style=\\\"margin-top: -12px;\\r\\n                                    color: black;\\\">\\r\\n                      <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                      <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticePOToLecturersSelectedDate($event)\\\"></ion-datetime>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n              \\r\\n\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n\\r\\n              <div style=\\\"border-top: #ccc solid 2px;\\r\\n                          width: 100%;\\r\\n                          margin-top: -20px;\\\">\\r\\n              </div>\\r\\n\\r\\n              <!-- No Notices Available Text -->\\r\\n              <div *ngIf=\\\"noNoticePOToLecturersText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                border-radius: 5px;\\r\\n                                padding: 5px;\\\">\\r\\n                  <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                    No Notices were sent to lecturers for the selected date\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n              </div>\\r\\n\\r\\n              <!-- Loading Spinner -->\\r\\n              <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\r\\n                                              margin-top: 20px;\\r\\n                                              height: 100px;\\r\\n                                              width: 100px;\\\" *ngIf=\\\"loadingSpinnerPOToLecturer\\\"></ion-spinner>\\r\\n\\r\\n              <div style=\\\"overflow-y: scroll;\\r\\n                          width: 100%;\\r\\n                          height: 610px;\\\">\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedPOLecturerNotices\\\">\\r\\n\\r\\n                      <ion-card>\\r\\n                        <ion-card-header>\\r\\n                          <ion-card-title>\\r\\n                            {{ list.payload.doc.data().noticeTitle }}\\r\\n                          </ion-card-title>\\r\\n                          <ion-card-subtitle>\\r\\n                            {{ list.payload.doc.data().noticeDescription }}\\r\\n                          </ion-card-subtitle>\\r\\n                        </ion-card-header>\\r\\n                        <ion-card-content>\\r\\n                          <ion-label>\\r\\n                            <b>Notice Category: </b>\\r\\n                            {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                          </ion-label>\\r\\n                          <ion-label>\\r\\n                            <b>Notice Published: </b> <br>\\r\\n                            {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                          </ion-label>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col style=\\\"width: 45px;\\\">\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                          height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                  <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    More\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                              <ion-col style=\\\"width: 45px;\\\">\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                         height: 40px;\\\">\\r\\n                                  <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    Edit\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                          height: 40px;\\\">\\r\\n                                  <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    Remove\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-content>\\r\\n                      </ion-card>\\r\\n\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"6\\\">\\r\\n        \\r\\n        <ion-row>\\r\\n\\r\\n          <ion-col>\\r\\n\\r\\n            <!-- Notices From Lecturers -->\\r\\n            <ion-card style=\\\"width: 99%;\\r\\n                            height: 700px;\\r\\n                            background-color: white;\\r\\n                            margin-left: 4px;\\r\\n                            margin-top: 10px;\\\">\\r\\n              <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                        Notices From Lecturers \\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col>\\r\\n                      <ion-item style=\\\"margin-top: -12px;\\r\\n                                      color: black;\\\">\\r\\n                        <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                        <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticeLecturersToPOSelectedDate($event)\\\"></ion-datetime>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n                  \\r\\n\\r\\n              </ion-card-header>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <div style=\\\"border-top: #ccc solid 2px;\\r\\n                            width: 100%;\\r\\n                            margin-top: -20px;\\\">\\r\\n                </div>\\r\\n\\r\\n                <!-- No Notices Available Text -->\\r\\n                <div *ngIf=\\\"noNoticeLecturersToPOText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                  <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  padding: 5px;\\\">\\r\\n                    <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                      No Notices were sent from lecturers for the selected date\\r\\n                    </ion-label>\\r\\n                  </ion-item>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                transform: translateX(-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"loadingSpinnerLecturerToPO\\\"></ion-spinner>\\r\\n\\r\\n                <div style=\\\"overflow-y: scroll;\\r\\n                              width: 100%;\\r\\n                              height: 610px;\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedLecturerPONotices\\\">\\r\\n\\r\\n                          <ion-card>\\r\\n                            <ion-card-header>\\r\\n                              <ion-card-title>\\r\\n                                {{ list.payload.doc.data().noticeTitle }}\\r\\n                              </ion-card-title>\\r\\n                              <ion-card-subtitle>\\r\\n                                {{ list.payload.doc.data().noticeDescription }} \\r\\n                              </ion-card-subtitle>\\r\\n                            </ion-card-header>\\r\\n                            <ion-card-content>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Category: </b>\\r\\n                                {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                              </ion-label>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Published: </b> <br>\\r\\n                                {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                              </ion-label>\\r\\n                              <ion-grid>\\r\\n                                <ion-row>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                              height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                      <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        More\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                             height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Edit\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-col>\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                              height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Remove\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                              </ion-grid>\\r\\n                            </ion-card-content>\\r\\n                          </ion-card>\\r\\n\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </div>\\r\\n                \\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n\\r\\n\\r\\n          </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n\\r\\n          <ion-col>\\r\\n\\r\\n             <!-- Notices Sent to Students -->\\r\\n              <ion-card style=\\\"width: 99%;\\r\\n                              height: 830px;\\r\\n                              background-color: white;\\r\\n                              margin-left: 4px;\\r\\n                              margin-top: 0px;\\\">\\r\\n                <ion-card-header style=\\\"margin-top: 2px;\\\">\\r\\n                  <ion-grid>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\"> \\r\\n                          Notices Sent to Students \\r\\n                        </ion-label>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: black;\\\"></ion-icon>\\r\\n                          <ion-label style=\\\"margin-left: 10px;\\\">Select Date</ion-label>\\r\\n                          <ion-datetime value=\\\"{{ currentDate }}\\\" (ionChange)=\\\"retrieveNoticePOToStudentsSelectedDate($event)\\\"></ion-datetime>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n                  \\r\\n\\r\\n                </ion-card-header>\\r\\n                <ion-card-content>\\r\\n\\r\\n                  <div style=\\\"border-top: #ccc solid 2px;\\r\\n                              width: 100%;\\r\\n                              margin-top: -20px;\\\">\\r\\n                  </div>\\r\\n\\r\\n                  <!-- No Notices Available Text -->\\r\\n                  <div *ngIf=\\\"noNoticePOToStudentsText\\\" style=\\\"position: absolute;\\r\\n                                            top: 50px;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\\">\\r\\n                    <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                    border-radius: 5px;\\r\\n                                    padding: 5px;\\\">\\r\\n                      <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                        No Notices were sent to students for the selected date\\r\\n                      </ion-label>\\r\\n                    </ion-item>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Loading Spinner -->\\r\\n                  <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                  left: 50%;\\r\\n                                                  transform: translateX(-50%);\\r\\n                                                  margin-top: 20px;\\r\\n                                                  height: 100px;\\r\\n                                                  width: 100px;\\\" *ngIf=\\\"loadingSpinnerPOToStudent\\\"></ion-spinner>\\r\\n\\r\\n                  <div style=\\\"overflow-y: scroll;\\r\\n                              width: 100%;\\r\\n                              height: 740px;\\\">\\r\\n                    <ion-grid>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"6\\\" *ngFor=\\\"let list of publishedPOStudentNotices\\\">\\r\\n\\r\\n                          <ion-card>\\r\\n                            <ion-card-header>\\r\\n                              <ion-card-title>\\r\\n                                {{ list.payload.doc.data().noticeTitle }}\\r\\n                              </ion-card-title>\\r\\n                              <ion-card-subtitle>\\r\\n                                {{ list.payload.doc.data().noticeDescription }}\\r\\n                              </ion-card-subtitle>\\r\\n                            </ion-card-header>\\r\\n                            <ion-card-content>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Category: </b>\\r\\n                                {{ list.payload.doc.data().noticeCategory }} <br>\\r\\n                              </ion-label>\\r\\n                              <ion-label>\\r\\n                                <b>Notice Published: </b> <br>\\r\\n                                {{ list.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}} \\r\\n                              </ion-label>\\r\\n                              <ion-grid>\\r\\n                                <ion-row>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                              height: 40px;\\\" (click)=\\\"moreDetailsNotice($event, list)\\\">\\r\\n                                      <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        More\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                  <ion-col style=\\\"width: 45px;\\\">\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" style=\\\"width: 100%;\\r\\n                                                                                                             height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"create-outline\\\" style=\\\"color: white;\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Edit\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-col>\\r\\n                                    <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" style=\\\"min-width: 100%;\\r\\n                                                                                                              height: 40px;\\\">\\r\\n                                      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                      <ion-label style=\\\"color: white;\\r\\n                                                        margin-left: 5px;\\\">\\r\\n                                        Remove\\r\\n                                      </ion-label>\\r\\n                                    </ion-button>\\r\\n                                  </ion-col>\\r\\n                                </ion-row>\\r\\n                              </ion-grid>\\r\\n                            </ion-card-content>\\r\\n                          </ion-card>\\r\\n\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </div>\\r\\n\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NoticesPage } from './notices.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NoticesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NoticesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NoticesPageRoutingModule } from './notices-routing.module';\r\n\r\nimport { NoticesPage } from './notices.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NoticesPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NoticesPage]\r\n})\r\nexport class NoticesPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-label {\\n  color: black; }\\n\\n.newNoticeFormLabel {\\n  font-size: 17px;\\n  position: relative;\\n  top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL25vdGljZXMvQzpcXFVzZXJzXFxyYW51bFxcRG9jdW1lbnRzXFxHaXRIdWJcXDJuZCBZZWFyXFwybmQgU2VtZXN0ZXJcXFVPUF9TRV9ZMlMyLVBVU0wyMDA4LUlOVFJPRFVDVElPTi1UTy1JTlRFUk5FVC1PRi1USElOR1NcXFdvcmtzcGFjZVxcaVNBTS9zcmNcXGFwcFxcb2ZmaWNlXFxub3RpY2VzXFxub3RpY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29mZmljZS9ub3RpY2VzL25vdGljZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbn1cclxuXHJcbmlvbi1jYXJke1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLm5ld05vdGljZUZvcm1MYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-notices',\r\n  templateUrl: './notices.page.html',\r\n  styleUrls: ['./notices.page.scss'],\r\n})\r\nexport class NoticesPage implements OnInit {\r\n\r\n\r\n  newStudentNoticeSendForm: FormGroup;\r\n\r\n  newLecturerNoticeSendForm: FormGroup;\r\n\r\n  showLoadingDot: Boolean = true;\r\n\r\n  userFaculty;\r\n\r\n\r\n  currentDate;\r\n\r\n  dateThreeDaysBeforeCurrentDate;\r\n\r\n\r\n  noNoticePOToLecturersText: Boolean = false;\r\n\r\n  noNoticeLecturersToPOText: Boolean = false;\r\n\r\n  noNoticePOToStudentsText: Boolean = false;\r\n\r\n  \r\n\r\n  loadingSpinnerPOToLecturer: Boolean = true;\r\n\r\n  loadingSpinnerLecturerToPO: Boolean = true;\r\n\r\n  loadingSpinnerPOToStudent: Boolean = true;\r\n  \r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private noticesService: FirebaseService,\r\n    private alertController: AlertController,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private popoverController: PopoverController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userFaculty = this.sideMenuPageUserFaculty.passLoggedInUserFaculty();\r\n\r\n    this.currentDate = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate.setDate(this.currentDate.getDate()-3);\r\n\r\n\r\n    this.retrievePublishedLecturerToPONotice();\r\n\r\n    this.retrievePublishedPOToStudentNotice();\r\n\r\n    this.retrievePublishedPOToLecturerNotice();\r\n\r\n\r\n    this.retrieveRegisteredModules();\r\n\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n    this.retrievePublishedNoticeCategories();\r\n\r\n    // New Student Notice Form\r\n    this.newStudentNoticeSendForm = this.formBuilder.group({\r\n      noticeTitle: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeDescription: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeCategory: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeRecipientModule: new FormControl(''),\r\n      noticeRecipientBatch: new FormControl('')\r\n    });\r\n\r\n\r\n    // New Lecturer Notice Form\r\n    this.newLecturerNoticeSendForm = this.formBuilder.group({\r\n      noticeTitle: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeDescription: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeCategory: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      noticeRecipient: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ]))\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  moreDetailsNotice(event, value){\r\n    \r\n  }\r\n\r\n  // Retrieving registered modules from the firestore database\r\n  registeredModules;\r\n  retrieveRegisteredModules = () =>\r\n    this.noticesService.retrieveRegisteredModules(this.userFaculty).subscribe(response => (this.registeredModules = response));\r\n\r\n  // Retrieving published batches from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => \r\n    this.noticesService.retrievePublishedBatch(this.userFaculty).subscribe(response => (this.publishedBatches = response));\r\n\r\n  // Retrieving registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () =>\r\n    this.noticesService.retrieveRegisteredLecturers().subscribe(response => (this.registeredLecturers = response));\r\n\r\n  // Retrieving published notice categories from the firestore database\r\n  publishedNoticeCategories;\r\n  retrievePublishedNoticeCategories = () => \r\n    this.noticesService.retrievePublishedNoticeCategories().subscribe(response => (this.publishedNoticeCategories = response));\r\n\r\n\r\n\r\n  // Retrieving Lecturer to PO notices from current date to three days ago from the firestore database\r\n  publishedLecturerPONotices;\r\n  retrievePublishedLecturerToPONotice = () =>\r\n    this.noticesService.retrievePublishedLecturerToPONotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerLecturerToPO = false;\r\n        this.publishedLecturerPONotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerLecturerToPO = false;\r\n        this.noNoticeLecturersToPOText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerLecturerToPO = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  // Retrieving PO to Student notices from current date to three days ago from the firestore database\r\n  publishedPOStudentNotices;\r\n  retrievePublishedPOToStudentNotice = () =>\r\n    this.noticesService.retrievePublishedPOToStudentNotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToStudent = false;\r\n        this.publishedPOStudentNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToStudent = false;\r\n        this.noNoticePOToStudentsText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToStudent = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  // Retrieving PO to Lecturer notices from current date to three days ago from the firestore database\r\n  publishedPOLecturerNotices;\r\n  retrievePublishedPOToLecturerNotice = () =>\r\n    this.noticesService.retrievePublishedPOToLecturerNotice(this.currentDate, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToLecturer = false;\r\n        this.publishedPOLecturerNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToLecturer = false;\r\n        this.noNoticePOToLecturersText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToLecturer = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n\r\n\r\n\r\n  /* Javascript Functions */\r\n  showLecturerNoticeForm(){\r\n    var userClickOnLecturer = document.getElementById(\"newLecturerNoticeSubmit\");\r\n    var userClickOnStudent = document.getElementById(\"newStudentNoticeSubmit\");\r\n    var newNoticeSectionCard = document.getElementById(\"newNoticeFormSection\");\r\n    if(userClickOnStudent.style.display === \"inline\"){\r\n      userClickOnStudent.style.display = \"none\";\r\n      userClickOnLecturer.style.display = \"inline\";\r\n      newNoticeSectionCard.style.background = \"#CDE7F9\";\r\n    }\r\n  }\r\n  showStudentNoticeForm(){\r\n    var userClickOnLecturer = document.getElementById(\"newLecturerNoticeSubmit\");\r\n    var userClickOnStudent = document.getElementById(\"newStudentNoticeSubmit\");\r\n    var newNoticeSectionCard = document.getElementById(\"newNoticeFormSection\");\r\n    if(userClickOnLecturer.style.display === \"inline\"){\r\n      userClickOnLecturer.style.display = \"none\";\r\n      userClickOnStudent.style.display = \"inline\";\r\n      newNoticeSectionCard.style.background = \"#F3FAFC\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n\r\n  // Creating new student notice\r\n  doNewStudentNoticeSend(value){\r\n\r\n    // Displaying confirm box requesting to continue to firestore data submission\r\n    this.confirmNewStudentNotice('Send Student Notice', 'Click on continue to create new student notice', value);    \r\n    \r\n  }\r\n\r\n  // Confirm Box Implementation (Create New Student Notice)\r\n  async confirmNewStudentNotice ( title: string, content: string, value) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Student Notice Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Student Notice Request Accepted\");\r\n\r\n            // Adding new student notice details into firestore if the user agrees\r\n            this.noticesService.newStudentNoticeDetailsSubmission(value, this.sideMenuPageUserFaculty.passLoggedInUserId(), this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            // Displaying new student notice created confirmation in alert message \r\n            this.alertNotice('New Student Notice Created Successfully', 'Student notice has been created successfully. Please refer the \"Notices Sent to Students\" section to view notice.');\r\n\r\n            // Resetting the new student notice form to initial state\r\n            this.newStudentNoticeSendForm.reset();\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Creating new student notice\r\n  doNewLecturerNoticeSendForm(value){\r\n\r\n      // Displaying confirm box requesting to continue to add the detail to firestore\r\n      this.confirmNewLecturerNotice('Send Lecturer Notice', 'Click on continue to create new lecturer notice', value);    \r\n\r\n  }\r\n\r\n  // Confirm Box Implementation (Create New Student Notice)\r\n  async confirmNewLecturerNotice ( title: string, content: string, value) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Lecturer Notice Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Create New Lecturer Notice Request Accepted\");\r\n\r\n            // Adding new lecturer notice details into firestore if the user agrees\r\n            this.noticesService.newLecturerNoticeDetailsSubmission(value, this.sideMenuPageUserFaculty.passLoggedInUserId(), this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            // Displaying new lecturer notice created confirmation in alert message \r\n            this.alertNotice('New Lecturer Notice Created Successfully', 'Lecturer notice has been created successfully. Please refer the \"Notices Sent to Students\" section to view notice.');\r\n\r\n            // Resetting the new lecturer notice form to initial state\r\n            this.newLecturerNoticeSendForm.reset();\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // Process of retrieving notices sent to lecturers for the selected date from the firestore database\r\n  retrieveNoticePOToLecturersSelectedDate(event){\r\n\r\n    this.noNoticePOToLecturersText = false;\r\n\r\n    // Assigning existing notices on frontend to null\r\n    this.publishedPOLecturerNotices = null;\r\n\r\n    this.loadingSpinnerPOToLecturer = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedPOToLecturerSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToLecturer = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticePOToLecturersText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedPOLecturerNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToLecturer = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticePOToLecturersText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToLecturer = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Process of retrieving notices sent from lectures for the selected date from the firestore database\r\n  retrieveNoticeLecturersToPOSelectedDate(event){\r\n\r\n    this.noNoticeLecturersToPOText = false;\r\n  \r\n    // Assigning existing notices on frontend to null\r\n    this.publishedLecturerPONotices = null;\r\n\r\n    this.loadingSpinnerLecturerToPO = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedLecturerToPONoticeSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerLecturerToPO = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticeLecturersToPOText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedLecturerPONotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerLecturerToPO = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticeLecturersToPOText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerLecturerToPO = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  // Process of retrieving notices sent to students for the selected date from the firestore database\r\n  retrieveNoticePOToStudentsSelectedDate(event){\r\n\r\n    this.noNoticePOToStudentsText = false;\r\n\r\n    // Assigning existing notices on frontend to null\r\n    this.publishedPOStudentNotices = null;\r\n\r\n    this.loadingSpinnerPOToStudent = true;\r\n\r\n    let selectedDate = new Date(event.detail.value);\r\n\r\n    selectedDate.setHours(0,0,0,0);\r\n\r\n    let nextDate = new Date();\r\n\r\n    nextDate.setHours(0,0,0,0);\r\n\r\n    nextDate.setDate(selectedDate.getDate()+1);\r\n\r\n    console.log(selectedDate);\r\n    console.log(nextDate);\r\n\r\n    this.noticesService.retrievePublishedPOToStudentNoticeSelectedDate(selectedDate, nextDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.loadingSpinnerPOToStudent = false;\r\n\r\n        // Setting no notices text to hide\r\n        this.noNoticePOToStudentsText = false;\r\n\r\n        // Assigning retrieved document details\r\n        this.publishedPOStudentNotices = response;\r\n      }\r\n      else {\r\n        this.loadingSpinnerPOToStudent = false;\r\n\r\n        // Setting no notices text to show\r\n        this.noNoticePOToStudentsText = true;\r\n      }\r\n    }, error => {\r\n      this.loadingSpinnerPOToStudent = false;\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n \r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}