{"version":3,"sources":["./src/app/office/lecturers/lecturers.page.html","./src/app/office/lecturers/lecturers-routing.module.ts","./src/app/office/lecturers/lecturers.module.ts","./src/app/office/lecturers/lecturers.page.scss","./src/app/office/lecturers/lecturers.page.ts"],"names":[],"mappings":"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","file":"lecturers-lecturers-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Lecturers</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card style=\\\"max-height: 600px;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Registered Lecturers\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <form [formGroup]=\\\"searchRegisteredLecturerForm\\\" (ngSubmit)=\\\"doSearchRegisteredLecturer(searchRegisteredLecturerForm.value)\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"5\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"number\\\" placeholder=\\\"Enter NSBM ID\\\" clearInput formControlName=\\\"nsbmId\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"0.5\\\">\\r\\n                    <ion-label style=\\\"position: absolute;\\r\\n                                      left: 50%;\\r\\n                                      top: 50%;\\r\\n                                      transform: translate(-50%, -50%);\\r\\n                                      font-size: 20px;\\\">\\r\\n                      OR\\r\\n                    </ion-label>\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"5\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"text\\\" placeholder=\\\"Enter NSBM Email Address\\\" clearInput formControlName=\\\"nsbmEmailAddress\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"1.5\\\">\\r\\n                    <ion-button style=\\\"min-height: 100%;\\r\\n                                      min-width: 100%;\\r\\n                                      margin-top: 0px;\\\" type=\\\"submit\\\" [disabled]=\\\"searchRegisteredLecturerForm.valid\\\">\\r\\n                      <ion-icon name=\\\"search-outline\\\" style=\\\"margin-right: 5px;\\r\\n                                                            font-size: 20px;\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"font-size: 20px;\\r\\n                                        color: white;\\\">\\r\\n                        Search\\r\\n                      </ion-label>\\r\\n                    </ion-button>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </form>\\r\\n\\r\\n            <div style=\\\"border-top: #ccc solid 1px;\\r\\n                        min-width: 100%;\\\"></div>\\r\\n\\r\\n            <!-- Page loading search registered lecturer text -->\\r\\n            <div *ngIf=\\\"pageLoadSearchLecturerText\\\" style=\\\"position: absolute;\\r\\n                                                        top: 150px;\\r\\n                                                        left: 50%;\\r\\n                                                        transform: translateX(-50%);\\r\\n                                                        font-size: 18px;\\r\\n                                                        border: rgb(100, 116, 121) solid 2px;\\r\\n                                                        border-radius: 5px;\\r\\n                                                        padding: 15px;\\r\\n                                                        min-width: 53%;\\\">\\r\\n              <ion-icon name=\\\"chevron-up-circle-outline\\\" style=\\\"color: rgb(8, 177, 219);\\r\\n                                                                font-size: 30px;\\r\\n                                                                margin-top: 2px;\\r\\n                                                                margin-right: 10px;\\\"></ion-icon>\\r\\n              <ion-label style=\\\"position: relative;\\r\\n                                top: -5px;\\\">\\r\\n                Please populate a field and click 'Search' button to search for a registered lecturer.\\r\\n              </ion-label>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                            left: 50%;\\r\\n                                            transform: translateX(-50%);\\r\\n                                            margin-top: 20px;\\r\\n                                            height: 100px;\\r\\n                                            width: 100px;\\\" *ngIf=\\\"showLoadingDots\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n            <div style=\\\"overflow-y: scroll; \\r\\n                        height: 500px;\\r\\n                        margin-top: 15px;\\\">\\r\\n              <ion-grid>\\r\\n\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"4\\\" size-sm=\\\"12\\\" size-lg=\\\"3\\\">\\r\\n\\r\\n                    <ion-card *ngIf=\\\"registeredLecturerCard\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-card-title>{{ lecturerNamePrefix }} {{ lecturerNameFirstName }} {{ lecturerNameMiddleName }} {{ lecturerNameLastName }} </ion-card-title>\\r\\n                      </ion-card-header>\\r\\n                      <ion-card-content>\\r\\n                        <b>NSBM ID: </b> {{ lecturerNsbmLecturerId }} <br>\\r\\n                        <b>NSBM Email Address: </b> {{ lecturerNsbmEmailAddress }} <br>\\r\\n                        <b>Specialization: </b> {{ lecturerSpecialization }} <br>\\r\\n                        <b>Specialied Faculty: </b> {{ lecturerSpecializedFaculty }} <br>\\r\\n                        <b>Account Status: </b> {{ lecturerStatus }}\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col>\\r\\n                              <ion-button shape=\\\"round\\\" color=\\\"secondary\\\" style=\\\"min-width: 100%;\\\">\\r\\n                                <ion-icon name=\\\"create-outline\\\" style=\\\"margin-right: 5px;\\r\\n                                                                      color: white;\\\"></ion-icon>\\r\\n                                <ion-label style=\\\"color: white\\\">\\r\\n                                  Edit\\r\\n                                </ion-label>\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row *ngIf=\\\"disableButton\\\">\\r\\n                            <ion-col>\\r\\n                              <ion-button shape=\\\"round\\\" color=\\\"danger\\\" style=\\\"min-width: 100%;\\\" (click)=\\\"disableLecturerAccount('Confirmation Required','This student account will be DISABLED, do you want to continue?')\\\">\\r\\n                                <ion-icon name=\\\"lock-closed\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                <ion-label style=\\\"color: white\\\">\\r\\n                                  Disable Account\\r\\n                                </ion-label>\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row *ngIf=\\\"enableButton\\\">\\r\\n                            <ion-col>\\r\\n                              <ion-button shape=\\\"round\\\" color=\\\"medium\\\" style=\\\"min-width: 100%;\\\" (click)=\\\"enableLecturerAccount('Confirmation Required','This student account will be ENABLED, do you want to continue?')\\\">\\r\\n                                <ion-icon name=\\\"lock-open-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                <ion-label style=\\\"color: white\\\">\\r\\n                                  Enable Account\\r\\n                                </ion-label>\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-content>\\r\\n                    </ion-card>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n\\r\\n              </ion-grid>\\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n        <ion-card style=\\\"height: 105%;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Register Lecturer\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <form [formGroup]=\\\"lecturerRegistrationForm\\\" (ngSubmit)=\\\"doLecturerRegistration(lecturerRegistrationForm.value)\\\"> \\r\\n              <ion-grid>\\r\\n\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      NSBM Lecturer ID\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"number\\\" placeholder=\\\"Lecturer ID\\\" clearInput formControlName=\\\"nsbmLecturerId\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  \\r\\n                  \\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      Name\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-row style=\\\"margin-bottom: 10px;\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-label>Name Prefix</ion-label>\\r\\n                        <ion-select formControlName=\\\"nameTitle\\\">\\r\\n                          <ion-select-option value=\\\"Mr.\\\">Mr.</ion-select-option>\\r\\n                          <ion-select-option value=\\\"Sir.\\\">Sir.</ion-select-option>\\r\\n                          <ion-select-option value=\\\"Dr.\\\">Dr.</ion-select-option>\\r\\n                          <ion-select-option value=\\\"Mrs.\\\">Mrs.</ion-select-option>\\r\\n                          <ion-select-option value=\\\"Miss.\\\">Miss</ion-select-option>\\r\\n                          <ion-select-option value=\\\"Ms.\\\">Ms</ion-select-option>\\r\\n                        </ion-select>\\r\\n                      </ion-item>\\r\\n                    </ion-row>\\r\\n                    <ion-row style=\\\"margin-bottom: 10px;\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-input type=\\\"text\\\" placeholder=\\\"First Name\\\" clearInput formControlName=\\\"firstName\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-row>\\r\\n                    <ion-row style=\\\"margin-bottom: 10px;\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-input type=\\\"text\\\" placeholder=\\\"Middle Name\\\" clearInput formControlName=\\\"middleName\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-row>\\r\\n                    <ion-row style=\\\"margin-bottom: 10px;\\\">\\r\\n                      <ion-item style=\\\"min-width: 100%;\\\">\\r\\n                        <ion-input type=\\\"text\\\" placeholder=\\\"Last Name\\\" clearInput formControlName=\\\"lastName\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-row>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      Specialized Faculty\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Specialized Faculty</ion-label>\\r\\n                      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" formControlName=\\\"specializedFaculty\\\"> \\r\\n                        <ion-select-option value=\\\"School of Computing\\\">School of Computing</ion-select-option>\\r\\n                        <ion-select-option value=\\\"School of Business\\\">School of Business</ion-select-option>\\r\\n                        <ion-select-option value=\\\"School of Engineering\\\">School of Engineering</ion-select-option>\\r\\n                      </ion-select>\\r\\n                    </ion-item>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      Specialization\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"text\\\" placeholder=\\\"Enter Field\\\" clearInput formControlName=\\\"specialization\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      NSBM Email\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"email\\\" placeholder=\\\"Eg: sample@nsbm.lk\\\" clearInput formControlName=\\\"nsbmEmail\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      Password\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"password\\\" placeholder=\\\"Enter password\\\" clearInput formControlName=\\\"password\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                    \\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      Confirm Password\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-input type=\\\"password\\\" placeholder=\\\"Enter password\\\" clearInput formControlName=\\\"confirmPassword\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-label class=\\\"registerLecturerFormLabel\\\">\\r\\n                      User Account Status\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Status</ion-label>\\r\\n                      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Continue\\\" formControlName=\\\"lecturerStatus\\\"> \\r\\n                        <ion-select-option *ngFor=\\\"let item of publishedUserStatuses\\\" value=\\\"{{ item.payload.doc.data().status }}\\\">\\r\\n                          {{ item.payload.doc.data().status }}\\r\\n                        </ion-select-option>\\r\\n                      </ion-select>\\r\\n                    </ion-item>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                    \\r\\n                    <ion-label>\\r\\n                      Terms & Conditions\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\" style=\\\"margin-left: 50px;\\\">\\r\\n\\r\\n                    <ion-checkbox checked=\\\"false\\\" formControlName=\\\"termsAndConditionsAgreement\\\"></ion-checkbox>\\r\\n                    <ion-label>\\r\\n                      Please refer the <span (click)=\\\"showTermsAndCondtions()\\\">Terms & Conditions</span> and agree to this by ticking the box.\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col style=\\\"margin-top: 10px;\\\">\\r\\n\\r\\n                    <ion-checkbox checked=\\\"false\\\"></ion-checkbox>\\r\\n                    <ion-label>\\r\\n                      Send credentails to this User's email account (Outlook)\\r\\n                    </ion-label>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n\\r\\n                <ion-row>\\r\\n                  <ion-col style=\\\"margin-top: 15px;\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-label style=\\\"position: absolute;\\r\\n                                        left: 50%;\\r\\n                                        top: 50%;\\r\\n                                        transform: translate(-50%,-50%);\\r\\n                                        font-size: 17px;\\\">\\r\\n                        Note: Current Logged In Porgram Office User will be Logged Out.\\r\\n                      </ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n\\r\\n                <ion-row>\\r\\n\\r\\n                  <ion-col>\\r\\n\\r\\n                    <ion-button style=\\\"position: absolute;\\r\\n                                      left: 50%;\\r\\n                                      transform: translateX(-50%);\\r\\n                                      top: 10px;\\\" type=\\\"submit\\\" [disabled]=\\\"!lecturerRegistrationForm.valid\\\">\\r\\n                      Register\\r\\n                    </ion-button>\\r\\n\\r\\n                    <!-- Loading Spinner -->\\r\\n                    <ion-spinner name=\\\"crescent\\\" style=\\\"position: absolute;\\r\\n                                                        top: 18px;\\r\\n                                                        left: 60%;\\r\\n                                                        transform: translateX(-40%);\\\" *ngIf=\\\"registerLecturerLoadingSpinner\\\"></ion-spinner>\\r\\n\\r\\n                  </ion-col>\\r\\n\\r\\n                </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n              </ion-grid>\\r\\n            </form>\\r\\n\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LecturersPage } from './lecturers.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LecturersPage\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LecturersPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LecturersPageRoutingModule } from './lecturers-routing.module';\r\n\r\nimport { LecturersPage } from './lecturers.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LecturersPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LecturersPage]\r\n})\r\nexport class LecturersPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-label {\\n  color: black; }\\n\\nion-item {\\n  border: #202020 solid 1px;\\n  border-radius: 5px; }\\n\\n.registerLecturerFormLabel {\\n  position: relative;\\n  top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL2xlY3R1cmVycy9DOlxcVXNlcnNcXHJhbnVsXFxEb2N1bWVudHNcXEdpdEh1YlxcMm5kIFllYXJcXDJuZCBTZW1lc3RlclxcVU9QX1NFX1kyUzItUFVTTDIwMDgtSU5UUk9EVUNUSU9OLVRPLUlOVEVSTkVULU9GLVRISU5HU1xcV29ya3NwYWNlXFxpU0FNL3NyY1xcYXBwXFxvZmZpY2VcXGxlY3R1cmVyc1xcbGVjdHVyZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSx5QkFBaUM7RUFDakMsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29mZmljZS9sZWN0dXJlcnMvbGVjdHVyZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tbGFiZWx7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG4gICAgYm9yZGVyOiByZ2IoMzIsIDMyLCAzMikgc29saWQgMXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4ucmVnaXN0ZXJMZWN0dXJlckZvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AlertController, PopoverController, ModalController } from '@ionic/angular';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { MoreDetailsLecturerPopoverPage } from './more-details-lecturer-popover/more-details-lecturer-popover.page';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-lecturers',\r\n  templateUrl: './lecturers.page.html',\r\n  styleUrls: ['./lecturers.page.scss'],\r\n})\r\nexport class LecturersPage implements OnInit {\r\n\r\n  searchRegisteredLecturerForm: FormGroup;\r\n\r\n  lecturerRegistrationForm: FormGroup;\r\n\r\n  showLoadingDots: Boolean = false;\r\n\r\n  pageLoadSearchLecturerText: Boolean = true;\r\n\r\n  registerLecturerLoadingSpinner: Boolean = false;\r\n\r\n  loggedInUserFaculty;\r\n\r\n  disableButton: Boolean = false;\r\n\r\n  enableButton: Boolean = true;\r\n\r\n\r\n  constructor(\r\n    private lecturersService: FirebaseService,\r\n    private formBuilder: FormBuilder,\r\n    private alertController: AlertController,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private modalController: ModalController,\r\n    private popoverController: PopoverController,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n\r\n\r\n\r\n    this.loggedInUserFaculty = this.sideMenuPageUserFaculty.passLoggedInUserFaculty();\r\n\r\n    this.retrievePublishedUserStatuses();\r\n\r\n    // Setting loading dots to false after the contents has loaded.\r\n    this.lecturersService.retrieveRegisteredLecturers().subscribe(() => this.showLoadingDots = false)\r\n\r\n    this.searchRegisteredLecturerForm = this.formBuilder.group({\r\n      nsbmId: new FormControl('', Validators.required),\r\n      nsbmEmailAddress: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.lecturerRegistrationForm = this.formBuilder.group({\r\n      nsbmLecturerId: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ])),\r\n      nameTitle: new FormControl('', Validators.required),\r\n      firstName: new FormControl('', Validators.required),\r\n      middleName: new FormControl(''),\r\n      lastName: new FormControl('', Validators.required),\r\n      specialization: new FormControl('', Validators.required),\r\n      specializedFaculty: new FormControl('', Validators.required),\r\n      nsbmEmail: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.email,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(25)\r\n      ])),\r\n      confirmPassword: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(25)\r\n      ])),\r\n      lecturerStatus: new FormControl('', Validators.required),\r\n      termsAndConditionsAgreement: new FormControl('', Validators.required)\r\n    });\r\n\r\n  }\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  // Retrieving user statuses from the firestore database\r\n  publishedUserStatuses;\r\n  retrievePublishedUserStatuses = () => \r\n    this.lecturersService.retrievePublishedUserStatuses().subscribe(response => (this.publishedUserStatuses = response));\r\n\r\n\r\n  registeredLecturers;\r\n\r\n  lecturerDocId;\r\n  lecturerNamePrefix;\r\n  lecturerNameFirstName;\r\n  lecturerNameMiddleName;\r\n  lecturerNameLastName;\r\n  lecturerNsbmLecturerId;\r\n  lecturerNsbmEmailAddress;\r\n  lecturerStatus;\r\n  lecturerSpecializedFaculty;\r\n  lecturerSpecialization;\r\n\r\n  registeredLecturerCard: Boolean = false;\r\n\r\n  doSearchRegisteredLecturer(value){\r\n\r\n    // Response action if the user clicks the 'Search' button without entering a search value.\r\n    if(value.nsbmId == \"\" && value.nsbmEmailAddress == \"\"){\r\n      this.pageLoadSearchLecturerText = true;\r\n\r\n      this.showLoadingDots = false;\r\n\r\n      this.alertNotice(\"Error\", \"A search value was not entered.\");\r\n    }\r\n    else{\r\n      // Setting page content load text to false\r\n      this.pageLoadSearchLecturerText = false;\r\n\r\n      // Setting loading dots to true\r\n      this.showLoadingDots = true;\r\n    }\r\n\r\n    // Searching for registered lecturer, retrieving value and showing the relevant response\r\n    if(value.nsbmId != \"\"){\r\n      this.lecturersService.searchRegisteredLecturerNSBMId(value.nsbmId).subscribe(response => {\r\n        // Checking if any document values where returned\r\n        if (response.length > 0){\r\n          this.registeredLecturerCard = true;\r\n\r\n          // Setting loading dots to false\r\n          this.showLoadingDots = false;\r\n\r\n          // Disabling loading text\r\n          this.pageLoadSearchLecturerText = false;\r\n\r\n          // Assigning retrieved values to this variables\r\n          this.registeredLecturers = response.forEach(document => {\r\n            let firestoreDoc: any = document.payload.doc.data();\r\n            this.lecturerDocId = document.payload.doc.id;\r\n            this.lecturerNamePrefix = firestoreDoc.name.prefix;\r\n            this.lecturerNameFirstName = firestoreDoc.name.firstName;\r\n            this.lecturerNameMiddleName = firestoreDoc.name.middleName;\r\n            this.lecturerNameLastName = firestoreDoc.name.lastName;\r\n            this.lecturerNsbmLecturerId = firestoreDoc.nsbmLecturerId;\r\n            this.lecturerNsbmEmailAddress = firestoreDoc.nsbmEmailAddress;\r\n            this.lecturerStatus = firestoreDoc.status;\r\n            this.lecturerSpecializedFaculty = firestoreDoc.specializedFaculty;\r\n            this.lecturerSpecialization = firestoreDoc.specialization;\r\n          });\r\n\r\n          if(this.lecturerStatus == \"Disabled\"){\r\n            this.enableButton = true;\r\n          }\r\n          else if(this.lecturerStatus == \"Active\"){\r\n            this.disableButton = true;\r\n          }\r\n\r\n          console.log(\"Registered Lecturer Record Found\");\r\n        }\r\n        else{\r\n          this.showLoadingDots = false;\r\n          this.alertNotice(\"Not Found\", \"Registered Lecturer Record with NSBM ID: \" + value.nsbmId + \", is not available\");\r\n          console.log(\"Registered Lecturer Record Not Found\");\r\n        }\r\n      }, error => {\r\n        console.log(\"Error: \" + error);\r\n        this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n        this.showLoadingDots = false;\r\n      });\r\n    }\r\n    else if(value.nsbmEmailAddress){\r\n      this.lecturersService.searchRegisteredLecturerNSBMEmail(value.nsbmEmailAddress).subscribe(response => {\r\n        // Checking if any document values where returned\r\n        if (response.length > 0){\r\n          this.registeredLecturerCard = true;\r\n\r\n          // Setting loading dots to false\r\n          this.showLoadingDots = false;\r\n\r\n          // Disabling loading text\r\n          this.pageLoadSearchLecturerText = false;\r\n\r\n          // Assigning retrieved values to this variables\r\n          this.registeredLecturers = response.forEach(document => {\r\n            let firestoreDoc: any = document.payload.doc.data();\r\n            this.lecturerDocId = document.payload.doc.id;\r\n            this.lecturerNamePrefix = firestoreDoc.name.prefix;\r\n            this.lecturerNameFirstName = firestoreDoc.name.firstName;\r\n            this.lecturerNameMiddleName = firestoreDoc.name.middleName;\r\n            this.lecturerNameLastName = firestoreDoc.name.lastName;\r\n            this.lecturerNsbmLecturerId = firestoreDoc.nsbmLecturerId;\r\n            this.lecturerNsbmEmailAddress = firestoreDoc.nsbmEmailAddress;\r\n            this.lecturerStatus = firestoreDoc.status;\r\n            this.lecturerSpecializedFaculty = firestoreDoc.specializedFaculty;\r\n            this.lecturerSpecialization = firestoreDoc.specialization;\r\n          });\r\n\r\n          if(this.lecturerStatus == \"Disabled\"){\r\n            this.enableButton = true;\r\n          }\r\n          else if(this.lecturerStatus == \"Active\"){\r\n            this.disableButton = true;\r\n          }\r\n\r\n          console.log(\"Registered Lecturer Record Found\");\r\n        }\r\n        else{\r\n          this.alertNotice(\"Not Found\", \"Registered Lecturer Record with NSBM Email Address: \" + value.nsbmEmailAddress + \", is not available\");\r\n          console.log(\"Registered Lecturer Record Not Found\");\r\n        }\r\n      }, error => {\r\n        console.log(\"Error: \" + error);\r\n        this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n        this.showLoadingDots = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  // Confirm Box Implementation (Disabling lecturer user account)\r\n  async disableLecturerAccount (title: string, content: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Disable Lecturer User Account Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Disable Lecturer User Account Request Accepted\");\r\n\r\n            this.disableButton = false;\r\n\r\n            // Calling function to disable user account\r\n            this.lecturersService.disableUserAccount(\"lecturerUsers\" , this.lecturerDocId);\r\n            \r\n            this.enableButton = true;\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Enabling lecturer user account)\r\n  async enableLecturerAccount (title: string, content: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Enable Lecturer User Account Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Enable Lecturer User Account Request Accepted\");\r\n\r\n            this.enableButton = false;\r\n\r\n            // Calling function to disable user account\r\n            this.lecturersService.enableUserAccount(\"lecturerUsers\" , this.lecturerDocId);\r\n\r\n            this.disableButton = true;\r\n            \r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  /*\r\n  // Opening more details module popover\r\n  async moreDetailsRegisteredModule(ev: Event, value){\r\n    const moreDetailsModulePopover = await this.popoverController.create({\r\n      component: MoreDetailsLecturerPopoverPage,\r\n      componentProps: {\r\n        lecturerDocId: this.lecturerDocId,\r\n        lecturerNsbmId: \r\n      },\r\n      event: ev\r\n    });\r\n\r\n    moreDetailsModulePopover.present();\r\n  }\r\n  */\r\n\r\n\r\n\r\n/*\r\n  // Opening edit registered lecturer modal \r\n  async editRegisteredModule(value){\r\n    const editModuleModal = await this.modalController.create({\r\n      component: EditModuleModalPage,\r\n      // Passing values to the modal using 'componentProps'\r\n      componentProps: {\r\n        moduleDocId: value.payload.doc.id,\r\n        moduleCode: value.payload.doc.data().moduleCode,\r\n        moduleTitle: value.payload.doc.data().moduleTitle,\r\n        moduleCreditsWeighting: value.payload.doc.data().creditsWeighting,\r\n        moduleDegree: value.payload.doc.data().degree,\r\n        moduleAwardingBodyUniversity: value.payload.doc.data().awardingBodyUniversity,\r\n        moduleAcademicPeriodYear: value.payload.doc.data().academicPeriod.academicYear,\r\n        moduleAcademicPeriodSemester: value.payload.doc.data().academicPeriod.academicSemester,\r\n        moduleModuleLeader: value.payload.doc.data().moduleLeader,\r\n        moduleAssignedLecturer: value.payload.doc.data().assignedLecturer,\r\n        moduleAssignedLectureHall: value.payload.doc.data().assignedLectureHall,\r\n        userFaculty: this.sideMenuPageUserFaculty.passUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editModuleModal.present();\r\n  }\r\n*/\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n  // Process of opening show terms and conditions modal\r\n  showTermsAndCondtions() {\r\n    console.log(\"Modal\");\r\n  }\r\n\r\n\r\n  doLecturerRegistration(value) {\r\n\r\n\r\n    /*-- Lecturer User Registration Process Phase --*/\r\n    if(value.password == value.confirmPassword){\r\n\r\n      // Setting loading spinner to spin\r\n      this.registerLecturerLoadingSpinner = true;\r\n\r\n      // Firebase auth\r\n      this.lecturersService.lecturerRegistrationDetails(value, this.sideMenuPageUserFaculty.passLoggedInUserId(), this.loggedInUserFaculty)\r\n        .then(success => {\r\n\r\n          // Setting loading spinner to stop spinning\r\n          this.registerLecturerLoadingSpinner = false;\r\n\r\n          console.log(\" (Firebase Auth) Lecturer Credentials Registration Successful, \" + success);\r\n\r\n          // Displaying new leaturer user created confirmation in alert message \r\n          this.alertNotice('Lecturer Registration Successful', 'New lecturer has been registered. New record can be viewed from the \"Registered Lecturers\" section.');\r\n          this.alertNotice('Alert', 'Program Office User logged out');\r\n\r\n          console.log(success);\r\n        }, \r\n        error => {\r\n          // Setting loading spinner to stop spinning\r\n          this.registerLecturerLoadingSpinner = false;\r\n\r\n          console.log(\" (Firebase Auth) Lecturer Credentials Registration Failed, \" + error);\r\n\r\n          if(error == \"Error: The email address is already in use by another account.\"){\r\n            console.log(\" NSBM email already inuse by another registered user(lecturer account) \");\r\n\r\n            // Displaying entered email already exists error in alert message \r\n            this.alertNotice('NSBM Email Already Exists', 'Another user with the same NSBM email address already exists.');\r\n          }\r\n          else{\r\n            // Displaying new leaturer user created failure in alert message \r\n            this.alertNotice('Lecturer Registration Failed', 'Error has occured, please contact web administrator');\r\n          }\r\n          \r\n        });\r\n    }\r\n    else{\r\n      this.lecturerRegistrationForm.invalid;\r\n\r\n      console.log(\" Entered passwords do not match \");\r\n\r\n      // Displaying entered passwords not similar error in alert message \r\n      this.alertNotice('Passwords Mismatch', 'Entered passwords do not match, please re-check.');\r\n    }\r\n    /*-- Lecturer User Registration Process Phase --*/\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}