{"version":3,"sources":["./src/app/signup/signup.page.html","./src/app/signup/signup-routing.module.ts","./src/app/signup/signup.module.ts","./src/app/signup/signup.page.scss","./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-content>\\r\\n  <div class=\\\"register\\\">\\r\\n    <ion-card-content overflow-scroll=\\\"true\\\">\\r\\n      <ion-card class=\\\"card\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Signup</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryRegister(validations_form.value)\\\"\\r\\n            overflow-scroll=\\\"true\\\">\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Prefix</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" formControlName=\\\"prefixName\\\" value=\\\"\\\">\\r\\n                <ion-select-option value=\\\"Mr.\\\">Mr.</ion-select-option>\\r\\n                <ion-select-option value=\\\"Sir.\\\">Sir.</ion-select-option>\\r\\n                <ion-select-option value=\\\"Dr.\\\">Dr.</ion-select-option>\\r\\n                <ion-select-option value=\\\"Mrs.\\\">Mrs.</ion-select-option>\\r\\n                <ion-select-option value=\\\"Miss.\\\">Miss</ion-select-option>\\r\\n                <ion-select-option value=\\\"Ms.\\\">Ms</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">First Name</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"fName\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Middle Name</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"mName\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last Name</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"lName\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Faculty</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" formControlName=\\\"faculty\\\" value=\\\"\\\">\\r\\n                <ion-select-option value=\\\"School of Business\\\">School of Business</ion-select-option>\\r\\n                <ion-select-option value=\\\"School of Computing\\\">School of Computing</ion-select-option>\\r\\n                <ion-select-option value=\\\"School of Engineering\\\">School of Engineering</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Awarding Body</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" formControlName=\\\"awardingBodyUniversity\\\" value=\\\"\\\">\\r\\n                <ion-select-option value=\\\"University of Plymouth\\\">University of Plymouth\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"NSBM Green University\\\">NSBM Green University</ion-select-option>\\r\\n                <ion-select-option value=\\\"University College Dublin\\\">University College Dublin</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Degree</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" formControlName=\\\"degree\\\" value=\\\"\\\">\\r\\n                <ion-select-option value=\\\"BSc(Hons) Software Engineering\\\">BSc(Hons) Software Engineering\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc(Hons) Computer Security\\\">BSc(Hons) Computer Security</ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc(Hons) Management Information Systems \\\">BSc(Hons) Management Information Systems \\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc Software Engineering\\\">BSc Software Engineering</ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc(Hons) Computer Systems Engineering\\\">BSc(Hons) Computer Systems Engineering\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc International Business\\\">BSc Mechatronic Engineering</ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc International Business\\\">BSc International Business</ion-select-option>\\r\\n                <ion-select-option value=\\\"BSc(Hons) Accounting and Finance\\\">BSc(Hons) Accounting and Finance\\r\\n                </ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Degree Code</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" formControlName=\\\"DegreeCode\\\" value=\\\"\\\">\\r\\n                <ion-select-option value=\\\"SE\\\">Software Engineering Plymouth\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"CS\\\">Computer Security Plymouth</ion-select-option>\\r\\n                <ion-select-option value=\\\"MIS\\\">Management Information Systems UCD\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"SE-NSBM\\\">Software Engineering NSBM</ion-select-option>\\r\\n                <ion-select-option value=\\\"CE-NSBM\\\">Computer Systems Engineering NSBM\\r\\n                </ion-select-option>\\r\\n                <ion-select-option value=\\\"ME-NSBM\\\">Mechanical Engineering NSBM</ion-select-option>\\r\\n                <ion-select-option value=\\\"IB-NSBM\\\">International Business NSBM</ion-select-option>\\r\\n                <ion-select-option value=\\\"AF\\\">Accounting and Finance Plymouth\\r\\n                </ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Batch</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"batch\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">NSBM Student ID</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"sid\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" ngModel\\r\\n                pattern=\\\"(\\\\W|^)[\\\\w.+\\\\-]*@(students.nsbm)\\\\.lk(\\\\W|$)\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n                <div class=\\\"error-message\\\"\\r\\n                  *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\r\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n                <div class=\\\"error-message\\\"\\r\\n                  *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n            <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Register\\r\\n            </ion-button>\\r\\n            <label class=\\\"error-message\\\">{{errorMessage}}</label>\\r\\n            <label class=\\\"success-message\\\">{{successMessage}}</label>\\r\\n\\r\\n          </form>\\r\\n          <p class=\\\"go-to-login\\\">Already have an account? <a style=\\\"color: rgb(4, 98, 153)\\\" (click)=\\\"goLoginPage()\\\">Try to Log In.</a></p>\\r\\n\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-card-content>\\r\\n  </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { FirebaseService } from '../services/firebase.service';\r\nimport 'firebase';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss'],\r\n})\r\nexport class SignupPage implements OnInit {\r\n\r\n  validations_form: FormGroup;\r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n\r\n  validation_messages = {\r\n    email: [\r\n      { type: \"required\", message: \"Your NSBM University Email is required.\" },\r\n      { type: \"pattern\", message: \"Please enter a valid email.\" }\r\n    ],\r\n    password: [\r\n      { type: \"required\", message: \"Password is required.\" },\r\n      {\r\n        type: \"minlength\",\r\n        message: \"Password must be at least 5 characters long.\"\r\n      }\r\n    ]\r\n  };\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private authService: FirebaseService,\r\n    private formBuilder: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.validations_form = this.formBuilder.group({\r\n      prefixName: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('')\r\n      ])),\r\n      fName: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z]+$')\r\n      ])),\r\n      mName: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z]+$')\r\n      ])),\r\n      lName: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z]+$')\r\n      ])),\r\n      DegreeCode: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('')\r\n      ])),\r\n      degree: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('')\r\n      ])),\r\n      faculty: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('')\r\n      ])),\r\n      awardingBodyUniversity: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('')\r\n      ])),\r\n      batch: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^([0-9]{2}\\.[0-9]{1,1})$')\r\n      ])),\r\n      sid: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[0-9]{8}$')\r\n      ])),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(5),\r\n        Validators.required\r\n      ])),\r\n    });\r\n  }\r\n  tryRegister(value) {\r\n    this.authService.registerUser(value)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.errorMessage = \"\";\r\n        this.successMessage = \"Your account has been created. Please log in.\";\r\n      }, err => {\r\n        console.log(err);\r\n        this.errorMessage = err.message;\r\n        this.successMessage = \"\";\r\n      })\r\n  }\r\n\r\n\r\n  goLoginPage() {\r\n    this.navCtrl.navigateForward(\"login\");\r\n  }\r\n\r\n}"],"sourceRoot":"webpack:///"}