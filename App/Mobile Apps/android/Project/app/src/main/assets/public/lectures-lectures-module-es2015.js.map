{"version":3,"sources":["./src/app/office/lectures/lectures.page.html","./src/app/office/lectures/lectures-routing.module.ts","./src/app/office/lectures/lectures.module.ts","./src/app/office/lectures/lectures.page.scss","./src/app/office/lectures/lectures.page.ts"],"names":[],"mappings":"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","file":"lectures-lectures-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Lectures</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card style=\\\"height: 670px;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Today's Lectures\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <div style=\\\"width: 100%;\\r\\n                        height: 600px;\\r\\n                        overflow-y: scroll;\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Batch</th>\\r\\n                    <th>Module Code</th>\\r\\n                    <th>Module Title</th>\\r\\n                    <th>Session Start Time</th>\\r\\n                    <th>Session End Time</th>\\r\\n                    <th>Lecture Hall</th>\\r\\n                    <th>Lecturer</th>\\r\\n                    <th>Session Status</th>\\r\\n                    <th>Activity</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of publishedLectureSessionCurrentDate\\\">\\r\\n                    <td>{{ item.payload.doc.data().batch }}</td>\\r\\n                    <td>{{ item.payload.doc.data().moduleCode }}</td>\\r\\n                    <td>{{ item.payload.doc.data().moduleTitle }}</td>\\r\\n                    <td>{{ item.payload.doc.data().startDateTime.toDate() | date: 'h:mm a' }}</td>\\r\\n                    <td>{{ item.payload.doc.data().endDateTime.toDate() | date: 'h:mm a'}}</td>\\r\\n                    <td>{{ item.payload.doc.data().lectureHall }}</td>\\r\\n                    <td>{{ item.payload.doc.data().lecturer }}</td>\\r\\n                    <td>{{ item.payload.doc.data().status }}</td>\\r\\n                    <td>\\r\\n                      <ion-button (click)=\\\"editLectureSessionSchedule(item)\\\">\\r\\n                        EDIT\\r\\n                      </ion-button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n\\r\\n            <!-- Loading Spinner -->\\r\\n            <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                            left: 50%;\\r\\n                                            top: 50%;\\r\\n                                            transform: translate(-50%, -50%);\\r\\n                                            height: 100px;\\r\\n                                            width: 100px;\\\" *ngIf=\\\"showLoadingDotsCurrentDateLectureSession\\\"></ion-spinner>\\r\\n\\r\\n            <div *ngIf=\\\"noLectureSessionTodayText\\\" style=\\\"position: absolute;\\r\\n                                                    left: 50%;\\r\\n                                                    top: 50%;\\r\\n                                                    transform: translate(-50%,-50%);\\r\\n                                                    padding: 5px;\\\">\\r\\n              <ion-item>\\r\\n                <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                  No Lecture Session Assigned for Today\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card style=\\\"height: 800px;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              All Available Lectures Sessions\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -35px;\\\">\\r\\n                \\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthLectureSession()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n\\r\\n              <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                {{ viewingMonthLectureSession }}\\r\\n              </ion-label>\\r\\n\\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthLectureSession()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n\\r\\n            </div>\\r\\n          \\r\\n            <div style=\\\"overflow-y: scroll;\\r\\n                        margin-top: 20px;\\\">\\r\\n                <div style=\\\"height: 700px;\\\">\\r\\n                <calendar [eventSource]=\\\"eventSourceLectureSession\\\"\\r\\n                [calendarMode]=\\\"calendarLectureSession.mode\\\"\\r\\n                [currentDate]=\\\"calendarLectureSession.currentDate\\\"\\r\\n                (onCurrentDateChanged)=\\\"onCurrentDateChangedLectureSession($event)\\\"\\r\\n                (onRangeChanged)=\\\"onRangeChangedLectureSession($event)\\\"\\r\\n                (onEventSelected)=\\\"onEventSelectedLectureSession($event)\\\"\\r\\n                (onTitleChanged)=\\\"onViewTitleChangedLectureSession($event)\\\"\\r\\n                (onTimeSelected)=\\\"onTimeSelectedLectureSession($event)\\\"\\r\\n                startHour=\\\"9\\\"\\r\\n                endHour=\\\"17\\\"\\r\\n                step=\\\"30\\\"\\r\\n                startingDayWeek=\\\"1\\\" id=\\\"lectureSessionSemesterCalendar\\\">\\r\\n              \\r\\n                </calendar>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"noLectureSessionAllText\\\" style=\\\"position: absolute;\\r\\n                                                    left: 50%;\\r\\n                                                    top: 70%;\\r\\n                                                    transform: translate(-50%,-30%);\\r\\n                                                    padding: 5px;\\\">\\r\\n              <ion-item>\\r\\n                <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                  No Lecture Session Assigned for this date\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <ion-grid style=\\\"width: 140px;\\r\\n                                  position: absolute;\\r\\n                                  top: 278px;\\r\\n                                  right: 1%;\\r\\n                                  padding: 0;\\r\\n                                  margin: 0;\\\">\\r\\n              <ion-row *ngFor=\\\"let session of lectureSessionsDocuments\\\">\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Lecture Session Read More\\\" color=\\\"secondary\\\" (click)=\\\"moreDetailsLectureSession($event, session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                              height: 40px;\\r\\n                                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                                              margin-left: -10px;\\\">\\r\\n                    <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Edit Lecture Session\\\" color=\\\"warning\\\" (click)=\\\"editLectureSession(session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                        height: 40px;\\r\\n                                                                                                                                        border-radius: 5px;\\r\\n                                                                                                                                        margin-bottom: -5px;\\r\\n                                                                                                                                        margin-left: -12px;\\\">\\r\\n                    <ion-icon name=\\\"create\\\" style=\\\"color: white;\\r\\n                                                  font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Remove Lecture Session\\\" color=\\\"danger\\\"\\r\\n                    (click)=\\\"removeLectureSession('Confirmation Required', 'This lecture session will be removed, do you want to continue?', session.id)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                        height: 40px;\\r\\n                                                                                                                                                        border-radius: 5px;\\r\\n                                                                                                                                                        margin-bottom: -5px;\\r\\n                                                                                                                                                        margin-left: -14px;\\\">\\r\\n                    <ion-icon name=\\\"trash\\\" style=\\\"margin-left: -1px;\\r\\n                                                  font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <!-- Loading Spinner -->\\r\\n            <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                            left: 50%;\\r\\n                                            top: 50%;\\r\\n                                            transform: translateX(-50%, -50%);\\r\\n                                            height: 100px;\\r\\n                                            width: 100px;\\\" *ngIf=\\\"showLoadingDotsAllLectureSession\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LecturesPage } from './lectures.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LecturesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LecturesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LecturesPageRoutingModule } from './lectures-routing.module';\r\n\r\nimport { LecturesPage } from './lectures.page';\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgCalendarModule,\r\n    IonicModule,\r\n    LecturesPageRoutingModule\r\n  ],\r\n  declarations: [LecturesPage]\r\n})\r\nexport class LecturesPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px; }\\n\\nion-label {\\n  color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL2xlY3R1cmVzL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcbGVjdHVyZXNcXGxlY3R1cmVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLHNCQUFzQjtFQUN0QixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vZmZpY2UvbGVjdHVyZXMvbGVjdHVyZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbn1cclxuXHJcbmlvbi1jYXJke1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG4gICAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuaW9uLWxhYmVse1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { ModalController, AlertController, PopoverController } from '@ionic/angular';\r\nimport { EditLectureSessionModalPage } from '../semester-calendar/edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { MoreDetailsSessionPopoverPage } from '../semester-calendar/more-details-session-popover/more-details-session-popover.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-lectures',\r\n  templateUrl: './lectures.page.html',\r\n  styleUrls: ['./lectures.page.scss'],\r\n})\r\nexport class LecturesPage implements OnInit {\r\n\r\n  currentDate;\r\n  nextDate;\r\n\r\n  showLoadingDotsCurrentDateLectureSession: Boolean = true;\r\n\r\n  showLoadingDotsAllLectureSession: Boolean = true;\r\n\r\n  noLectureSessionTodayText: Boolean = false;\r\n\r\n  noLectureSessionAllText: Boolean = false;\r\n\r\n  constructor(\r\n    private lecturesService: FirebaseService,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private popoverController: PopoverController,\r\n    private modalController: ModalController,\r\n    private alertController: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.currentDate = new Date();\r\n\r\n    // Setting currentDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.currentDate.setHours(0,0,0,0);\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.nextDate = new Date();\r\n\r\n    // Setting nextDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setHours(0,0,0,0);\r\n\r\n    // Setting date section to increment by one\r\n    // Sample: Sun Apr 20 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setDate(this.nextDate.getDate()+1);\r\n\r\n    this.retrievePublishedLectureSessionsCurrentDate();\r\n\r\n\r\n    // Calling function to retrieving the all lecture sessions from the firestore database\r\n    this.lecturesService.retrieveAllPublishedLectureSessions(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(allLectureSessionSlots => {\r\n      // Setting loading spinner in all lecture sessions to stop spinning\r\n      this.showLoadingDotsAllLectureSession = false;\r\n\r\n      this.eventSourceLectureSession = []; // Clearing the existing lecture sessions on the calendar before syncing \r\n      allLectureSessionSlots.forEach(snap => {\r\n        let eventLectureSession:any = snap.payload.doc.data();\r\n        eventLectureSession.id = snap.payload.doc.id;\r\n        eventLectureSession.title = eventLectureSession.moduleCode + \"-\" + eventLectureSession.moduleTitle + \"\\n | Status: \" + eventLectureSession.status;\r\n        eventLectureSession.startTime = eventLectureSession.startDateTime.toDate();\r\n        eventLectureSession.endTime = eventLectureSession.endDateTime.toDate();\r\n\r\n        console.log(eventLectureSession);\r\n\r\n        this.eventSourceLectureSession.push(eventLectureSession);\r\n      });\r\n    }, error => {\r\n      // Setting loading spinner in all lecture sessions to stop spinning\r\n      this.showLoadingDotsAllLectureSession = false;\r\n\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n\r\n\r\n  // Retreving the lecture sessions of the current date and their details from the firestore database\r\n  publishedLectureSessionCurrentDate;\r\n  retrievePublishedLectureSessionsCurrentDate = () => {\r\n    this.lecturesService.retrievePublishedLectureSessionsCurrentDate(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), this.currentDate, this.nextDate).subscribe(response => {\r\n      if (response.length > 0) {\r\n        \r\n        // Setting loading spinner in todays lecture session to stop spinning\r\n        this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n        this.publishedLectureSessionCurrentDate = response;\r\n\r\n      }\r\n      else {\r\n        // Setting loading spinner in todays lecture session to stop spinning\r\n        this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n        this.noLectureSessionTodayText = true;\r\n      }\r\n    }, error => {\r\n      // Setting loading spinner in todays lecture session to stop spinning\r\n      this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Editing lecture sessions modal calling (lecture schedule), opening modal\r\n  async editLectureSessionSchedule(value){\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.payload.doc.id,\r\n        lectureSessionBatch: value.payload.doc.data().batch,\r\n        lectureSessionDegreeProgram: value.payload.doc.data().degree,\r\n        lectureSessionAcademicYear: value.payload.doc.data().academicYear, \r\n        lectureSessionAcademicSemester: value.payload.doc.data().academicSemester,\r\n        lectureSesionModuleCode: value.payload.doc.data().moduleCode,\r\n        lectureSessionModuleTitle: value.payload.doc.data().moduleTitle,\r\n        lectureSessionStartDateTime: value.payload.doc.data().startDateTime,\r\n        lectureSessionEndDateTime: value.payload.doc.data().endDateTime,\r\n        lectureSessionLecturer: value.payload.doc.data().lecturer,\r\n        lectureSessionLectureHall: value.payload.doc.data().lectureHall,\r\n        lectureSessionStatus: value.payload.doc.data().status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  lectureSessionsDocuments = [];\r\n\r\n  // All Available Lecture Sessions Calendar\r\n  eventSourceLectureSession;\r\n  viewingMonthLectureSession;\r\n\r\n  calendarLectureSession = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  selectedDate = new Date();\r\n\r\n  nextMonthLectureSession(){\r\n    var frontSwipeLectureSession = document.getElementById('lectureSessionSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipeLectureSession.slideNext();\r\n  }\r\n\r\n  previousMonthLectureSession(){\r\n    var backSwipeLectureSession = document.getElementById('lectureSessionSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipeLectureSession.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedLectureSession(title){\r\n    console.log(title);\r\n    this.viewingMonthLectureSession = title; \r\n  }\r\n\r\n  onEventSelectedLectureSession(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title); \r\n  }\r\n\r\n  onTimeSelectedLectureSession(event){\r\n    console.log(\"Lecture Session Selected Time: \" + event.selectedTime + \", has sessions: \" + (event.events !== undefined && event.events.length !== 0) +\r\n      \", disabled: \" + event.disabled);\r\n\r\n      if((event.events !== undefined && event.events.length !== 0) == false){\r\n        this.lectureSessionsDocuments = [];\r\n        this.noLectureSessionAllText = true;\r\n      }\r\n      else if ((event.events !== undefined && event.events.length !== 0) == true){\r\n        this.lectureSessionsDocuments = event.events;\r\n        this.noLectureSessionAllText = false;\r\n      }\r\n      console.log(this.lectureSessionsDocuments);\r\n  }\r\n\r\n  onCurrentDateChangedLectureSession(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n\r\n    this.lectureSessionsDocuments = [];\r\n  }\r\n\r\n  onRangeChangedLectureSession(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n\r\n  // More details of lecture sessions popover\r\n  async moreDetailsLectureSession(ev: Event, value){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: MoreDetailsSessionPopoverPage,\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        batch: value.batch,\r\n        lecturer: value.lecturer,\r\n        lectureHall: value.lectureHall,\r\n        degree: value.degree,\r\n        degreeCode: value.degreeCode,\r\n        awardingBodyUniversity: value.awardingBodyUniversity,\r\n        academicPeriodYear: value.academicYear,\r\n        academicPeriodSemester: value.academicSemester\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  // Editing lecture sessions modal calling, opening modal\r\n  async editLectureSession(value){\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        lectureSessionBatch: value.batch,\r\n        lectureSessionDegreeProgram: value.degreeProgram,\r\n        lectureSessionAcademicYear: value.academicYear,\r\n        lectureSessionAcademicSemester: value.academicSemester,\r\n        lectureSesionModuleCode: value.moduleCode,\r\n        lectureSessionModuleTitle: value.moduleTitle,\r\n        lectureSessionStartDateTime: value.startTime,\r\n        lectureSessionEndDateTime: value.endTime,\r\n        lectureSessionLecturer: value.lecturer,\r\n        lectureSessionLectureHall: value.lectureHall,\r\n        lectureSessionStatus: value.status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Remove existing lecture session)\r\n  async removeLectureSession ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Request Accepted\");\r\n            // Calling function to remove lecture session\r\n            this.lecturesService.removeLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}