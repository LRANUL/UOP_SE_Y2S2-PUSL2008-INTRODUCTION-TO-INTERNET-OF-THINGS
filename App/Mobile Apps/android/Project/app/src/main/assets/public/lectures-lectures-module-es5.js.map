{"version":3,"sources":["src/app/office/lectures/lectures.page.html","src/app/office/lectures/lectures-routing.module.ts","src/app/office/lectures/lectures.module.ts","src/app/office/lectures/lectures.page.scss","src/app/office/lectures/lectures.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Lectures</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card style=\\\"height: 670px;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Today's Lectures\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <div style=\\\"width: 100%;\\r\\n                        height: 600px;\\r\\n                        overflow-y: scroll;\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Batch</th>\\r\\n                    <th>Module Code</th>\\r\\n                    <th>Module Title</th>\\r\\n                    <th>Session Start Time</th>\\r\\n                    <th>Session End Time</th>\\r\\n                    <th>Lecture Hall</th>\\r\\n                    <th>Lecturer</th>\\r\\n                    <th>Session Status</th>\\r\\n                    <th>Activity</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of publishedLectureSessionCurrentDate\\\">\\r\\n                    <td>{{ item.payload.doc.data().batch }}</td>\\r\\n                    <td>{{ item.payload.doc.data().moduleCode }}</td>\\r\\n                    <td>{{ item.payload.doc.data().moduleTitle }}</td>\\r\\n                    <td>{{ item.payload.doc.data().startDateTime.toDate() | date: 'h:mm a' }}</td>\\r\\n                    <td>{{ item.payload.doc.data().endDateTime.toDate() | date: 'h:mm a'}}</td>\\r\\n                    <td>{{ item.payload.doc.data().lectureHall }}</td>\\r\\n                    <td>{{ item.payload.doc.data().lecturer }}</td>\\r\\n                    <td>{{ item.payload.doc.data().status }}</td>\\r\\n                    <td>\\r\\n                      <ion-button (click)=\\\"editLectureSessionSchedule(item)\\\">\\r\\n                        EDIT\\r\\n                      </ion-button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n\\r\\n            <!-- Loading Spinner -->\\r\\n            <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                            left: 50%;\\r\\n                                            top: 50%;\\r\\n                                            transform: translate(-50%, -50%);\\r\\n                                            height: 100px;\\r\\n                                            width: 100px;\\\" *ngIf=\\\"showLoadingDotsCurrentDateLectureSession\\\"></ion-spinner>\\r\\n\\r\\n            <div *ngIf=\\\"noLectureSessionTodayText\\\" style=\\\"position: absolute;\\r\\n                                                    left: 50%;\\r\\n                                                    top: 50%;\\r\\n                                                    transform: translate(-50%,-50%);\\r\\n                                                    padding: 5px;\\\">\\r\\n              <ion-item>\\r\\n                <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                  No Lecture Session Assigned for Today\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card style=\\\"height: 800px;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              All Available Lectures Sessions\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -35px;\\\">\\r\\n                \\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthLectureSession()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n\\r\\n              <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                {{ viewingMonthLectureSession }}\\r\\n              </ion-label>\\r\\n\\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthLectureSession()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n\\r\\n            </div>\\r\\n          \\r\\n            <div style=\\\"overflow-y: scroll;\\r\\n                        margin-top: 20px;\\\">\\r\\n                <div style=\\\"height: 700px;\\\">\\r\\n                <calendar [eventSource]=\\\"eventSourceLectureSession\\\"\\r\\n                [calendarMode]=\\\"calendarLectureSession.mode\\\"\\r\\n                [currentDate]=\\\"calendarLectureSession.currentDate\\\"\\r\\n                (onCurrentDateChanged)=\\\"onCurrentDateChangedLectureSession($event)\\\"\\r\\n                (onRangeChanged)=\\\"onRangeChangedLectureSession($event)\\\"\\r\\n                (onEventSelected)=\\\"onEventSelectedLectureSession($event)\\\"\\r\\n                (onTitleChanged)=\\\"onViewTitleChangedLectureSession($event)\\\"\\r\\n                (onTimeSelected)=\\\"onTimeSelectedLectureSession($event)\\\"\\r\\n                startHour=\\\"9\\\"\\r\\n                endHour=\\\"17\\\"\\r\\n                step=\\\"30\\\"\\r\\n                startingDayWeek=\\\"1\\\" id=\\\"lectureSessionSemesterCalendar\\\">\\r\\n              \\r\\n                </calendar>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"noLectureSessionAllText\\\" style=\\\"position: absolute;\\r\\n                                                    left: 50%;\\r\\n                                                    top: 70%;\\r\\n                                                    transform: translate(-50%,-30%);\\r\\n                                                    padding: 5px;\\\">\\r\\n              <ion-item>\\r\\n                <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                  No Lecture Session Assigned for this date\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <ion-grid style=\\\"width: 140px;\\r\\n                                  position: absolute;\\r\\n                                  top: 278px;\\r\\n                                  right: 1%;\\r\\n                                  padding: 0;\\r\\n                                  margin: 0;\\\">\\r\\n              <ion-row *ngFor=\\\"let session of lectureSessionsDocuments\\\">\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Lecture Session Read More\\\" color=\\\"secondary\\\" (click)=\\\"moreDetailsLectureSession($event, session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                              height: 40px;\\r\\n                                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                                              margin-left: -10px;\\\">\\r\\n                    <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Edit Lecture Session\\\" color=\\\"warning\\\" (click)=\\\"editLectureSession(session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                        height: 40px;\\r\\n                                                                                                                                        border-radius: 5px;\\r\\n                                                                                                                                        margin-bottom: -5px;\\r\\n                                                                                                                                        margin-left: -12px;\\\">\\r\\n                    <ion-icon name=\\\"create\\\" style=\\\"color: white;\\r\\n                                                  font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Remove Lecture Session\\\" color=\\\"danger\\\"\\r\\n                    (click)=\\\"removeLectureSession('Confirmation Required', 'This lecture session will be removed, do you want to continue?', session.id)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                        height: 40px;\\r\\n                                                                                                                                                        border-radius: 5px;\\r\\n                                                                                                                                                        margin-bottom: -5px;\\r\\n                                                                                                                                                        margin-left: -14px;\\\">\\r\\n                    <ion-icon name=\\\"trash\\\" style=\\\"margin-left: -1px;\\r\\n                                                  font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <!-- Loading Spinner -->\\r\\n            <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                            left: 50%;\\r\\n                                            top: 50%;\\r\\n                                            transform: translateX(-50%, -50%);\\r\\n                                            height: 100px;\\r\\n                                            width: 100px;\\\" *ngIf=\\\"showLoadingDotsAllLectureSession\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LecturesPage } from './lectures.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LecturesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LecturesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LecturesPageRoutingModule } from './lectures-routing.module';\r\n\r\nimport { LecturesPage } from './lectures.page';\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgCalendarModule,\r\n    IonicModule,\r\n    LecturesPageRoutingModule\r\n  ],\r\n  declarations: [LecturesPage]\r\n})\r\nexport class LecturesPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px; }\\n\\nion-label {\\n  color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL2xlY3R1cmVzL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcbGVjdHVyZXNcXGxlY3R1cmVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLHNCQUFzQjtFQUN0QixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vZmZpY2UvbGVjdHVyZXMvbGVjdHVyZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbn1cclxuXHJcbmlvbi1jYXJke1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG4gICAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuaW9uLWxhYmVse1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { ModalController, AlertController, PopoverController } from '@ionic/angular';\r\nimport { EditLectureSessionModalPage } from '../semester-calendar/edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { MoreDetailsSessionPopoverPage } from '../semester-calendar/more-details-session-popover/more-details-session-popover.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-lectures',\r\n  templateUrl: './lectures.page.html',\r\n  styleUrls: ['./lectures.page.scss'],\r\n})\r\nexport class LecturesPage implements OnInit {\r\n\r\n  currentDate;\r\n  nextDate;\r\n\r\n  showLoadingDotsCurrentDateLectureSession: Boolean = true;\r\n\r\n  showLoadingDotsAllLectureSession: Boolean = true;\r\n\r\n  noLectureSessionTodayText: Boolean = false;\r\n\r\n  noLectureSessionAllText: Boolean = false;\r\n\r\n  constructor(\r\n    private lecturesService: FirebaseService,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private popoverController: PopoverController,\r\n    private modalController: ModalController,\r\n    private alertController: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.currentDate = new Date();\r\n\r\n    // Setting currentDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.currentDate.setHours(0,0,0,0);\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.nextDate = new Date();\r\n\r\n    // Setting nextDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setHours(0,0,0,0);\r\n\r\n    // Setting date section to increment by one\r\n    // Sample: Sun Apr 20 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setDate(this.nextDate.getDate()+1);\r\n\r\n    this.retrievePublishedLectureSessionsCurrentDate();\r\n\r\n\r\n    // Calling function to retrieving the all lecture sessions from the firestore database\r\n    this.lecturesService.retrieveAllPublishedLectureSessions(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(allLectureSessionSlots => {\r\n      // Setting loading spinner in all lecture sessions to stop spinning\r\n      this.showLoadingDotsAllLectureSession = false;\r\n\r\n      this.eventSourceLectureSession = []; // Clearing the existing lecture sessions on the calendar before syncing \r\n      allLectureSessionSlots.forEach(snap => {\r\n        let eventLectureSession:any = snap.payload.doc.data();\r\n        eventLectureSession.id = snap.payload.doc.id;\r\n        eventLectureSession.title = eventLectureSession.moduleCode + \"-\" + eventLectureSession.moduleTitle + \"\\n | Status: \" + eventLectureSession.status;\r\n        eventLectureSession.startTime = eventLectureSession.startDateTime.toDate();\r\n        eventLectureSession.endTime = eventLectureSession.endDateTime.toDate();\r\n\r\n        console.log(eventLectureSession);\r\n\r\n        this.eventSourceLectureSession.push(eventLectureSession);\r\n      });\r\n    }, error => {\r\n      // Setting loading spinner in all lecture sessions to stop spinning\r\n      this.showLoadingDotsAllLectureSession = false;\r\n\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n\r\n\r\n  // Retreving the lecture sessions of the current date and their details from the firestore database\r\n  publishedLectureSessionCurrentDate;\r\n  retrievePublishedLectureSessionsCurrentDate = () => {\r\n    this.lecturesService.retrievePublishedLectureSessionsCurrentDate(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), this.currentDate, this.nextDate).subscribe(response => {\r\n      if (response.length > 0) {\r\n        \r\n        // Setting loading spinner in todays lecture session to stop spinning\r\n        this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n        this.publishedLectureSessionCurrentDate = response;\r\n\r\n      }\r\n      else {\r\n        // Setting loading spinner in todays lecture session to stop spinning\r\n        this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n        this.noLectureSessionTodayText = true;\r\n      }\r\n    }, error => {\r\n      // Setting loading spinner in todays lecture session to stop spinning\r\n      this.showLoadingDotsCurrentDateLectureSession = false;\r\n\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Editing lecture sessions modal calling (lecture schedule), opening modal\r\n  async editLectureSessionSchedule(value){\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.payload.doc.id,\r\n        lectureSessionBatch: value.payload.doc.data().batch,\r\n        lectureSessionDegreeProgram: value.payload.doc.data().degree,\r\n        lectureSessionAcademicYear: value.payload.doc.data().academicYear, \r\n        lectureSessionAcademicSemester: value.payload.doc.data().academicSemester,\r\n        lectureSesionModuleCode: value.payload.doc.data().moduleCode,\r\n        lectureSessionModuleTitle: value.payload.doc.data().moduleTitle,\r\n        lectureSessionStartDateTime: value.payload.doc.data().startDateTime,\r\n        lectureSessionEndDateTime: value.payload.doc.data().endDateTime,\r\n        lectureSessionLecturer: value.payload.doc.data().lecturer,\r\n        lectureSessionLectureHall: value.payload.doc.data().lectureHall,\r\n        lectureSessionStatus: value.payload.doc.data().status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  lectureSessionsDocuments = [];\r\n\r\n  // All Available Lecture Sessions Calendar\r\n  eventSourceLectureSession;\r\n  viewingMonthLectureSession;\r\n\r\n  calendarLectureSession = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  selectedDate = new Date();\r\n\r\n  nextMonthLectureSession(){\r\n    var frontSwipeLectureSession = document.getElementById('lectureSessionSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipeLectureSession.slideNext();\r\n  }\r\n\r\n  previousMonthLectureSession(){\r\n    var backSwipeLectureSession = document.getElementById('lectureSessionSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipeLectureSession.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedLectureSession(title){\r\n    console.log(title);\r\n    this.viewingMonthLectureSession = title; \r\n  }\r\n\r\n  onEventSelectedLectureSession(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title); \r\n  }\r\n\r\n  onTimeSelectedLectureSession(event){\r\n    console.log(\"Lecture Session Selected Time: \" + event.selectedTime + \", has sessions: \" + (event.events !== undefined && event.events.length !== 0) +\r\n      \", disabled: \" + event.disabled);\r\n\r\n      if((event.events !== undefined && event.events.length !== 0) == false){\r\n        this.lectureSessionsDocuments = [];\r\n        this.noLectureSessionAllText = true;\r\n      }\r\n      else if ((event.events !== undefined && event.events.length !== 0) == true){\r\n        this.lectureSessionsDocuments = event.events;\r\n        this.noLectureSessionAllText = false;\r\n      }\r\n      console.log(this.lectureSessionsDocuments);\r\n  }\r\n\r\n  onCurrentDateChangedLectureSession(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n\r\n    this.lectureSessionsDocuments = [];\r\n  }\r\n\r\n  onRangeChangedLectureSession(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n\r\n  // More details of lecture sessions popover\r\n  async moreDetailsLectureSession(ev: Event, value){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: MoreDetailsSessionPopoverPage,\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        batch: value.batch,\r\n        lecturer: value.lecturer,\r\n        lectureHall: value.lectureHall,\r\n        degree: value.degree,\r\n        degreeCode: value.degreeCode,\r\n        awardingBodyUniversity: value.awardingBodyUniversity,\r\n        academicPeriodYear: value.academicYear,\r\n        academicPeriodSemester: value.academicSemester\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n  // Editing lecture sessions modal calling, opening modal\r\n  async editLectureSession(value){\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        lectureSessionBatch: value.batch,\r\n        lectureSessionDegreeProgram: value.degreeProgram,\r\n        lectureSessionAcademicYear: value.academicYear,\r\n        lectureSessionAcademicSemester: value.academicSemester,\r\n        lectureSesionModuleCode: value.moduleCode,\r\n        lectureSessionModuleTitle: value.moduleTitle,\r\n        lectureSessionStartDateTime: value.startTime,\r\n        lectureSessionEndDateTime: value.endTime,\r\n        lectureSessionLecturer: value.lecturer,\r\n        lectureSessionLectureHall: value.lectureHall,\r\n        lectureSessionStatus: value.status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Remove existing lecture session)\r\n  async removeLectureSession ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Request Accepted\");\r\n            // Calling function to remove lecture session\r\n            this.lecturesService.removeLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"lectures-lectures-module-es5.js"}