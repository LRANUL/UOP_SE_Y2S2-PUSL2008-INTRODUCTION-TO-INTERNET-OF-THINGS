{"version":3,"sources":["./src/app/office/semester-calendar/semester-calendar.page.html","./src/app/office/semester-calendar/semester-calendar-routing.module.ts","./src/app/office/semester-calendar/semester-calendar.module.ts","./src/app/office/semester-calendar/semester-calendar.page.scss","./src/app/office/semester-calendar/semester-calendar.page.ts"],"names":[],"mappings":"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","file":"semester-calendar-semester-calendar-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"height: 70px;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Semester Calendar</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Assigned Semester Calendars\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"5\\\">\\r\\n\\r\\n                  <form [formGroup]=\\\"searchSemesterCalendar\\\" (ngSubmit)=\\\"doSearchSemesterCalendar(searchSemesterCalendar.value)\\\">\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item>\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">Batch</ion-label>\\r\\n                          <ion-select placeholder=\\\"Select Batch\\\" okText=\\\"Select\\\" id=\\\"batchOption\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"batch\\\" style=\\\"max-width: 100%;\\\">\\r\\n                            <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">{{ item.payload.doc.data().batch }}</ion-select-option>\\r\\n                          </ion-select>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: 10px;\\\">\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">\\r\\n                            Degree Program\\r\\n                          </ion-label>\\r\\n                          <ion-select placeholder=\\\"Select Degree Program\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"degreeProgram\\\" style=\\\"max-width: 100% !important;\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                              </ion-select-option>\\r\\n                          </ion-select>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: 10px;\\\">\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">\\r\\n                            Academic Period\\r\\n                          </ion-label>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-select placeholder=\\\"Select Year\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"academicPeriodYear\\\" style=\\\"max-width: 100% !important;\\\">\\r\\n                                  <ion-select-option value=\\\"1\\\">Year 1</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"2\\\">Year 2</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"3\\\">Year 3</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"4\\\">Year 4</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-select placeholder=\\\"Select Semester\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"academicPeriodSemester\\\" style=\\\"max-width: 100% !important;\\\">\\r\\n                                  <ion-select-option value=\\\"1\\\">Semester 1</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"2\\\">Semester 2</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!searchSemesterCalendar.valid\\\">\\r\\n                          <ion-icon name=\\\"search-outline\\\"></ion-icon>\\r\\n                          <ion-label style=\\\"color: white;\\r\\n                                            margin-left: 10px;\\\">\\r\\n                            SEARCH\\r\\n                          </ion-label>\\r\\n                        </ion-button>          \\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </form>\\r\\n\\r\\n                  <!-- Loading Spinner -->\\r\\n                  <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\r\\n                                              margin-top: -25px;\\r\\n                                              height: 100px;\\r\\n                                              width: 100px;\\\" *ngIf=\\\"loadingSpinnerPLS\\\"></ion-spinner>\\r\\n                \\r\\n\\r\\n                </ion-col>\\r\\n\\r\\n                  <!-- Vertical line in the center of the page -->\\r\\n                  <div style=\\\"border-left: rgb(236, 236, 236) solid 2px;\\r\\n                              height: 105%;\\r\\n                              position: absolute;\\r\\n                              left: 41.7%;\\r\\n                              top: -40px;\\r\\n                              transform: translateX(-68.3%);\\\">\\r\\n                  </div>\\r\\n\\r\\n                <ion-col size=\\\"7\\\">\\r\\n\\r\\n                  <!-- Reset Button -->\\r\\n                  <ion-button style=\\\"width: 90px;\\r\\n                                    position: absolute;\\r\\n                                    top: -55px;\\r\\n                                    right: -1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetSearchAssignedSemesterCalendar()\\\"> \\r\\n                    <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                    <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                      margin-left: 5px;\\\">\\r\\n                      Reset\\r\\n                    </ion-label>\\r\\n                  </ion-button>\\r\\n                  \\r\\n                  <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -40px;\\\">\\r\\n                \\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthPSCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                      <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                    <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                      {{ viewingMonthPSCalendar }}\\r\\n                    </ion-label>\\r\\n\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthPSCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                      <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                  </div>\\r\\n                \\r\\n                  <div style=\\\"overflow-y: scroll;\\\">\\r\\n                      <div style=\\\"height: 450px;\\\">\\r\\n                      <calendar [eventSource]=\\\"eventSourcePSCalendar\\\"\\r\\n                      [calendarMode]=\\\"calendarPSCalendar.mode\\\"\\r\\n                      [currentDate]=\\\"calendarPSCalendar.currentDate\\\"\\r\\n                      (onCurrentDateChanged)=\\\"onCurrentDateChangedPSCalendar($event)\\\"\\r\\n                      (onRangeChanged)=\\\"onRangeChangedPSCalendar($event)\\\"\\r\\n                      (onEventSelected)=\\\"onEventSelectedPSCalendar($event)\\\"\\r\\n                      (onTitleChanged)=\\\"onViewTitleChangedPSCalendar($event)\\\"\\r\\n                      (onTimeSelected)=\\\"onTimeSelectedPSCalendar($event)\\\"\\r\\n                      startHour=\\\"9\\\"\\r\\n                      endHour=\\\"17\\\"\\r\\n                      step=\\\"30\\\"\\r\\n                      startingDayWeek=\\\"1\\\" id=\\\"publishedSemesterCalendar\\\">\\r\\n                    \\r\\n                      </calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <ion-grid style=\\\"width: 140px;\\r\\n                                  position: absolute;\\r\\n                                  top: 282px;\\r\\n                                  right: 1%;\\r\\n                                  padding: 0;\\r\\n                                  margin: 0;\\\">\\r\\n                    <ion-row *ngFor=\\\"let session of lectureSessionsDocuments\\\">\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Lecture Session Read More\\\" color=\\\"secondary\\\" (click)=\\\"moreDetailsLectureSession($event, session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                                    height: 40px;\\r\\n                                                                                                                                                                    border-radius: 5px;\\r\\n                                                                                                                                                                    margin-bottom: -5px;\\r\\n                                                                                                                                                                    margin-left: -10px;\\\">\\r\\n                          <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Edit Lecture Session\\\" color=\\\"warning\\\" (click)=\\\"editLectureSession(session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                              height: 40px;\\r\\n                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                              margin-left: -12px;\\\">\\r\\n                          <ion-icon name=\\\"create\\\" style=\\\"color: white;\\r\\n                                                        font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Remove Lecture Session\\\" color=\\\"danger\\\"\\r\\n                          (click)=\\\"removeLectureSession('Confirmation Required', 'This lecture session will be removed, do you want to continue?', session.id)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                              height: 40px;\\r\\n                                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                                              margin-left: -14px;\\\">\\r\\n                          <ion-icon name=\\\"trash\\\" style=\\\"margin-left: -1px;\\r\\n                                                        font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n\\r\\n\\r\\n              \\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            \\r\\n            \\r\\n           \\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Create New Semester Calendar / Add New Lecture Sessions\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"5.5\\\" size-sm=\\\"12\\\" size-lg=\\\"5.5\\\">\\r\\n                  \\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Semester Information</b>\\r\\n                      </p>\\r\\n\\r\\n                      <form [formGroup]=\\\"assignNewLectureSlotSC\\\" (ngSubmit)=\\\"doPublishLectureSlotSC(assignNewLectureSlotSC.value)\\\">\\r\\n\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Degree Program\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\"  \\r\\n                                    value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Acadamic Year\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <div style=\\\"border: #ccc solid 1px;\\r\\n                                          border-radius: 5px;\\\">\\r\\n\\r\\n                                <ion-row>\\r\\n                                  <ion-select placeholder=\\\"Select Year\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" style=\\\"max-width: 100% !important;\\\" formControlName=\\\"academicPeriodYear\\\">\\r\\n                                      <ion-select-option value=\\\"1\\\">Year 1</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"2\\\">Year 2</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"3\\\">Year 3</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"4\\\">Year 4</ion-select-option>\\r\\n                                 </ion-select>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-select placeholder=\\\"Select Semester\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" style=\\\"max-width: 100% !important;\\\" formControlName=\\\"academicPeriodSemester\\\">\\r\\n                                      <ion-select-option value=\\\"1\\\">Semester 1</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"2\\\">Semester 2</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"3\\\">Semester 3</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"4\\\">Semester 4</ion-select-option>\\r\\n                                  </ion-select>\\r\\n                                </ion-row>\\r\\n\\r\\n                              </div>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          \\r\\n                        </ion-grid>\\r\\n\\r\\n\\r\\n                        <p style=\\\"font-size: 20px;\\\">\\r\\n                          <b>Lecture Information</b>\\r\\n                        </p>\\r\\n\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Module\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"module\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                    {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecturer\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecturer\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Lecturer\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"lecturer\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" \\r\\n                                    value=\\\"\\r\\n                                      {{ item.payload.doc.data().name.prefix }}\\r\\n                                      {{ item.payload.doc.data().name.firstName }}\\r\\n                                      {{ item.payload.doc.data().name.lastName }}\\r\\n                                    \\\">\\r\\n                                    {{ item.payload.doc.data().name.prefix }}\\r\\n                                    {{ item.payload.doc.data().name.firstName }}\\r\\n                                    {{ item.payload.doc.data().name.lastName }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Hall\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecture Hall\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Lecture Hall\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"lectureHall\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedLectureHalls\\\" value=\\\"{{ item.payload.doc.data().lectureHall }}\\\">\\r\\n                                    {{ item.payload.doc.data().lectureHall }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Status\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecture Status\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Status\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"status\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedLectureSessionStatuses\\\" value=\\\"{{ item.payload.doc.data().status }}\\\">\\r\\n                                    {{ item.payload.doc.data().status }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                        \\r\\n\\r\\n\\r\\n                        <ion-label style=\\\"font-size: 15px;\\r\\n                                  margin-left: 30px;\\\">\\r\\n                          Select an Option\\r\\n                        </ion-label>\\r\\n\\r\\n                        \\r\\n                        <ion-grid>\\r\\n                          <ion-row style=\\\"padding-bottom: 5px;\\\">\\r\\n                            <ion-col>\\r\\n                              <ion-radio-group (ionChange)=\\\"loadFormContent($event)\\\" formControlName=\\\"addLectureContentLoadOption\\\">\\r\\n                                <div style=\\\"border: #ccc 1px solid;\\r\\n                                                padding: 5px;\\r\\n                                                border-radius: 5px;\\\">\\r\\n                                  <ion-grid>\\r\\n                                    <ion-row>\\r\\n                                      <ion-col>\\r\\n                                        <ion-item style=\\\"border: none;\\\">\\r\\n                                          <ion-label>Assign Each Session Individually</ion-label>\\r\\n                                          <ion-radio slot=\\\"start\\\" value=\\\"lectureAssignIndividaully\\\"></ion-radio>\\r\\n                                        </ion-item>\\r\\n                                      </ion-col>\\r\\n                                    </ion-row>\\r\\n                                    <ion-row>\\r\\n                                      <ion-col>\\r\\n                                        <ion-item style=\\\"border: none;\\\">\\r\\n                                          <ion-label>Assign Same Session on the same day for Multiple Weeks</ion-label>\\r\\n                                          <ion-radio slot=\\\"start\\\" value=\\\"lectureAssignGroup\\\"></ion-radio>\\r\\n                                        </ion-item>\\r\\n                                      </ion-col>\\r\\n                                    </ion-row>\\r\\n                                  </ion-grid>\\r\\n                               </div>\\r\\n                              </ion-radio-group>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n\\r\\n                        \\r\\n                        <!-- Assign Each Session Manually -->\\r\\n                        <ion-grid *ngIf=\\\"userSelectionLectureAssignIndividually\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick Session Date\\\" formControlName=\\\"sessionDateSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session Start Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick Start Time\\\" display-format=\\\"h:mm A\\\" formControlName=\\\"sessionStartTimeSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session End Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick End Time\\\" display-format=\\\"h:mm A\\\" formControlName=\\\"sessionEndTimeSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n\\r\\n\\r\\n                        <!-- Assign Same Session on the same day for Multiple Weeks -->\\r\\n                        <ion-grid *ngIf=\\\"userSelectionLectureAssignGroup\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Day\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Day\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Day\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"sessionDayMultiple\\\">\\r\\n                                  <ion-select-option value=\\\"Mon\\\">Monday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Tue\\\">Tuesday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Wed\\\">Wednesday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Thu\\\">Thrusday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Fri\\\">Friday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Sat\\\">Saturday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Sun\\\">Sunday</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Start Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime value=\\\"2020-03-02\\\" formControlName=\\\"sessionStartDateMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session End Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime value=\\\"2020-03-02\\\" formControlName=\\\"sessionEndDateMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Start Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"09:00\\\" formControlName=\\\"sessionStartTimeMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session End Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"12:00\\\" formControlName=\\\"sessionEndTimeMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                        \\r\\n                        <!-- Horizontal line -->\\r\\n                        <div style=\\\"border-bottom: #ccc solid 2px;\\r\\n                                    width: 100%;\\r\\n                                    margin-top: 10px;\\r\\n                                    margin-bottom: 20px;\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!assignNewLectureSlotSC.valid\\\">\\r\\n                          Add Session\\r\\n                        </ion-button>\\r\\n\\r\\n                      </form>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6.5\\\" size-sm=\\\"12\\\" size-lg=\\\"6.5\\\">\\r\\n                  \\r\\n                  <!-- Reset Button -->\\r\\n                  <ion-button style=\\\"width: 90px;\\r\\n                                    position: absolute;\\r\\n                                    top: -55px;\\r\\n                                    right: -1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetAssignSemesterCalendar()\\\"> \\r\\n                    <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                    <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                      margin-left: 5px;\\\">\\r\\n                      Reset\\r\\n                    </ion-label>\\r\\n                  </ion-button>\\r\\n                  \\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Active Calendar</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -50px;\\\">\\r\\n                \\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthASCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          {{ viewingMonthASCalendar }}\\r\\n                        </ion-label>\\r\\n\\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthASCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                      <div style=\\\"overflow-y: scroll;\\r\\n                                  margin-top: 20px;\\\">\\r\\n                        <div style=\\\"height: 500px;\\\">\\r\\n                          <calendar [eventSource]=\\\"eventSourceASCalendar\\\"\\r\\n                          [calendarMode]=\\\"calendarASCalendar.mode\\\"\\r\\n                          [currentDate]=\\\"calendarASCalendar.currentDate\\\"\\r\\n                          (onCurrentDateChanged)=\\\"onCurrentDateChangedASCalendar($event)\\\"\\r\\n                          (onRangeChanged)=\\\"onRangeChangedASCalendar($event)\\\"\\r\\n                          (onEventSelected)=\\\"onEventSelectedASCalendar($event)\\\"\\r\\n                          (onTitleChanged)=\\\"onViewTitleChangedASCalendar($event)\\\"\\r\\n                          (onTimeSelected)=\\\"onTimeSelectedASCalendar($event)\\\"\\r\\n                          startHour=\\\"9\\\"\\r\\n                          endHour=\\\"17\\\"\\r\\n                          step=\\\"30\\\"\\r\\n                          startingDayWeek=\\\"1\\\" id=\\\"activeSemesterCalendar\\\">\\r\\n                        \\r\\n                          </calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Lecture Series\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n\\r\\n                <ion-col>\\r\\n      \\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Create New Lecture Series</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                    <form [formGroup]=\\\"createNewLectureSeriesForm\\\" (ngSubmit)=\\\"doCreateNewLectureSeries(createNewLectureSeriesForm.value)\\\">\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Program\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\" >\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\" formControlName=\\\"module\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" \\r\\n                                    value=\\\"{{ item.payload.doc.data().moduleCode }}\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\">\\r\\n                                      {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Number of Lectures \\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-input type=\\\"number\\\" clearInput placeholder=\\\"No Of Lectures\\\" formControlName=\\\"noOfLectures\\\"></ion-input>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Enrollment KEY\\r\\n                              </ion-label>\\r\\n                              <ion-button style=\\\"position: absolute;\\r\\n                                                right: 5%;\\\">\\r\\n                                Generate\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-input type=\\\"text\\\" placeholder=\\\"Key\\\" formControlName=\\\"enrollmentKey\\\"></ion-input>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col>\\r\\n                              <ion-checkbox checked=\\\"false\\\"></ion-checkbox>\\r\\n                              <p style=\\\"position: absolute;\\r\\n                                        top: 5px;\\r\\n                                        left: 30px;\\\">Send Email to Batch Students (Outlook)</p>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!createNewLectureSeriesForm.valid\\\">\\r\\n                            CREATE\\r\\n                          </ion-button>\\r\\n                          \\r\\n                        </ion-grid>\\r\\n                      </form>\\r\\n\\r\\n\\r\\n                      <!-- Reset Button -->\\r\\n                      <ion-button style=\\\"width: 90px;\\r\\n                                        position: absolute;\\r\\n                                        top: -55px;\\r\\n                                        right: 1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetCreatedLectureSeries()\\\"> \\r\\n                        <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          Reset\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                  \\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n      \\r\\n      \\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n      \\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>View Created Lecture Series</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <form [formGroup]=\\\"searchLectureSeriesForm\\\" (ngSubmit)=\\\"doSearchLectureSeries(searchLectureSeriesForm.value)\\\">\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Program\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\" formControlName=\\\"degreeProgram\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\" formControlName=\\\"module\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" \\r\\n                                    value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                      {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n            \\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n            \\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!searchLectureSeriesForm.valid\\\"> \\r\\n                          Search\\r\\n                        </ion-button>\\r\\n                      </form>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"showPublishedLectureSeries\\\">\\r\\n                        <ion-card *ngFor=\\\"let item of publishedLectureSeries\\\">\\r\\n\\r\\n                          <ion-card-content>\\r\\n\\r\\n                            <ion-label style=\\\"font-size: 15px;\\\">\\r\\n                              Published Lecturer Series\\r\\n                            </ion-label>\\r\\n\\r\\n                            <ion-card>\\r\\n\\r\\n                              <ion-card-content>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>No of Lectures: </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <ion-label>\\r\\n                                        {{ item.payload.doc.data().noOfLectures }} lecturers\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>Enrollment Key: </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <ion-label>\\r\\n                                        {{ item.payload.doc.data().enrollmentKey }}\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>Enrolled Students </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <div style=\\\"height: 300px;\\r\\n                                                  border: #ccc solid 1px;\\r\\n                                                  border-radius: 5pxl;\\r\\n                                                  padding: 5px;\\r\\n                                                  overflow-y: scroll;\\\">\\r\\n                                        <ion-label>\\r\\n                                          {{ item.payload.doc.data().enrolledStudents }}\\r\\n                                        </ion-label>\\r\\n                                      </div>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n\\r\\n                                <ion-grid style=\\\"position: absolute;\\r\\n                                                top: 280px;\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"secondary\\\" style=\\\"width: 120px;\\\" (click)=\\\"editLectureSeries(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\" \\r\\n                                        (click)=\\\"removeLectureSeries('Confirmation Required', 'This lecture series will be removed, do you want to continue? ', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                                \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                              </ion-card-content>\\r\\n\\r\\n                            </ion-card>\\r\\n\\r\\n                          </ion-card-content>\\r\\n\\r\\n                        </ion-card>\\r\\n                      </ng-container>\\r\\n\\r\\n\\r\\n                       <!-- Reset Button -->\\r\\n                      <ion-button style=\\\"width: 90px;\\r\\n                                        position: absolute;\\r\\n                                        top: -55px;\\r\\n                                        right: 1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetSearchCreatedLectureSeries()\\\"> \\r\\n                        <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          Reset\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                  \\r\\n\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n      \\r\\n                </ion-col>\\r\\n      \\r\\n              </ion-row>\\r\\n\\r\\n            </ion-grid>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SemesterCalendarPage } from './semester-calendar.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SemesterCalendarPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SemesterCalendarPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SemesterCalendarPageRoutingModule } from './semester-calendar-routing.module';\r\n\r\nimport { SemesterCalendarPage } from './semester-calendar.page';\r\n\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\n\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgCalendarModule,\r\n    IonicModule,\r\n    SemesterCalendarPageRoutingModule,\r\n    MaterialModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  declarations: [SemesterCalendarPage]\r\n})\r\nexport class SemesterCalendarPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243);\\n}\\n\\nion-card {\\n  --ion-background-color: white;\\n}\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px;\\n}\\n\\nion-label {\\n  color: black;\\n}\\n\\n.viewCreatedLectureSeriesFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.createNewLectureSeriesFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.assignNewLectureSessionSlotFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.searchLectureSeriesFormLabel {\\n  position: relative;\\n  top: 2px;\\n  font-size: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcc2VtZXN0ZXItY2FsZW5kYXJcXHNlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL3NlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUFBO0FDQ0o7O0FERUE7RUFDSSw2QkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL3NlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24taXRlbXtcclxuICAgIGJvcmRlcjogI2NjYyBzb2xpZCAxcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnZpZXdDcmVhdGVkTGVjdHVyZVNlcmllc0Zvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG5cclxuLmNyZWF0ZU5ld0xlY3R1cmVTZXJpZXNGb3JtTGFiZWx7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbi5hc3NpZ25OZXdMZWN0dXJlU2Vzc2lvblNsb3RGb3JtTGFiZWx7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbi5zZWFyY2hMZWN0dXJlU2VyaWVzRm9ybUxhYmVse1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAycHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbiIsImlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xufVxuXG5pb24tY2FyZCB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG5pb24taXRlbSB7XG4gIGJvcmRlcjogI2NjYyBzb2xpZCAxcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuaW9uLWxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4udmlld0NyZWF0ZWRMZWN0dXJlU2VyaWVzRm9ybUxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDE1cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLmNyZWF0ZU5ld0xlY3R1cmVTZXJpZXNGb3JtTGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMTVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4uYXNzaWduTmV3TGVjdHVyZVNlc3Npb25TbG90Rm9ybUxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDE1cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLnNlYXJjaExlY3R1cmVTZXJpZXNGb3JtTGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMnB4O1xuICBmb250LXNpemU6IDE1cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ModalController, AlertController, PopoverController } from '@ionic/angular';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { EditLectureSessionModalPage } from './edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { MoreDetailsSessionPopoverPage } from './more-details-session-popover/more-details-session-popover.page';\r\nimport { EditLectureSeriesModalPage } from './edit-lecture-series-modal/edit-lecture-series-modal.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-semester-calendar',\r\n  templateUrl: './semester-calendar.page.html',\r\n  styleUrls: ['./semester-calendar.page.scss'],\r\n})\r\nexport class SemesterCalendarPage implements OnInit {\r\n\r\n  searchSemesterCalendar: FormGroup;\r\n\r\n  assignNewLectureSlotSC: FormGroup;\r\n\r\n  createNewLectureSeriesForm: FormGroup;\r\n\r\n  searchLectureSeriesForm: FormGroup;\r\n\r\n  loadingSpinnerPLS: Boolean = false;\r\n\r\n  showPublishedLectureSeries: Boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private popoverController: PopoverController,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private semesterCalendarService: FirebaseService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Calling the functions inorder for them to execute upon page load\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrievePublishedDegreeProgram();\r\n\r\n    this.retrieveRegisteredModules();\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n    this.retrievePublishedLectureHalls();\r\n\r\n    this.retrievePublishedLectureSessionStatuses();\r\n\r\n\r\n    this.searchSemesterCalendar = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.assignNewLectureSlotSC = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required),\r\n      lecturer: new FormControl('', Validators.required),\r\n      lectureHall: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required),\r\n      addLectureContentLoadOption: new FormControl('', Validators.required),\r\n      sessionDateSingle: new FormControl(''),\r\n      sessionStartTimeSingle: new FormControl(''),\r\n      sessionEndTimeSingle: new FormControl(''),\r\n      sessionDayMultiple: new FormControl(''),\r\n      sessionStartDateMultiple: new FormControl(''),\r\n      sessionEndDateMultiple: new FormControl(''),\r\n      sessionStartTimeMultiple: new FormControl(''),\r\n      sessionEndTimeMultiple: new FormControl('')\r\n    });\r\n    \r\n    this.createNewLectureSeriesForm = this.formBuilder.group({\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      batch: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required),\r\n      noOfLectures: new FormControl('', Validators.required),\r\n      enrollmentKey: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.searchLectureSeriesForm = this.formBuilder.group({\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      batch: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required)\r\n    });\r\n\r\n  }\r\n\r\n  \r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n  // Retrieving the published batch from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => {\r\n    this.semesterCalendarService.retrievePublishedBatch(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedBatches = response));\r\n  }\r\n\r\n  \r\n  // Retrieving the published degree programs and details from the firestore database\r\n  publishedDegreePrograms;\r\n  retrievePublishedDegreeProgram = () => {\r\n    this.semesterCalendarService.retrievePublishedDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedDegreePrograms = response));\r\n  }\r\n\r\n  // Implementation of generating an array for the count of, no of years and no of semesters\r\n  convertToArray(n: number): any[] {\r\n    return Array(n);\r\n  }\r\n\r\n  // Retrieving the published modules from the firestore database\r\n  publishedModules;\r\n  retrieveRegisteredModules = () => \r\n    this.semesterCalendarService.retrieveRegisteredModules(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedModules = response));\r\n  \r\n  // Retrieving the registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () => \r\n    this.semesterCalendarService.retrieveRegisteredLecturers().subscribe(response => (this.registeredLecturers = response));\r\n\r\n  // Retrieving published lecture halls from the firestore database\r\n  publishedLectureHalls;\r\n  retrievePublishedLectureHalls = () =>\r\n    this.semesterCalendarService.retrievePublishedLectureHalls(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedLectureHalls = response));\r\n\r\n  // Retrieving published session statuses from the firestore database\r\n  publishedLectureSessionStatuses;\r\n  retrievePublishedLectureSessionStatuses = () =>\r\n    this.semesterCalendarService.retrievePublishedLectureSessionStatuses().subscribe(response => (this.publishedLectureSessionStatuses = response));\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n  numberOfLectureSessions;\r\n  \r\n  publishedLectureSlots;\r\n\r\n  userSelectedAwardingBodyUniversity;\r\n\r\n\r\n  publishedModuleTitleOfModuleCode;\r\n  moduleTitle;\r\n\r\n  async retrieveModuleTitle(event){\r\n    console.log(event.detail.value);\r\n    // Retrieving the module title of the selected module code\r\n    this.semesterCalendarService.retrievingModuleTitleOfModuleCode(event.detail.value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedModuleTitleOfModuleCode =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.moduleTitle = firestoreDoc.moduleTitle;\r\n        console.log(this.moduleTitle);\r\n      })\r\n    ));\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  publishedAwardingBodyUniversityOfDegree;\r\n  awardingBodyUniversity;\r\n  degreeCode;\r\n\r\n  async retrieveAwardingBodyUniversity(event){\r\n\r\n    // Retrieving the awardingBody University of the selected degree\r\n    this.semesterCalendarService.retrievingAwardingBodyUniversityOfDegree(event.detail.value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedAwardingBodyUniversityOfDegree =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.awardingBodyUniversity = firestoreDoc.awardingBodyUniversity;\r\n        this.degreeCode = firestoreDoc.degreeCode;\r\n        console.log(this.awardingBodyUniversity);\r\n        console.log(this.degreeCode);\r\n      })\r\n    ));\r\n\r\n  }\r\n\r\n  // Retrieving published lecture sessions\r\n  doSearchSemesterCalendar(value){\r\n\r\n    this.loadingSpinnerPLS = true;\r\n\r\n\r\n\r\n   // console.log(value);\r\n\r\n   // console.log(value.batch);\r\n\r\n   // console.log(value.degreeProgram);\r\n\r\n   // console.log(value.academicYearYear);\r\n   // console.log(value.academicYearSemester);\r\n\r\n    \r\n    \r\n    // Calling function to retrieve the published lecture sessions from the firestore database\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(response => {\r\n      // Checking if any document values where returned\r\n      if (response.length > 0){\r\n        \r\n        this.eventSourcePSCalendar = []; // Clearing the existing events on the calendar before syncing \r\n        response.forEach(snap => {\r\n          let eventPSCalendar:any = snap.payload.doc.data();\r\n          eventPSCalendar.id = snap.payload.doc.id;\r\n          eventPSCalendar.title = eventPSCalendar.moduleCode + \"-\" + eventPSCalendar.moduleTitle + \" | Status: \" + eventPSCalendar.status;\r\n          eventPSCalendar.startTime = eventPSCalendar.startDateTime.toDate();\r\n          eventPSCalendar.endTime = eventPSCalendar.endDateTime.toDate();\r\n\r\n          console.log(eventPSCalendar);\r\n\r\n          this.eventSourcePSCalendar.push(eventPSCalendar);\r\n        });\r\n        \r\n        this.alertNotice(\"Lecture Sessions Retrieval\", \"Available lecture sessions for this semester calendar are placed on the calendar.\");\r\n\r\n        console.log(\"Semester Calendar Record Found\");\r\n      }\r\n      else{\r\n        this.alertNotice(\"Not Found\", \"Lecture sessions for this semester calendar is not available\");\r\n        console.log(\"Semester Calendar Record Found\");\r\n      }\r\n    }, error => {\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  \r\n    // Calling function to retrieve the lecture sessions and setting loading dots to false after the contents has loaded.\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(() => this.loadingSpinnerPLS = false);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  // More details of lecture sessions popover\r\n  async moreDetailsLectureSession(ev: Event, value){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: MoreDetailsSessionPopoverPage,\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        batch: value.batch,\r\n        lecturer: value.lecturer,\r\n        lectureHall: value.lectureHall,\r\n        degreeCode: value.degreeCode,\r\n        degree: value.degree,\r\n        awardingBodyUniversity: value.awardingBodyUniversity,\r\n        academicPeriodYear: value.academicYear,\r\n        academicPeriodSemester: value.academicSemester\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n    \r\n  }\r\n\r\n\r\n  // Editing lecture sessions modal calling, opening modal\r\n  async editLectureSession(value){\r\n    console.log(value);\r\n\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        lectureSessionBatch: value.batch,\r\n        lectureSessionDegreeProgram: value.degreeProgram,\r\n        lectureSessionAcademicYear: value.academicYear,\r\n        lectureSessionAcademicSemester: value.academicSemester,\r\n        lectureSessionModuleCode: value.moduleCode,\r\n        lectureSessionModuleTitle: value.moduleTitle,\r\n        lectureSessionStartDateTime: value.startTime,\r\n        lectureSessionEndDateTime: value.endTime,\r\n        lectureSessionLecturer: value.lecturer,\r\n        lectureSessionLectureHall: value.lectureHall,\r\n        lectureSessionStatus: value.status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n\r\n  // Confirm Box Implementation (Remove existing lecture session)\r\n  async removeLectureSession ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Event Session Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Event Session Request Accepted\");\r\n\r\n            // Calling function to remove lecture session\r\n            this.semesterCalendarService.removeLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value);\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  userSelectedOption;\r\n  userSelectionLectureAssignIndividually: Boolean = false;\r\n  userSelectionLectureAssignGroup: Boolean = false;\r\n\r\n  // Load form content depending on assigning eah lecture session individually or in a group \r\n  async loadFormContent(event){\r\n\r\n    this.userSelectedOption = event.detail.value;\r\n\r\n    this.userSelectionLectureAssignIndividually = false;\r\n\r\n    this.userSelectionLectureAssignGroup = false;\r\n    \r\n    console.log(\"Reponse: \" + event.detail.value);\r\n\r\n    if(this.userSelectedOption == \"lectureAssignIndividaully\"){\r\n      this.userSelectionLectureAssignIndividually = true;\r\n    }\r\n    else if(this.userSelectedOption == \"lectureAssignGroup\"){\r\n      this.userSelectionLectureAssignGroup = true;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  // (Publishing new lecture sessions section) and retrieving published lecture sessions \r\n  doPublishLectureSlotSC(value){\r\n\r\n    // Retrieving selected session date\r\n    // Mon Apr 20 2020 10:13:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionDateTime = new Date(value.sessionDateSingle);\r\n\r\n    let selectedSessionDate = selectedSessionDateTime.getFullYear() + \"-\" + selectedSessionDateTime.getMonth() + \"-\" + selectedSessionDateTime.getDate();\r\n    console.log(selectedSessionDate);\r\n    // Retrieving selected session start time\r\n    // Mon Apr 20 2020 09:07:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionStartTime = new Date(value.sessionStartTimeSingle);\r\n\r\n    // Retrieving selected session end time\r\n    // Mon Apr 20 2020 12:02:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionEndTime = new Date(value.sessionEndTimeSingle);\r\n\r\n    // taking the sesion date and session start time and merging them together. Assign this value to a variable\r\n    // Mon Apr 20 2020 09:07:00 GMT+0530 (India Standard Time)\r\n    let selectedSessionStartDateTime = new Date(selectedSessionDateTime.getFullYear(), selectedSessionDateTime.getMonth(), selectedSessionDateTime.getDate(), \r\n      selectedSessionStartTime.getHours(), selectedSessionStartTime.getMinutes(), 0, 0);\r\n    \r\n      // taking the sesion date and session end time and merging them together. Assign this value to a variable\r\n    // Mon Apr 20 2020 12:02:00 GMT+0530 (India Standard Time)\r\n    let selectedSessionEndDateTime = new Date(selectedSessionDateTime.getFullYear(), selectedSessionDateTime.getMonth(), selectedSessionDateTime.getDate(), \r\n      selectedSessionEndTime.getHours(), selectedSessionEndTime.getMinutes(), 0, 0);\r\n\r\n     \r\n      \r\n    if(value.addLectureContentLoadOption == \"lectureAssignIndividaully\"){\r\n      // If user selects 'lectureAssignIndividaully' option\r\n\r\n      // Adding the lecture session details into the firestore database\r\n      this.semesterCalendarService.addNewLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.degreeCode, this.awardingBodyUniversity, this.moduleTitle, selectedSessionDate, selectedSessionStartDateTime, selectedSessionEndDateTime);\r\n      \r\n      this.alertNotice(\"Lecture Session Added\", \"New Lecture Session has been added.\");\r\n\r\n\r\n    }\r\n    else if(value.addLectureContentLoadOption == \"lectureAssignGroup\"){\r\n      // If user selects 'lectureAssignGroup' option\r\n\r\n    }\r\n\r\n    // Calling function to retrieving the lecture sessions for this degree program, batch, academic period year and academic period semester from the firestore database\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(activeLectureSlots => {\r\n      this.eventSourceASCalendar = []; // Clearing the existing lecture sessions on the calendar before syncing \r\n      activeLectureSlots.forEach(snap => {\r\n        let eventASCalendar:any = snap.payload.doc.data();\r\n        eventASCalendar.id = snap.payload.doc.id;\r\n        eventASCalendar.title = eventASCalendar.moduleCode + \"-\" + eventASCalendar.moduleTitle + \"\\n | Status: \" + eventASCalendar.status;\r\n        eventASCalendar.startTime = eventASCalendar.startDateTime.toDate();\r\n        eventASCalendar.endTime = eventASCalendar.endDateTime.toDate();\r\n\r\n        this.eventSourceASCalendar.push(eventASCalendar);\r\n      });\r\n    });\r\n   \r\n\r\n  }\r\n\r\n  // Resetting search assigned semester calendar\r\n  resetSearchAssignedSemesterCalendar(){\r\n\r\n    // Resetting formControlGroup\r\n    this.searchSemesterCalendar.reset();\r\n\r\n    // Resetting calendar\r\n    this.eventSourcePSCalendar = []; \r\n\r\n  }\r\n\r\n  // Resetting assign semester calendar\r\n  resetAssignSemesterCalendar(){\r\n    // Resetting formControlGroup\r\n    this.assignNewLectureSlotSC.reset();\r\n\r\n    // Resetting calendar\r\n    this.eventSourceASCalendar = []; \r\n  }\r\n\r\n\r\n\r\n  // Process of adding a new lecture series\r\n  doCreateNewLectureSeries(value){\r\n\r\n    this.semesterCalendarService.createNewLectureSeries(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), this.awardingBodyUniversity, this.moduleTitle);\r\n\r\n    this.alertNotice(\"Lecture Series Created\", \"New Lecture Series has been created.\");\r\n\r\n  }\r\n\r\n  // Resetting create new lecture series form\r\n  resetCreatedLectureSeries(){\r\n\r\n    this.createNewLectureSeriesForm.reset();\r\n\r\n    this.publishedLectureSeries = \"\";\r\n  }\r\n\r\n  \r\n\r\n\r\n  publishedLectureSeries;\r\n\r\n  // Process of searching published lecture series \r\n  doSearchLectureSeries(value){\r\n\r\n    console.log(value);\r\n    console.log(this.awardingBodyUniversity);\r\n    console.log(this.moduleTitle);\r\n\r\n    this.semesterCalendarService.retrievePublishedLectureSeries(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity, this.moduleTitle).subscribe(response => {\r\n        // Checking if any document values where returned\r\n        if (response.length > 0){\r\n\r\n          this.showPublishedLectureSeries = true;\r\n          \r\n          this.publishedLectureSeries = response;\r\n\r\n          console.log(\"Lecture Series Record Found\");\r\n        }\r\n        else{\r\n          this.alertNotice(\"Not Found\", \"Lecture Series Record is not available\");\r\n          console.log(\"Lecture Series Record Not Found\");\r\n        }\r\n      }, error => {\r\n        console.log(\"Error: \" + error);\r\n        this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n      });\r\n  }\r\n\r\n  // Resetting search lecture series form\r\n  resetSearchCreatedLectureSeries(){\r\n\r\n    this.searchLectureSeriesForm.reset();\r\n\r\n    this.showPublishedLectureSeries = false;\r\n\r\n  }\r\n\r\n\r\n  // Editing lecture series modal calling, opening modal\r\n  async editLectureSeries(value){\r\n    const editLectureSeriesModal = await this.modalController.create({\r\n      component: EditLectureSeriesModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSeriesDocId: value.payload.doc.id,\r\n        lectureSeriesNoOfLecturers: value.payload.doc.data().noOfLectures,\r\n        lectureSeriesEnrollmentKey: value.payload.doc.data().enrollmentKey,\r\n        loggedInUserFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSeriesModal.present();\r\n  }\r\n\r\n\r\n  // Confirm Box Implementation (Remove existing lecture series)\r\n  async removeLectureSeries ( title: string, content: string, value) {\r\n\r\n    let lectureSeriesDocId = value.payload.doc.id;\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Series Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Series Request Accepted\");\r\n\r\n            // Calling function to remove lecture series\r\n            this.semesterCalendarService.removeLectureSeries(lectureSeriesDocId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.showPublishedLectureSeries = false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  \r\n\r\n\r\n  // Declaring an array to initialize the number of events (lecture sessions) and their details\r\n  lectureSessionsDocuments = [];\r\n\r\n  // Published Semester Calendar\r\n  eventSourcePSCalendar;\r\n  viewingMonthPSCalendar;\r\n\r\n  calendarPSCalendar = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  selectedDate = new Date();\r\n\r\n  nextMonthPSCalendar(){\r\n    var frontSwipePSCalendar = document.getElementById('publishedSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipePSCalendar.slideNext();\r\n  }\r\n\r\n  previousMonthPSCalendar(){\r\n    var backSwipePSCalendar = document.getElementById('publishedSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipePSCalendar.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedPSCalendar(title){\r\n    console.log(title);\r\n    this.viewingMonthPSCalendar = title; \r\n  }\r\n\r\n  onEventSelectedPSCalendar(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title); \r\n  }\r\n\r\n  onTimeSelectedPSCalendar(event){\r\n    console.log(\"Lecture Session Selected Time: \" + event.selectedTime + \", has sessions: \" + (event.events !== undefined && event.events.length !== 0) +\r\n      \", disabled: \" + event.disabled);\r\n\r\n      if((event.events !== undefined && event.events.length !== 0) == false){\r\n        this.lectureSessionsDocuments = [];\r\n      }\r\n      else if ((event.events !== undefined && event.events.length !== 0) == true){\r\n        this.lectureSessionsDocuments = event.events;\r\n      }\r\n      console.log(this.lectureSessionsDocuments);\r\n  }\r\n\r\n  onCurrentDateChangedPSCalendar(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n\r\n    this.lectureSessionsDocuments = [];\r\n  }\r\n\r\n  onRangeChangedPSCalendar(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  // Active Semester Calendar\r\n  eventSourceASCalendar;\r\n  viewingMonthASCalendar;\r\n\r\n  calendarASCalendar = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  nextMonthASCalendar(){\r\n    var frontSwipeASCalendar = document.getElementById('EventCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipeASCalendar.slideNext();\r\n  }\r\n\r\n  previousMonthASCalendar(){\r\n    var backSwipeASCalendar = document.getElementById('EventCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipeASCalendar.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedASCalendar(title){\r\n    console.log(title);\r\n    this.viewingMonthASCalendar = title; \r\n  }\r\n\r\n  onEventSelectedASCalendar(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title);\r\n  }\r\n\r\n  onTimeSelectedASCalendar(evt){\r\n    console.log(\"Lecture Session Selected Time: \" + evt.selectedTime + \", has sessions: \" + (evt.events !== undefined && evt.events.length !== 0) +\r\n      \", disabled: \" + evt.disabled);\r\n  }\r\n\r\n  onCurrentDateChangedASCalendar(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n  }\r\n\r\n  onRangeChangedASCalendar(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}