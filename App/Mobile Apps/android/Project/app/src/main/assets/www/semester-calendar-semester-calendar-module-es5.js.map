{"version":3,"sources":["src/app/office/semester-calendar/semester-calendar.page.html","src/app/office/semester-calendar/semester-calendar-routing.module.ts","src/app/office/semester-calendar/semester-calendar.module.ts","src/app/office/semester-calendar/semester-calendar.page.scss","src/app/office/semester-calendar/semester-calendar.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header style=\\\"height: 70px;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Semester Calendar</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Assigned Semester Calendars\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"5\\\">\\r\\n\\r\\n                  <form [formGroup]=\\\"searchSemesterCalendar\\\" (ngSubmit)=\\\"doSearchSemesterCalendar(searchSemesterCalendar.value)\\\">\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item>\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">Batch</ion-label>\\r\\n                          <ion-select placeholder=\\\"Select Batch\\\" okText=\\\"Select\\\" id=\\\"batchOption\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"batch\\\" style=\\\"max-width: 100%;\\\">\\r\\n                            <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">{{ item.payload.doc.data().batch }}</ion-select-option>\\r\\n                          </ion-select>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: 10px;\\\">\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">\\r\\n                            Degree Program\\r\\n                          </ion-label>\\r\\n                          <ion-select placeholder=\\\"Select Degree Program\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"degreeProgram\\\" style=\\\"max-width: 100% !important;\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                              <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                              </ion-select-option>\\r\\n                          </ion-select>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-item style=\\\"margin-top: 10px;\\\">\\r\\n                          <ion-label style=\\\"margin-left: 15px;\\\">\\r\\n                            Academic Period\\r\\n                          </ion-label>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-select placeholder=\\\"Select Year\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"academicPeriodYear\\\" style=\\\"max-width: 100% !important;\\\">\\r\\n                                  <ion-select-option value=\\\"1\\\">Year 1</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"2\\\">Year 2</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"3\\\">Year 3</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"4\\\">Year 4</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-select placeholder=\\\"Select Semester\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" formControlName=\\\"academicPeriodSemester\\\" style=\\\"max-width: 100% !important;\\\">\\r\\n                                  <ion-select-option value=\\\"1\\\">Semester 1</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"2\\\">Semester 2</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-item>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                      <ion-col>\\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!searchSemesterCalendar.valid\\\">\\r\\n                          <ion-icon name=\\\"search-outline\\\"></ion-icon>\\r\\n                          <ion-label style=\\\"color: white;\\r\\n                                            margin-left: 10px;\\\">\\r\\n                            SEARCH\\r\\n                          </ion-label>\\r\\n                        </ion-button>          \\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </form>\\r\\n\\r\\n                  <!-- Loading Spinner -->\\r\\n                  <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                              left: 50%;\\r\\n                                              transform: translateX(-50%);\\r\\n                                              margin-top: -25px;\\r\\n                                              height: 100px;\\r\\n                                              width: 100px;\\\" *ngIf=\\\"loadingSpinnerPLS\\\"></ion-spinner>\\r\\n                \\r\\n\\r\\n                </ion-col>\\r\\n\\r\\n                  <!-- Vertical line in the center of the page -->\\r\\n                  <div style=\\\"border-left: rgb(236, 236, 236) solid 2px;\\r\\n                              height: 105%;\\r\\n                              position: absolute;\\r\\n                              left: 41.7%;\\r\\n                              top: -40px;\\r\\n                              transform: translateX(-68.3%);\\\">\\r\\n                  </div>\\r\\n\\r\\n                <ion-col size=\\\"7\\\">\\r\\n\\r\\n                  <!-- Reset Button -->\\r\\n                  <ion-button style=\\\"width: 90px;\\r\\n                                    position: absolute;\\r\\n                                    top: -55px;\\r\\n                                    right: -1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetSearchAssignedSemesterCalendar()\\\"> \\r\\n                    <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                    <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                      margin-left: 5px;\\\">\\r\\n                      Reset\\r\\n                    </ion-label>\\r\\n                  </ion-button>\\r\\n                  \\r\\n                  <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -40px;\\\">\\r\\n                \\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthPSCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                      <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                    <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                      {{ viewingMonthPSCalendar }}\\r\\n                    </ion-label>\\r\\n\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthPSCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                      <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                  </div>\\r\\n                \\r\\n                  <div style=\\\"overflow-y: scroll;\\\">\\r\\n                      <div style=\\\"height: 450px;\\\">\\r\\n                      <calendar [eventSource]=\\\"eventSourcePSCalendar\\\"\\r\\n                      [calendarMode]=\\\"calendarPSCalendar.mode\\\"\\r\\n                      [currentDate]=\\\"calendarPSCalendar.currentDate\\\"\\r\\n                      (onCurrentDateChanged)=\\\"onCurrentDateChangedPSCalendar($event)\\\"\\r\\n                      (onRangeChanged)=\\\"onRangeChangedPSCalendar($event)\\\"\\r\\n                      (onEventSelected)=\\\"onEventSelectedPSCalendar($event)\\\"\\r\\n                      (onTitleChanged)=\\\"onViewTitleChangedPSCalendar($event)\\\"\\r\\n                      (onTimeSelected)=\\\"onTimeSelectedPSCalendar($event)\\\"\\r\\n                      startHour=\\\"9\\\"\\r\\n                      endHour=\\\"17\\\"\\r\\n                      step=\\\"30\\\"\\r\\n                      startingDayWeek=\\\"1\\\" id=\\\"publishedSemesterCalendar\\\">\\r\\n                    \\r\\n                      </calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <ion-grid style=\\\"width: 140px;\\r\\n                                  position: absolute;\\r\\n                                  top: 282px;\\r\\n                                  right: 1%;\\r\\n                                  padding: 0;\\r\\n                                  margin: 0;\\\">\\r\\n                    <ion-row *ngFor=\\\"let session of lectureSessionsDocuments\\\">\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Lecture Session Read More\\\" color=\\\"secondary\\\" (click)=\\\"moreDetailsLectureSession($event, session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                                    height: 40px;\\r\\n                                                                                                                                                                    border-radius: 5px;\\r\\n                                                                                                                                                                    margin-bottom: -5px;\\r\\n                                                                                                                                                                    margin-left: -10px;\\\">\\r\\n                          <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Edit Lecture Session\\\" color=\\\"warning\\\" (click)=\\\"editLectureSession(session)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                              height: 40px;\\r\\n                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                              margin-left: -12px;\\\">\\r\\n                          <ion-icon name=\\\"create\\\" style=\\\"color: white;\\r\\n                                                        font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                      <ion-col>\\r\\n                        <ion-button size=\\\"small\\\" title=\\\"Remove Lecture Session\\\" color=\\\"danger\\\"\\r\\n                          (click)=\\\"removeLectureSession('Confirmation Required', 'This lecture session will be removed, do you want to continue?', session.id)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                              height: 40px;\\r\\n                                                                                                                                                              border-radius: 5px;\\r\\n                                                                                                                                                              margin-bottom: -5px;\\r\\n                                                                                                                                                              margin-left: -14px;\\\">\\r\\n                          <ion-icon name=\\\"trash\\\" style=\\\"margin-left: -1px;\\r\\n                                                        font-size: 30px;\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n\\r\\n\\r\\n              \\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            \\r\\n            \\r\\n           \\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\">\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Create New Semester Calendar / Add New Lecture Sessions\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"5.5\\\" size-sm=\\\"12\\\" size-lg=\\\"5.5\\\">\\r\\n                  \\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Semester Information</b>\\r\\n                      </p>\\r\\n\\r\\n                      <form [formGroup]=\\\"assignNewLectureSlotSC\\\" (ngSubmit)=\\\"doPublishLectureSlotSC(assignNewLectureSlotSC.value)\\\">\\r\\n\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Degree Program\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\"  \\r\\n                                    value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Acadamic Year\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <div style=\\\"border: #ccc solid 1px;\\r\\n                                          border-radius: 5px;\\\">\\r\\n\\r\\n                                <ion-row>\\r\\n                                  <ion-select placeholder=\\\"Select Year\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" style=\\\"max-width: 100% !important;\\\" formControlName=\\\"academicPeriodYear\\\">\\r\\n                                      <ion-select-option value=\\\"1\\\">Year 1</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"2\\\">Year 2</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"3\\\">Year 3</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"4\\\">Year 4</ion-select-option>\\r\\n                                 </ion-select>\\r\\n                                </ion-row>\\r\\n                                <ion-row>\\r\\n                                  <ion-select placeholder=\\\"Select Semester\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\" style=\\\"max-width: 100% !important;\\\" formControlName=\\\"academicPeriodSemester\\\">\\r\\n                                      <ion-select-option value=\\\"1\\\">Semester 1</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"2\\\">Semester 2</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"3\\\">Semester 3</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"4\\\">Semester 4</ion-select-option>\\r\\n                                  </ion-select>\\r\\n                                </ion-row>\\r\\n\\r\\n                              </div>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          \\r\\n                        </ion-grid>\\r\\n\\r\\n\\r\\n                        <p style=\\\"font-size: 20px;\\\">\\r\\n                          <b>Lecture Information</b>\\r\\n                        </p>\\r\\n\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Series - Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Module\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"module\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                    {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecturer\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecturer\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Lecturer\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"lecturer\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" \\r\\n                                    value=\\\"\\r\\n                                      {{ item.payload.doc.data().name.prefix }}\\r\\n                                      {{ item.payload.doc.data().name.firstName }}\\r\\n                                      {{ item.payload.doc.data().name.lastName }}\\r\\n                                    \\\">\\r\\n                                    {{ item.payload.doc.data().name.prefix }}\\r\\n                                    {{ item.payload.doc.data().name.firstName }}\\r\\n                                    {{ item.payload.doc.data().name.lastName }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Hall\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecture Hall\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Lecture Hall\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"lectureHall\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedLectureHalls\\\" value=\\\"{{ item.payload.doc.data().lectureHall }}\\\">\\r\\n                                    {{ item.payload.doc.data().lectureHall }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Lecture Status\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Lecture Status\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Status\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"status\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedLectureSessionStatuses\\\" value=\\\"{{ item.payload.doc.data().status }}\\\">\\r\\n                                    {{ item.payload.doc.data().status }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                        \\r\\n\\r\\n\\r\\n                        <ion-label style=\\\"font-size: 15px;\\r\\n                                  margin-left: 30px;\\\">\\r\\n                          Select an Option\\r\\n                        </ion-label>\\r\\n\\r\\n                        \\r\\n                        <ion-grid>\\r\\n                          <ion-row style=\\\"padding-bottom: 5px;\\\">\\r\\n                            <ion-col>\\r\\n                              <ion-radio-group (ionChange)=\\\"loadFormContent($event)\\\" formControlName=\\\"addLectureContentLoadOption\\\">\\r\\n                                <div style=\\\"border: #ccc 1px solid;\\r\\n                                                padding: 5px;\\r\\n                                                border-radius: 5px;\\\">\\r\\n                                  <ion-grid>\\r\\n                                    <ion-row>\\r\\n                                      <ion-col>\\r\\n                                        <ion-item style=\\\"border: none;\\\">\\r\\n                                          <ion-label>Assign Each Session Individually</ion-label>\\r\\n                                          <ion-radio slot=\\\"start\\\" value=\\\"lectureAssignIndividaully\\\"></ion-radio>\\r\\n                                        </ion-item>\\r\\n                                      </ion-col>\\r\\n                                    </ion-row>\\r\\n                                    <ion-row>\\r\\n                                      <ion-col>\\r\\n                                        <ion-item style=\\\"border: none;\\\">\\r\\n                                          <ion-label>Assign Same Session on the same day for Multiple Weeks</ion-label>\\r\\n                                          <ion-radio slot=\\\"start\\\" value=\\\"lectureAssignGroup\\\"></ion-radio>\\r\\n                                        </ion-item>\\r\\n                                      </ion-col>\\r\\n                                    </ion-row>\\r\\n                                  </ion-grid>\\r\\n                               </div>\\r\\n                              </ion-radio-group>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n\\r\\n                        \\r\\n                        <!-- Assign Each Session Manually -->\\r\\n                        <ion-grid *ngIf=\\\"userSelectionLectureAssignIndividually\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick Session Date\\\" formControlName=\\\"sessionDateSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session Start Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick Start Time\\\" display-format=\\\"h:mm A\\\" formControlName=\\\"sessionStartTimeSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\">\\r\\n                                Session End Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime placeholder=\\\"Pick End Time\\\" display-format=\\\"h:mm A\\\" formControlName=\\\"sessionEndTimeSingle\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n\\r\\n\\r\\n                        <!-- Assign Same Session on the same day for Multiple Weeks -->\\r\\n                        <ion-grid *ngIf=\\\"userSelectionLectureAssignGroup\\\">\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Day\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Day\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Day\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"sessionDayMultiple\\\">\\r\\n                                  <ion-select-option value=\\\"Mon\\\">Monday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Tue\\\">Tuesday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Wed\\\">Wednesday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Thu\\\">Thrusday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Fri\\\">Friday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Sat\\\">Saturday</ion-select-option>\\r\\n                                  <ion-select-option value=\\\"Sun\\\">Sunday</ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Start Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime value=\\\"2020-03-02\\\" formControlName=\\\"sessionStartDateMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session End Date\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime value=\\\"2020-03-02\\\" formControlName=\\\"sessionEndDateMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session Start Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"09:00\\\" formControlName=\\\"sessionStartTimeMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-label style=\\\"margin-left: 50px;\\\" class=\\\"assignNewLectureSessionSlotFormLabel\\\">\\r\\n                                Session End Time\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"12:00\\\" formControlName=\\\"sessionEndTimeMultiple\\\"></ion-datetime>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                        \\r\\n                        <!-- Horizontal line -->\\r\\n                        <div style=\\\"border-bottom: #ccc solid 2px;\\r\\n                                    width: 100%;\\r\\n                                    margin-top: 10px;\\r\\n                                    margin-bottom: 20px;\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!assignNewLectureSlotSC.valid\\\">\\r\\n                          Add Session\\r\\n                        </ion-button>\\r\\n\\r\\n                      </form>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6.5\\\" size-sm=\\\"12\\\" size-lg=\\\"6.5\\\">\\r\\n                  \\r\\n                  <!-- Reset Button -->\\r\\n                  <ion-button style=\\\"width: 90px;\\r\\n                                    position: absolute;\\r\\n                                    top: -55px;\\r\\n                                    right: -1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetAssignSemesterCalendar()\\\"> \\r\\n                    <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                    <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                      margin-left: 5px;\\\">\\r\\n                      Reset\\r\\n                    </ion-label>\\r\\n                  </ion-button>\\r\\n                  \\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Active Calendar</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -50px;\\\">\\r\\n                \\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthASCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          {{ viewingMonthASCalendar }}\\r\\n                        </ion-label>\\r\\n\\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthASCalendar()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                          <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                      <div style=\\\"overflow-y: scroll;\\r\\n                                  margin-top: 20px;\\\">\\r\\n                        <div style=\\\"height: 500px;\\\">\\r\\n                          <calendar [eventSource]=\\\"eventSourceASCalendar\\\"\\r\\n                          [calendarMode]=\\\"calendarASCalendar.mode\\\"\\r\\n                          [currentDate]=\\\"calendarASCalendar.currentDate\\\"\\r\\n                          (onCurrentDateChanged)=\\\"onCurrentDateChangedASCalendar($event)\\\"\\r\\n                          (onRangeChanged)=\\\"onRangeChangedASCalendar($event)\\\"\\r\\n                          (onEventSelected)=\\\"onEventSelectedASCalendar($event)\\\"\\r\\n                          (onTitleChanged)=\\\"onViewTitleChangedASCalendar($event)\\\"\\r\\n                          (onTimeSelected)=\\\"onTimeSelectedASCalendar($event)\\\"\\r\\n                          startHour=\\\"9\\\"\\r\\n                          endHour=\\\"17\\\"\\r\\n                          step=\\\"30\\\"\\r\\n                          startingDayWeek=\\\"1\\\" id=\\\"activeSemesterCalendar\\\">\\r\\n                        \\r\\n                          </calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Lecture Series\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n\\r\\n                <ion-col>\\r\\n      \\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>Create New Lecture Series</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                    <form [formGroup]=\\\"createNewLectureSeriesForm\\\" (ngSubmit)=\\\"doCreateNewLectureSeries(createNewLectureSeriesForm.value)\\\">\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Program\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"degreeProgram\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\" >\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\" formControlName=\\\"module\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" \\r\\n                                    value=\\\"{{ item.payload.doc.data().moduleCode }}\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\">\\r\\n                                      {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Number of Lectures \\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-input type=\\\"number\\\" clearInput placeholder=\\\"No Of Lectures\\\" formControlName=\\\"noOfLectures\\\"></ion-input>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"createNewLectureSeriesFormLabel\\\">\\r\\n                                Enrollment KEY\\r\\n                              </ion-label>\\r\\n                              <ion-button style=\\\"position: absolute;\\r\\n                                                right: 5%;\\\">\\r\\n                                Generate\\r\\n                              </ion-button>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-input type=\\\"text\\\" placeholder=\\\"Key\\\" formControlName=\\\"enrollmentKey\\\"></ion-input>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n\\r\\n                            <ion-col>\\r\\n                              <ion-checkbox checked=\\\"false\\\"></ion-checkbox>\\r\\n                              <p style=\\\"position: absolute;\\r\\n                                        top: 5px;\\r\\n                                        left: 30px;\\\">Send Email to Batch Students (Outlook)</p>\\r\\n                            </ion-col>\\r\\n\\r\\n                          </ion-row>\\r\\n\\r\\n                          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!createNewLectureSeriesForm.valid\\\">\\r\\n                            CREATE\\r\\n                          </ion-button>\\r\\n                          \\r\\n                        </ion-grid>\\r\\n                      </form>\\r\\n\\r\\n\\r\\n                      <!-- Reset Button -->\\r\\n                      <ion-button style=\\\"width: 90px;\\r\\n                                        position: absolute;\\r\\n                                        top: -55px;\\r\\n                                        right: 1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetCreatedLectureSeries()\\\"> \\r\\n                        <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          Reset\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                  \\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n      \\r\\n      \\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n      \\r\\n                  <ion-card>\\r\\n                    <ion-card-header>\\r\\n                      <p style=\\\"font-size: 20px;\\\">\\r\\n                        <b>View Created Lecture Series</b>\\r\\n                      </p>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      \\r\\n                      <form [formGroup]=\\\"searchLectureSeriesForm\\\" (ngSubmit)=\\\"doSearchLectureSeries(searchLectureSeriesForm.value)\\\">\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Degree Program\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Degree Program\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Program\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveAwardingBodyUniversity($event)\\\" formControlName=\\\"degreeProgram\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                    {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Batch\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Batch\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Batch\\\" style=\\\"min-width: 100%;\\\" formControlName=\\\"batch\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedBatches\\\" value=\\\"{{ item.payload.doc.data().batch }}\\\">\\r\\n                                    {{ item.payload.doc.data().batch }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n                            \\r\\n                          </ion-row>\\r\\n                          <ion-row>\\r\\n            \\r\\n                            <ion-col size=\\\"5\\\">\\r\\n                              <ion-label class=\\\"viewCreatedLectureSeriesFormLabel\\\">\\r\\n                                Module\\r\\n                              </ion-label>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"7\\\">\\r\\n                              <ion-item>\\r\\n                                <ion-label>\\r\\n                                  Module\\r\\n                                </ion-label>\\r\\n                                <ion-select placeholder=\\\"Select Module\\\" style=\\\"min-width: 100%;\\\" (ionChange)=\\\"retrieveModuleTitle($event)\\\" formControlName=\\\"module\\\">\\r\\n                                  <ion-select-option *ngFor=\\\"let item of publishedModules\\\" \\r\\n                                    value=\\\"{{ item.payload.doc.data().moduleCode }}\\\">\\r\\n                                      {{ item.payload.doc.data().moduleCode }} - {{ item.payload.doc.data().moduleTitle }}\\r\\n                                  </ion-select-option>\\r\\n                                </ion-select>\\r\\n                              </ion-item>\\r\\n                            </ion-col>\\r\\n            \\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n            \\r\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!searchLectureSeriesForm.valid\\\"> \\r\\n                          Search\\r\\n                        </ion-button>\\r\\n                      </form>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"showPublishedLectureSeries\\\">\\r\\n                        <ion-card *ngFor=\\\"let item of publishedLectureSeries\\\">\\r\\n\\r\\n                          <ion-card-content>\\r\\n\\r\\n                            <ion-label style=\\\"font-size: 15px;\\\">\\r\\n                              Published Lecturer Series\\r\\n                            </ion-label>\\r\\n\\r\\n                            <ion-card>\\r\\n\\r\\n                              <ion-card-content>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>No of Lectures: </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <ion-label>\\r\\n                                        {{ item.payload.doc.data().noOfLectures }} lecturers\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>Enrollment Key: </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <ion-label>\\r\\n                                        {{ item.payload.doc.data().enrollmentKey }}\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col size=\\\"5\\\">\\r\\n                                      <ion-label class=\\\"searchLectureSeriesFormLabel\\\">\\r\\n                                        <b>Enrolled Students </b>\\r\\n                                      </ion-label>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col size=\\\"7\\\">\\r\\n                                      <div style=\\\"height: 300px;\\r\\n                                                  border: #ccc solid 1px;\\r\\n                                                  border-radius: 5pxl;\\r\\n                                                  padding: 5px;\\r\\n                                                  overflow-y: scroll;\\\">\\r\\n                                        <ion-label>\\r\\n                                          {{ item.payload.doc.data().enrolledStudents }}\\r\\n                                        </ion-label>\\r\\n                                      </div>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n\\r\\n                                <ion-grid style=\\\"position: absolute;\\r\\n                                                top: 280px;\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"secondary\\\" style=\\\"width: 120px;\\\" (click)=\\\"editLectureSeries(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\" \\r\\n                                        (click)=\\\"removeLectureSeries('Confirmation Required', 'This lecture series will be removed, do you want to continue? ', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                                \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                              </ion-card-content>\\r\\n\\r\\n                            </ion-card>\\r\\n\\r\\n                          </ion-card-content>\\r\\n\\r\\n                        </ion-card>\\r\\n                      </ng-container>\\r\\n\\r\\n\\r\\n                       <!-- Reset Button -->\\r\\n                      <ion-button style=\\\"width: 90px;\\r\\n                                        position: absolute;\\r\\n                                        top: -55px;\\r\\n                                        right: 1.5%;\\\" color=\\\"dark\\\" fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"resetSearchCreatedLectureSeries()\\\"> \\r\\n                        <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: rgb(59, 59, 59);\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          Reset\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                  \\r\\n\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n      \\r\\n                </ion-col>\\r\\n      \\r\\n              </ion-row>\\r\\n\\r\\n            </ion-grid>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SemesterCalendarPage } from './semester-calendar.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SemesterCalendarPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SemesterCalendarPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SemesterCalendarPageRoutingModule } from './semester-calendar-routing.module';\r\n\r\nimport { SemesterCalendarPage } from './semester-calendar.page';\r\n\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\n\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgCalendarModule,\r\n    IonicModule,\r\n    SemesterCalendarPageRoutingModule,\r\n    MaterialModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  declarations: [SemesterCalendarPage]\r\n})\r\nexport class SemesterCalendarPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243);\\n}\\n\\nion-card {\\n  --ion-background-color: white;\\n}\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px;\\n}\\n\\nion-label {\\n  color: black;\\n}\\n\\n.viewCreatedLectureSeriesFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.createNewLectureSeriesFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.assignNewLectureSessionSlotFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 15px;\\n}\\n\\n.searchLectureSeriesFormLabel {\\n  position: relative;\\n  top: 2px;\\n  font-size: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcc2VtZXN0ZXItY2FsZW5kYXJcXHNlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL3NlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUFBO0FDQ0o7O0FERUE7RUFDSSw2QkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvb2ZmaWNlL3NlbWVzdGVyLWNhbGVuZGFyL3NlbWVzdGVyLWNhbGVuZGFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24taXRlbXtcclxuICAgIGJvcmRlcjogI2NjYyBzb2xpZCAxcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnZpZXdDcmVhdGVkTGVjdHVyZVNlcmllc0Zvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG5cclxuLmNyZWF0ZU5ld0xlY3R1cmVTZXJpZXNGb3JtTGFiZWx7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbi5hc3NpZ25OZXdMZWN0dXJlU2Vzc2lvblNsb3RGb3JtTGFiZWx7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbi5zZWFyY2hMZWN0dXJlU2VyaWVzRm9ybUxhYmVse1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAycHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbiIsImlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xufVxuXG5pb24tY2FyZCB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG5pb24taXRlbSB7XG4gIGJvcmRlcjogI2NjYyBzb2xpZCAxcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuaW9uLWxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4udmlld0NyZWF0ZWRMZWN0dXJlU2VyaWVzRm9ybUxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDE1cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLmNyZWF0ZU5ld0xlY3R1cmVTZXJpZXNGb3JtTGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMTVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4uYXNzaWduTmV3TGVjdHVyZVNlc3Npb25TbG90Rm9ybUxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDE1cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLnNlYXJjaExlY3R1cmVTZXJpZXNGb3JtTGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMnB4O1xuICBmb250LXNpemU6IDE1cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ModalController, AlertController, PopoverController } from '@ionic/angular';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { EditLectureSessionModalPage } from './edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { MoreDetailsSessionPopoverPage } from './more-details-session-popover/more-details-session-popover.page';\r\nimport { EditLectureSeriesModalPage } from './edit-lecture-series-modal/edit-lecture-series-modal.page';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-semester-calendar',\r\n  templateUrl: './semester-calendar.page.html',\r\n  styleUrls: ['./semester-calendar.page.scss'],\r\n})\r\nexport class SemesterCalendarPage implements OnInit {\r\n\r\n  searchSemesterCalendar: FormGroup;\r\n\r\n  assignNewLectureSlotSC: FormGroup;\r\n\r\n  createNewLectureSeriesForm: FormGroup;\r\n\r\n  searchLectureSeriesForm: FormGroup;\r\n\r\n  loadingSpinnerPLS: Boolean = false;\r\n\r\n  showPublishedLectureSeries: Boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private popoverController: PopoverController,\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private semesterCalendarService: FirebaseService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Calling the functions inorder for them to execute upon page load\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrievePublishedDegreeProgram();\r\n\r\n    this.retrieveRegisteredModules();\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n    this.retrievePublishedLectureHalls();\r\n\r\n    this.retrievePublishedLectureSessionStatuses();\r\n\r\n\r\n    this.searchSemesterCalendar = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.assignNewLectureSlotSC = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required),\r\n      lecturer: new FormControl('', Validators.required),\r\n      lectureHall: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required),\r\n      addLectureContentLoadOption: new FormControl('', Validators.required),\r\n      sessionDateSingle: new FormControl(''),\r\n      sessionStartTimeSingle: new FormControl(''),\r\n      sessionEndTimeSingle: new FormControl(''),\r\n      sessionDayMultiple: new FormControl(''),\r\n      sessionStartDateMultiple: new FormControl(''),\r\n      sessionEndDateMultiple: new FormControl(''),\r\n      sessionStartTimeMultiple: new FormControl(''),\r\n      sessionEndTimeMultiple: new FormControl('')\r\n    });\r\n    \r\n    this.createNewLectureSeriesForm = this.formBuilder.group({\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      batch: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required),\r\n      noOfLectures: new FormControl('', Validators.required),\r\n      enrollmentKey: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.searchLectureSeriesForm = this.formBuilder.group({\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      batch: new FormControl('', Validators.required),\r\n      module: new FormControl('', Validators.required)\r\n    });\r\n\r\n  }\r\n\r\n  \r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n  // Retrieving the published batch from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => {\r\n    this.semesterCalendarService.retrievePublishedBatch(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedBatches = response));\r\n  }\r\n\r\n  \r\n  // Retrieving the published degree programs and details from the firestore database\r\n  publishedDegreePrograms;\r\n  retrievePublishedDegreeProgram = () => {\r\n    this.semesterCalendarService.retrievePublishedDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedDegreePrograms = response));\r\n  }\r\n\r\n  // Implementation of generating an array for the count of, no of years and no of semesters\r\n  convertToArray(n: number): any[] {\r\n    return Array(n);\r\n  }\r\n\r\n  // Retrieving the published modules from the firestore database\r\n  publishedModules;\r\n  retrieveRegisteredModules = () => \r\n    this.semesterCalendarService.retrieveRegisteredModules(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedModules = response));\r\n  \r\n  // Retrieving the registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () => \r\n    this.semesterCalendarService.retrieveRegisteredLecturers().subscribe(response => (this.registeredLecturers = response));\r\n\r\n  // Retrieving published lecture halls from the firestore database\r\n  publishedLectureHalls;\r\n  retrievePublishedLectureHalls = () =>\r\n    this.semesterCalendarService.retrievePublishedLectureHalls(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedLectureHalls = response));\r\n\r\n  // Retrieving published session statuses from the firestore database\r\n  publishedLectureSessionStatuses;\r\n  retrievePublishedLectureSessionStatuses = () =>\r\n    this.semesterCalendarService.retrievePublishedLectureSessionStatuses().subscribe(response => (this.publishedLectureSessionStatuses = response));\r\n\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n\r\n  numberOfLectureSessions;\r\n  \r\n  publishedLectureSlots;\r\n\r\n  userSelectedAwardingBodyUniversity;\r\n\r\n\r\n  publishedModuleTitleOfModuleCode;\r\n  moduleTitle;\r\n\r\n  async retrieveModuleTitle(event){\r\n    console.log(event.detail.value);\r\n    // Retrieving the module title of the selected module code\r\n    this.semesterCalendarService.retrievingModuleTitleOfModuleCode(event.detail.value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedModuleTitleOfModuleCode =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.moduleTitle = firestoreDoc.moduleTitle;\r\n        console.log(this.moduleTitle);\r\n      })\r\n    ));\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  publishedAwardingBodyUniversityOfDegree;\r\n  awardingBodyUniversity;\r\n  degreeCode;\r\n\r\n  async retrieveAwardingBodyUniversity(event){\r\n\r\n    // Retrieving the awardingBody University of the selected degree\r\n    this.semesterCalendarService.retrievingAwardingBodyUniversityOfDegree(event.detail.value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedAwardingBodyUniversityOfDegree =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.awardingBodyUniversity = firestoreDoc.awardingBodyUniversity;\r\n        this.degreeCode = firestoreDoc.degreeCode;\r\n        console.log(this.awardingBodyUniversity);\r\n        console.log(this.degreeCode);\r\n      })\r\n    ));\r\n\r\n  }\r\n\r\n  // Retrieving published lecture sessions\r\n  doSearchSemesterCalendar(value){\r\n\r\n    this.loadingSpinnerPLS = true;\r\n\r\n\r\n\r\n   // console.log(value);\r\n\r\n   // console.log(value.batch);\r\n\r\n   // console.log(value.degreeProgram);\r\n\r\n   // console.log(value.academicYearYear);\r\n   // console.log(value.academicYearSemester);\r\n\r\n    \r\n    \r\n    // Calling function to retrieve the published lecture sessions from the firestore database\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(response => {\r\n      // Checking if any document values where returned\r\n      if (response.length > 0){\r\n        \r\n        this.eventSourcePSCalendar = []; // Clearing the existing events on the calendar before syncing \r\n        response.forEach(snap => {\r\n          let eventPSCalendar:any = snap.payload.doc.data();\r\n          eventPSCalendar.id = snap.payload.doc.id;\r\n          eventPSCalendar.title = eventPSCalendar.moduleCode + \"-\" + eventPSCalendar.moduleTitle + \" | Status: \" + eventPSCalendar.status;\r\n          eventPSCalendar.startTime = eventPSCalendar.startDateTime.toDate();\r\n          eventPSCalendar.endTime = eventPSCalendar.endDateTime.toDate();\r\n\r\n          console.log(eventPSCalendar);\r\n\r\n          this.eventSourcePSCalendar.push(eventPSCalendar);\r\n        });\r\n        \r\n        this.alertNotice(\"Lecture Sessions Retrieval\", \"Available lecture sessions for this semester calendar are placed on the calendar.\");\r\n\r\n        console.log(\"Semester Calendar Record Found\");\r\n      }\r\n      else{\r\n        this.alertNotice(\"Not Found\", \"Lecture sessions for this semester calendar is not available\");\r\n        console.log(\"Semester Calendar Record Found\");\r\n      }\r\n    }, error => {\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n  \r\n    // Calling function to retrieve the lecture sessions and setting loading dots to false after the contents has loaded.\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(() => this.loadingSpinnerPLS = false);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  // More details of lecture sessions popover\r\n  async moreDetailsLectureSession(ev: Event, value){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: MoreDetailsSessionPopoverPage,\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        batch: value.batch,\r\n        lecturer: value.lecturer,\r\n        lectureHall: value.lectureHall,\r\n        degreeCode: value.degreeCode,\r\n        degree: value.degree,\r\n        awardingBodyUniversity: value.awardingBodyUniversity,\r\n        academicPeriodYear: value.academicYear,\r\n        academicPeriodSemester: value.academicSemester\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n    \r\n  }\r\n\r\n\r\n  // Editing lecture sessions modal calling, opening modal\r\n  async editLectureSession(value){\r\n    console.log(value);\r\n\r\n    const editLectureSessionModal = await this.modalController.create({\r\n      component: EditLectureSessionModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSessionId: value.id,\r\n        lectureSessionBatch: value.batch,\r\n        lectureSessionDegreeProgram: value.degreeProgram,\r\n        lectureSessionAcademicYear: value.academicYear,\r\n        lectureSessionAcademicSemester: value.academicSemester,\r\n        lectureSessionModuleCode: value.moduleCode,\r\n        lectureSessionModuleTitle: value.moduleTitle,\r\n        lectureSessionStartDateTime: value.startTime,\r\n        lectureSessionEndDateTime: value.endTime,\r\n        lectureSessionLecturer: value.lecturer,\r\n        lectureSessionLectureHall: value.lectureHall,\r\n        lectureSessionStatus: value.status,\r\n        userFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionModal.present();\r\n  }\r\n\r\n\r\n  // Confirm Box Implementation (Remove existing lecture session)\r\n  async removeLectureSession ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Event Session Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Event Session Request Accepted\");\r\n\r\n            // Calling function to remove lecture session\r\n            this.semesterCalendarService.removeLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value);\r\n\r\n          }\r\n        }\r\n\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  userSelectedOption;\r\n  userSelectionLectureAssignIndividually: Boolean = false;\r\n  userSelectionLectureAssignGroup: Boolean = false;\r\n\r\n  // Load form content depending on assigning eah lecture session individually or in a group \r\n  async loadFormContent(event){\r\n\r\n    this.userSelectedOption = event.detail.value;\r\n\r\n    this.userSelectionLectureAssignIndividually = false;\r\n\r\n    this.userSelectionLectureAssignGroup = false;\r\n    \r\n    console.log(\"Reponse: \" + event.detail.value);\r\n\r\n    if(this.userSelectedOption == \"lectureAssignIndividaully\"){\r\n      this.userSelectionLectureAssignIndividually = true;\r\n    }\r\n    else if(this.userSelectedOption == \"lectureAssignGroup\"){\r\n      this.userSelectionLectureAssignGroup = true;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  // (Publishing new lecture sessions section) and retrieving published lecture sessions \r\n  doPublishLectureSlotSC(value){\r\n\r\n    // Retrieving selected session date\r\n    // Mon Apr 20 2020 10:13:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionDateTime = new Date(value.sessionDateSingle);\r\n\r\n    let selectedSessionDate = selectedSessionDateTime.getFullYear() + \"-\" + selectedSessionDateTime.getMonth() + \"-\" + selectedSessionDateTime.getDate();\r\n    console.log(selectedSessionDate);\r\n    // Retrieving selected session start time\r\n    // Mon Apr 20 2020 09:07:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionStartTime = new Date(value.sessionStartTimeSingle);\r\n\r\n    // Retrieving selected session end time\r\n    // Mon Apr 20 2020 12:02:54 GMT+0530 (India Standard Time)\r\n    let selectedSessionEndTime = new Date(value.sessionEndTimeSingle);\r\n\r\n    // taking the sesion date and session start time and merging them together. Assign this value to a variable\r\n    // Mon Apr 20 2020 09:07:00 GMT+0530 (India Standard Time)\r\n    let selectedSessionStartDateTime = new Date(selectedSessionDateTime.getFullYear(), selectedSessionDateTime.getMonth(), selectedSessionDateTime.getDate(), \r\n      selectedSessionStartTime.getHours(), selectedSessionStartTime.getMinutes(), 0, 0);\r\n    \r\n      // taking the sesion date and session end time and merging them together. Assign this value to a variable\r\n    // Mon Apr 20 2020 12:02:00 GMT+0530 (India Standard Time)\r\n    let selectedSessionEndDateTime = new Date(selectedSessionDateTime.getFullYear(), selectedSessionDateTime.getMonth(), selectedSessionDateTime.getDate(), \r\n      selectedSessionEndTime.getHours(), selectedSessionEndTime.getMinutes(), 0, 0);\r\n\r\n     \r\n      \r\n    if(value.addLectureContentLoadOption == \"lectureAssignIndividaully\"){\r\n      // If user selects 'lectureAssignIndividaully' option\r\n\r\n      // Adding the lecture session details into the firestore database\r\n      this.semesterCalendarService.addNewLectureSession(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.degreeCode, this.awardingBodyUniversity, this.moduleTitle, selectedSessionDate, selectedSessionStartDateTime, selectedSessionEndDateTime);\r\n      \r\n      this.alertNotice(\"Lecture Session Added\", \"New Lecture Session has been added.\");\r\n\r\n\r\n    }\r\n    else if(value.addLectureContentLoadOption == \"lectureAssignGroup\"){\r\n      // If user selects 'lectureAssignGroup' option\r\n\r\n    }\r\n\r\n    // Calling function to retrieving the lecture sessions for this degree program, batch, academic period year and academic period semester from the firestore database\r\n    this.semesterCalendarService.retrievePublishedLectureSessionsSemesterCalendar(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity).subscribe(activeLectureSlots => {\r\n      this.eventSourceASCalendar = []; // Clearing the existing lecture sessions on the calendar before syncing \r\n      activeLectureSlots.forEach(snap => {\r\n        let eventASCalendar:any = snap.payload.doc.data();\r\n        eventASCalendar.id = snap.payload.doc.id;\r\n        eventASCalendar.title = eventASCalendar.moduleCode + \"-\" + eventASCalendar.moduleTitle + \"\\n | Status: \" + eventASCalendar.status;\r\n        eventASCalendar.startTime = eventASCalendar.startDateTime.toDate();\r\n        eventASCalendar.endTime = eventASCalendar.endDateTime.toDate();\r\n\r\n        this.eventSourceASCalendar.push(eventASCalendar);\r\n      });\r\n    });\r\n   \r\n\r\n  }\r\n\r\n  // Resetting search assigned semester calendar\r\n  resetSearchAssignedSemesterCalendar(){\r\n\r\n    // Resetting formControlGroup\r\n    this.searchSemesterCalendar.reset();\r\n\r\n    // Resetting calendar\r\n    this.eventSourcePSCalendar = []; \r\n\r\n  }\r\n\r\n  // Resetting assign semester calendar\r\n  resetAssignSemesterCalendar(){\r\n    // Resetting formControlGroup\r\n    this.assignNewLectureSlotSC.reset();\r\n\r\n    // Resetting calendar\r\n    this.eventSourceASCalendar = []; \r\n  }\r\n\r\n\r\n\r\n  // Process of adding a new lecture series\r\n  doCreateNewLectureSeries(value){\r\n\r\n    this.semesterCalendarService.createNewLectureSeries(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), this.awardingBodyUniversity, this.moduleTitle);\r\n\r\n    this.alertNotice(\"Lecture Series Created\", \"New Lecture Series has been created.\");\r\n\r\n  }\r\n\r\n  // Resetting create new lecture series form\r\n  resetCreatedLectureSeries(){\r\n\r\n    this.createNewLectureSeriesForm.reset();\r\n\r\n    this.publishedLectureSeries = \"\";\r\n  }\r\n\r\n  \r\n\r\n\r\n  publishedLectureSeries;\r\n\r\n  // Process of searching published lecture series \r\n  doSearchLectureSeries(value){\r\n\r\n    console.log(value);\r\n    console.log(this.awardingBodyUniversity);\r\n    console.log(this.moduleTitle);\r\n\r\n    this.semesterCalendarService.retrievePublishedLectureSeries(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), value, this.awardingBodyUniversity, this.moduleTitle).subscribe(response => {\r\n        // Checking if any document values where returned\r\n        if (response.length > 0){\r\n\r\n          this.showPublishedLectureSeries = true;\r\n          \r\n          this.publishedLectureSeries = response;\r\n\r\n          console.log(\"Lecture Series Record Found\");\r\n        }\r\n        else{\r\n          this.alertNotice(\"Not Found\", \"Lecture Series Record is not available\");\r\n          console.log(\"Lecture Series Record Not Found\");\r\n        }\r\n      }, error => {\r\n        console.log(\"Error: \" + error);\r\n        this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n      });\r\n  }\r\n\r\n  // Resetting search lecture series form\r\n  resetSearchCreatedLectureSeries(){\r\n\r\n    this.searchLectureSeriesForm.reset();\r\n\r\n    this.showPublishedLectureSeries = false;\r\n\r\n  }\r\n\r\n\r\n  // Editing lecture series modal calling, opening modal\r\n  async editLectureSeries(value){\r\n    const editLectureSeriesModal = await this.modalController.create({\r\n      component: EditLectureSeriesModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        lectureSeriesDocId: value.payload.doc.id,\r\n        lectureSeriesNoOfLecturers: value.payload.doc.data().noOfLectures,\r\n        lectureSeriesEnrollmentKey: value.payload.doc.data().enrollmentKey,\r\n        loggedInUserFaculty: this.sideMenuPageUserFaculty.passLoggedInUserFaculty()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSeriesModal.present();\r\n  }\r\n\r\n\r\n  // Confirm Box Implementation (Remove existing lecture series)\r\n  async removeLectureSeries ( title: string, content: string, value) {\r\n\r\n    let lectureSeriesDocId = value.payload.doc.id;\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Series Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Series Request Accepted\");\r\n\r\n            // Calling function to remove lecture series\r\n            this.semesterCalendarService.removeLectureSeries(lectureSeriesDocId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.showPublishedLectureSeries = false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  \r\n\r\n\r\n  // Declaring an array to initialize the number of events (lecture sessions) and their details\r\n  lectureSessionsDocuments = [];\r\n\r\n  // Published Semester Calendar\r\n  eventSourcePSCalendar;\r\n  viewingMonthPSCalendar;\r\n\r\n  calendarPSCalendar = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  selectedDate = new Date();\r\n\r\n  nextMonthPSCalendar(){\r\n    var frontSwipePSCalendar = document.getElementById('publishedSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipePSCalendar.slideNext();\r\n  }\r\n\r\n  previousMonthPSCalendar(){\r\n    var backSwipePSCalendar = document.getElementById('publishedSemesterCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipePSCalendar.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedPSCalendar(title){\r\n    console.log(title);\r\n    this.viewingMonthPSCalendar = title; \r\n  }\r\n\r\n  onEventSelectedPSCalendar(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title); \r\n  }\r\n\r\n  onTimeSelectedPSCalendar(event){\r\n    console.log(\"Lecture Session Selected Time: \" + event.selectedTime + \", has sessions: \" + (event.events !== undefined && event.events.length !== 0) +\r\n      \", disabled: \" + event.disabled);\r\n\r\n      if((event.events !== undefined && event.events.length !== 0) == false){\r\n        this.lectureSessionsDocuments = [];\r\n      }\r\n      else if ((event.events !== undefined && event.events.length !== 0) == true){\r\n        this.lectureSessionsDocuments = event.events;\r\n      }\r\n      console.log(this.lectureSessionsDocuments);\r\n  }\r\n\r\n  onCurrentDateChangedPSCalendar(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n\r\n    this.lectureSessionsDocuments = [];\r\n  }\r\n\r\n  onRangeChangedPSCalendar(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  // Active Semester Calendar\r\n  eventSourceASCalendar;\r\n  viewingMonthASCalendar;\r\n\r\n  calendarASCalendar = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  nextMonthASCalendar(){\r\n    var frontSwipeASCalendar = document.getElementById('EventCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipeASCalendar.slideNext();\r\n  }\r\n\r\n  previousMonthASCalendar(){\r\n    var backSwipeASCalendar = document.getElementById('EventCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipeASCalendar.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedASCalendar(title){\r\n    console.log(title);\r\n    this.viewingMonthASCalendar = title; \r\n  }\r\n\r\n  onEventSelectedASCalendar(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title);\r\n  }\r\n\r\n  onTimeSelectedASCalendar(evt){\r\n    console.log(\"Lecture Session Selected Time: \" + evt.selectedTime + \", has sessions: \" + (evt.events !== undefined && evt.events.length !== 0) +\r\n      \", disabled: \" + evt.disabled);\r\n  }\r\n\r\n  onCurrentDateChangedASCalendar(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n  }\r\n\r\n  onRangeChangedASCalendar(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"semester-calendar-semester-calendar-module-es5.js"}