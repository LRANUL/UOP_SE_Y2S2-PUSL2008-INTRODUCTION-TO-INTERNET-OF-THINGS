{"version":3,"sources":["./src/app/office/settings/settings.page.html","./src/app/office/settings/settings-routing.module.ts","./src/app/office/settings/settings.module.ts","./src/app/office/settings/settings.page.scss","./src/app/office/settings/settings.page.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"height: 70px;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Settings</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Academic Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Degree Programs\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"width: 850px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Degree Code</th>\\r\\n                              <th>Degree Program</th>\\r\\n                              <th>No Of Years</th>\\r\\n                              <th>No Of Semesters Annually</th>\\r\\n                              <th>Program Delivery</th>\\r\\n                              <th>Program Coordinator</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedDegreePrograms\\\">\\r\\n                              <td>{{ item.payload.doc.data().degreeCode }}</td>\\r\\n                              <td>{{ item.payload.doc.data().degree }},<br> {{ item.payload.doc.data().awardingBodyUniversity }}</td>\\r\\n                              <td>{{ item.payload.doc.data().deliveryNoOfYears }}</td>\\r\\n                              <td>{{ item.payload.doc.data().deliveryNoOfSemestersAnnually }}</td>\\r\\n                              <td>{{ item.payload.doc.data().programDelivery }}</td>\\r\\n                              <td>{{ item.payload.doc.data().programCoordinator }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditDegreeProgramModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\" \\r\\n                                        (click)=\\\"removeDegreeProgram('Confirmation Required', 'This degree program will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                        \\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerDegreeProgram\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddDegreeProgramForm()\\\" *ngIf=\\\"addDegreeProgramButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddDegreeProgramForm()\\\" *ngIf=\\\"closeDegreeProgramFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addDegreeProgramFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Degree Program\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addDegreeProgramForm\\\" (ngSubmit)=\\\"doAddDegreeProgram(addDegreeProgramForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Code\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Code\\\" formControlName=\\\"degreeCode\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Program\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-textarea rows=\\\"3\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Degree\\\" formControlName=\\\"degree\\\"></ion-textarea>\\r\\n                                      </ion-item> \\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-textarea rows=\\\"3\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Awarding Body University\\\" formControlName=\\\"awardingBodyUniversity\\\"></ion-textarea>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Academic Period\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select No of Years\\\" formControlName=\\\"academicPeriodYear\\\">\\r\\n                                          <ion-select-option value=\\\"1\\\">1 Year</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"2\\\">2 Years</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"3\\\">3 Years</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"4\\\">4 Years</ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select No of Semesters Annually\\\" formControlName=\\\"academicPeriodSemester\\\">\\r\\n                                          <ion-select-option value=\\\"1\\\">1 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"2\\\">2 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"3\\\">3 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"4\\\">4 Semesters</ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Program Delivery \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Delivery\\\" formControlName=\\\"programDelivery\\\">\\r\\n                                      <ion-select-option value=\\\"Part-Time\\\">Part-Time Delivery</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Full-Time\\\">Full-Time Delivery</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Program Coordinattor \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Coordinator\\\" formControlName=\\\"programCoordinator\\\">\\r\\n                                      <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" \\r\\n                                        value=\\\"\\r\\n                                          {{ item.payload.doc.data().name.prefix }}\\r\\n                                          {{ item.payload.doc.data().name.firstName }}\\r\\n                                          {{ item.payload.doc.data().name.middleName }}\\r\\n                                          {{ item.payload.doc.data().name.lastName }}\\r\\n                                        \\\">\\r\\n                                        {{ item.payload.doc.data().name.prefix }}\\r\\n                                        {{ item.payload.doc.data().name.firstName }}\\r\\n                                        {{ item.payload.doc.data().name.middleName }}\\r\\n                                        {{ item.payload.doc.data().name.lastName }}\\r\\n                                      </ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addDegreeProgramForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Batches\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Batch</th>\\r\\n                              <th>Degree Program</th>\\r\\n                              <th>Status</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedBatches\\\">\\r\\n                              <td>{{ item.payload.doc.data().batch }}</td>\\r\\n                              <td>{{ item.payload.doc.data().degree }},<br> {{ item.payload.doc.data().awardingBodyUniversity }}</td>\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditBatchModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeBatch('Confirmation Required', 'This batch will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerBatch\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddBatchForm()\\\" *ngIf=\\\"addBatchButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddBatchForm()\\\" *ngIf=\\\"closeBatchFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addBatchFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Batch\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addBatchForm\\\" (ngSubmit)=\\\"doAddBatch(addBatchForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Batch\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Batch\\\" formControlName=\\\"batch\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Program\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Degree Program\\\" (ionChange)=\\\"getAwardingBodyUniversity($event)\\\" formControlName=\\\"degreeProgram\\\">\\r\\n                                          <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" \\r\\n                                            value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                            {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                          </ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\">\\r\\n                                      <ion-select-option value=\\\"Pending\\\">Pending</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Active\\\">Active</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Graduated\\\">Graduated</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addBatchForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Credit Weightings\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 500px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Credit Weightings</th>\\r\\n                              <th>Description</th>\\r\\n                              <th>Status</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedNoOfCreditWeightings\\\">\\r\\n                              <td>{{ item.payload.doc.data().creditsWeighting }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditCreditWeightingModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeCreditWeighting('Confirmation Required', 'This credit weighting will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerCreditWeighting\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddCreditWeightingForm()\\\" *ngIf=\\\"addCreditWeightingButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddCreditWeightingForm()\\\" *ngIf=\\\"closeCreditWeightingFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addCreditWeightingFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Credit Weighting\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addCreditWeightingForm\\\" (ngSubmit)=\\\"doAddCreditWeighting(addCreditWeightingForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Credit Weighting\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"number\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter No of Credits\\\" formControlName=\\\"creditWeighting\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\">\\r\\n                                      <ion-select-option value=\\\"Pending\\\">Pending</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Active\\\">Active</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addCreditWeightingForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Lecture Halls\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 500px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Lecture Hall</th>\\r\\n                              <th>Level</th>\\r\\n                              <th>Approximate No Of Seats Available</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedLectureHalls\\\">\\r\\n                              <td>{{ item.payload.doc.data().lectureHall }}</td>\\r\\n                              <td>{{ item.payload.doc.data().level }}</td>\\r\\n                              <td>{{ item.payload.doc.data().approximateNoOfSeatsAvailable }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditLectureHallModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeLectureHall('Confirmation Required', 'This lecture hall will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerLectureHall\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddLectureHallForm()\\\" *ngIf=\\\"addLectureHallButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddLectureHallForm()\\\" *ngIf=\\\"closeLectureHallFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addLectureHallFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Lecture Hall\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addLectureHallForm\\\" (ngSubmit)=\\\"doAddLectureHall(addLectureHallForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Lecture Hall\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Lecture Hall\\\" formControlName=\\\"lectureHall\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Level\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Level\\\" formControlName=\\\"level\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Approximate No Of Seats Available \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"number\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter No of Seats\\\" formControlName=\\\"approximateNoOfSeatsAvailable\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addLectureHallForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Status Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Lecture Session Statuses\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Status</th>\\r\\n                              <th>Description</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedLectureSessionStatuses\\\">\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditLectureSessionStatusModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeLectureSessionStatus('Confirmation Required', 'This lecture session status will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerLectureSessionStatus\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddLectureSessionStatusForm()\\\" *ngIf=\\\"addLectureSessionStatusButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddLectureSessionStatusForm()\\\" *ngIf=\\\"closeLectureSessionStatusFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addLectureSessionStatusFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Lecture Session Status\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addLectureSessionStatusForm\\\" (ngSubmit)=\\\"doAddLectureSessionStatus(addLectureSessionStatusForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Status\\\" formControlName=\\\"status\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addLectureSessionStatusForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        User Account Statuses\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Status</th>\\r\\n                              <th>Description</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedUserStatuses\\\">\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditUserAccountStatusModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeUserAccountStatus('Confirmation Required', 'This user account status will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerUserAccountStatus\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 85%;\\r\\n                                                        transform: translateX(-15%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddUserAccountStatusForm()\\\" *ngIf=\\\"addUserAccountStatusButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddUserAccountStatusForm()\\\" *ngIf=\\\"closeUserAccountStatusFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addUserAccountStatusFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add User Account Status\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addUserAccountStatusForm\\\" (ngSubmit)=\\\"doAddUserAccountStatus(addUserAccountStatusForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Status\\\" formControlName=\\\"status\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addUserAccountStatusForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Notice Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-card>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                  Notice Categories\\r\\n                </ion-label>\\r\\n\\r\\n                <div style=\\\"margin-top: 5px;\\r\\n                            border: #ccc solid 1px;\\r\\n                            border-radius: 5px;\\r\\n                            min-width: 100%;\\r\\n                            height: 460px;\\r\\n                            overflow-y: scroll;\\\">\\r\\n\\r\\n                  <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Category</th>\\r\\n                        <th>Description</th>\\r\\n                        <th></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of publishedNoticeCategory\\\">\\r\\n                        <td>{{ item.payload.doc.data().category }}</td>\\r\\n                        <td>{{ item.payload.doc.data().description }}</td>\\r\\n                        <td>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditNoticeCategoryModal(item)\\\">\\r\\n                                  <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    EDIT\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                  (click)=\\\"removeNoticeCategory('Confirmation Required', 'This notice category will be removed, do you want to continue?', item)\\\">\\r\\n                                  <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    REMOVE\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                top: 50%;\\r\\n                                                transform: translate(-50%,-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"loadingSpinnerNoticeCategory\\\"></ion-spinner>\\r\\n\\r\\n                <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                  left: 85%;\\r\\n                                                  transform: translateX(-15%);\\r\\n                                                  width: 100px;\\\" (click)=\\\"openAddNoticeCategoryForm()\\\" *ngIf=\\\"addNoticeCategoryButton\\\">\\r\\n                  <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                  <ion-label style=\\\"color: white;\\\">\\r\\n                    ADD\\r\\n                  </ion-label>\\r\\n                </ion-button>\\r\\n\\r\\n                <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddNoticeCategoryForm()\\\" *ngIf=\\\"closeNoticeCategoryFormButton\\\">\\r\\n                  <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n\\r\\n                \\r\\n                <div *ngIf=\\\"addNoticeCategoryFormSection\\\">\\r\\n                  <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                    Add Notice Category\\r\\n                  </ion-label>\\r\\n                  <div style=\\\"margin-top: 5px;\\r\\n                            border: #ccc solid 1px;\\r\\n                            border-radius: 5px;\\r\\n                            min-width: 100%;\\r\\n                            padding-top: 10px;\\r\\n                            padding: 25px;\\\">\\r\\n\\r\\n                    <form [formGroup]=\\\"addNoticeCategoryForm\\\" (ngSubmit)=\\\"doAddNoticeCategory(addNoticeCategoryForm.value)\\\">\\r\\n\\r\\n                      <ion-grid>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"5\\\">\\r\\n                            <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                              Category\\r\\n                            </ion-label>\\r\\n                          </ion-col>\\r\\n                          <ion-col size=\\\"7\\\">\\r\\n                            <ion-item>\\r\\n                              <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Category\\\" formControlName=\\\"category\\\"></ion-input>\\r\\n                            </ion-item>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"5\\\">\\r\\n                            <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                              Description\\r\\n                            </ion-label>\\r\\n                          </ion-col>\\r\\n                          <ion-col size=\\\"7\\\">\\r\\n                            <ion-item>\\r\\n                              <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                            </ion-item>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"12\\\">\\r\\n                            <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addNoticeCategoryForm.valid\\\">\\r\\n                              <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                              <ion-label style=\\\"color: white;\\\">\\r\\n                                ADD\\r\\n                              </ion-label>\\r\\n                            </ion-button>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n           \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Account Details\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-button color=\\\"medium\\\" expand=\\\"block\\\" style=\\\"height: 50px;\\\" (click)=\\\"openUpdateDetailsLoginForm()\\\">\\r\\n                    Update Details\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button color=\\\"medium\\\" expand=\\\"block\\\" style=\\\"height: 50px;\\\" (click)=\\\"openUpdatePasswordLoginForm()\\\">\\r\\n                    Update Password\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <!-- Update Details Login Credentials Form -->\\r\\n            <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                              left: 5%;\\r\\n                                              top: 30px;\\r\\n                                              transform: translateX(-10%);\\\" (click)=\\\"openUpdateDetailsLoginForm()\\\" *ngIf=\\\"closeUpdateDetailsLoginFormButton\\\">\\r\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        margin: 30px;\\r\\n                        padding: 20px;\\\" *ngIf=\\\"updateDetailsLoginFormSection\\\">\\r\\n              <ion-label style=\\\"font-size: 18px;\\\">\\r\\n                Enter Login Credentials\\r\\n              </ion-label>\\r\\n\\r\\n              <form [formGroup]=\\\"updateDetailsLoginForm\\\" (ngSubmit)=\\\"openUpdateDetailsModal(updateDetailsLoginForm.value)\\\">\\r\\n                <ion-grid style=\\\"margin-top: 10px;\\\">\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Email Address</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"email\\\" clearInput placeholder=\\\"Enter Email Address\\\" formControlName=\\\"emailAddress\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Password</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"password\\\" clearInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row style=\\\"margin-top: 20px;\\\">\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"block\\\" style=\\\"height: 50px;\\\" type=\\\"submit\\\" [disabled]=\\\"!updateDetailsLoginForm.valid\\\"> \\r\\n                        <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          VERIFY\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- Update Password Login Credentials Form -->\\r\\n            <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                              left: 90%;\\r\\n                                              top: 30px;\\r\\n                                              transform: translateX(-10%);\\\" (click)=\\\"openUpdatePasswordLoginForm()\\\" *ngIf=\\\"closeUpdatePasswordLoginFormButton\\\">\\r\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        margin: 30px;\\r\\n                        padding: 20px;\\\" *ngIf=\\\"updatePasswordLoginFormSection\\\">\\r\\n              <ion-label style=\\\"font-size: 18px;\\\">\\r\\n                Enter Login Credentials\\r\\n              </ion-label>\\r\\n\\r\\n              <form [formGroup]=\\\"updatePasswordLoginForm\\\" (ngSubmit)=\\\"openUpdatePasswordModal(updatePasswordLoginForm.value)\\\">\\r\\n                <ion-grid style=\\\"margin-top: 10px;\\\">\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Email Address</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"email\\\" clearInput placeholder=\\\"Enter Email Address\\\" formControlName=\\\"emailAddress\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Password</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"password\\\" clearInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row style=\\\"margin-top: 20px;\\\">\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"block\\\" style=\\\"height: 50px;\\\" type=\\\"submit\\\" [disabled]=\\\"!updatePasswordLoginForm.valid\\\"> \\r\\n                        <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          VERIFY\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              ABOUT\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-card id=\\\"aboutCardStyle\\\">\\r\\n              <ion-card-header>\\r\\n                  <ion-avatar style=\\\"position: absolute;\\r\\n                                    top: 20px;\\r\\n                                    left: 50%;\\r\\n                                    transform: translateX(-50%);\\r\\n                                    background-color: white;\\r\\n                                    width: 100px;\\r\\n                                    height: 100px;\\\">\\r\\n                    <img src=\\\"assets/images/RPLS_Logo.png\\\">\\r\\n                  </ion-avatar>\\r\\n                </ion-card-header>   \\r\\n                <ion-card-content style=\\\"margin-top: 100px;\\\"> \\r\\n                  <h2 style=\\\"text-align: center;\\r\\n                            color: black;\\\">iSAM Platform built by University of Plymouth Second Year students <br> \\r\\n                              following BSc(Hons) Software Engineering Degree</h2><br>\\r\\n                  <h2 style=\\\"text-align: center;\\r\\n                            color: black;\\\">Assignment Title: Coursework PUSL2008 - Intorduction to Internet of Things</h2>\\r\\n                </ion-card-content>     \\r\\n            </ion-card>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingsPage } from './settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SettingsPageRoutingModule } from './settings-routing.module';\r\n\r\nimport { SettingsPage } from './settings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SettingsPageRoutingModule\r\n  ],\r\n  declarations: [SettingsPage]\r\n})\r\nexport class SettingsPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243);\\n}\\n\\nion-card {\\n  --ion-background-color: white;\\n}\\n\\nion-label {\\n  color: black;\\n}\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px;\\n}\\n\\n#aboutCardStyle {\\n  min-height: 250px;\\n  --ion-background-color: rgb(235, 235, 235);\\n}\\n\\n.settingsAddFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL3NldHRpbmdzL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcc2V0dGluZ3NcXHNldHRpbmdzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb2ZmaWNlL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUFBO0FDQ0o7O0FERUE7RUFDSSw2QkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksaUJBQUE7RUFDQSwwQ0FBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvb2ZmaWNlL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tbGFiZWx7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG4gICAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuI2Fib3V0Q2FyZFN0eWxle1xyXG4gICAgbWluLWhlaWdodDogMjUwcHg7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbn1cclxuXHJcbi5zZXR0aW5nc0FkZEZvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufSIsImlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xufVxuXG5pb24tY2FyZCB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG5pb24tbGFiZWwge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbmlvbi1pdGVtIHtcbiAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4jYWJvdXRDYXJkU3R5bGUge1xuICBtaW4taGVpZ2h0OiAyNTBweDtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNSwgMjM1LCAyMzUpO1xufVxuXG4uc2V0dGluZ3NBZGRGb3JtTGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMTVweDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { AlertController, PopoverController, ModalController } from '@ionic/angular';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\nimport { UpdateAccountDetailsModalPage } from './update-account-details-modal/update-account-details-modal.page';\r\nimport { UpdateAccountPasswordModalPage } from './update-account-password-modal/update-account-password-modal.page';\r\nimport { EditLectureSessionModalPage } from '../semester-calendar/edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { EditDegreeProgramModalPage } from './editModals/edit-degree-program-modal/edit-degree-program-modal.page';\r\nimport { EditBatchModalPage } from './editModals/edit-batch-modal/edit-batch-modal.page';\r\nimport { EditCreditWeightingModalPage } from './editModals/edit-credit-weighting-modal/edit-credit-weighting-modal.page';\r\nimport { EditLectureHallModalPage } from './editModals/edit-lecture-hall-modal/edit-lecture-hall-modal.page';\r\nimport { EditLectureSessionStatusModalPage } from './editModals/edit-lecture-session-status-modal/edit-lecture-session-status-modal.page';\r\nimport { EditNoticeCategoryModalPage } from './editModals/edit-notice-category-modal/edit-notice-category-modal.page';\r\nimport { EditUserAccountStatusModalPage } from './editModals/edit-user-account-status-modal/edit-user-account-status-modal.page';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.page.html',\r\n  styleUrls: ['./settings.page.scss'],\r\n})\r\nexport class SettingsPage implements OnInit {\r\n\r\n  /* Add Form Sections */\r\n  addDegreeProgramFormSection: Boolean = false;\r\n  addBatchFormSection: Boolean = false;\r\n  addCreditWeightingFormSection: Boolean = false;\r\n  addLectureHallFormSection: Boolean = false;\r\n  addLectureSessionStatusFormSection: Boolean = false;\r\n  addUserAccountStatusFormSection: Boolean = false;\r\n  addNoticeCategoryFormSection: Boolean = false;\r\n  updateDetailsLoginFormSection: Boolean = false;\r\n  updatePasswordLoginFormSection: Boolean = false;\r\n\r\n  /* Add Buttons */\r\n  addDegreeProgramButton: Boolean = true;\r\n  addBatchButton: Boolean = true;\r\n  addCreditWeightingButton: Boolean = true;\r\n  addLectureHallButton: Boolean = true;\r\n  addLectureSessionStatusButton: Boolean = true;\r\n  addUserAccountStatusButton: Boolean = true;\r\n  addNoticeCategoryButton: Boolean = true;\r\n\r\n  /* Close Form Buttons */\r\n  closeDegreeProgramFormButton: Boolean = false;\r\n  closeBatchFormButton: Boolean = false;\r\n  closeCreditWeightingFormButton: Boolean = false;\r\n  closeLectureHallFormButton: Boolean = false;\r\n  closeLectureSessionStatusFormButton: Boolean = false;\r\n  closeUserAccountStatusFormButton: Boolean = false;\r\n  closeNoticeCategoryFormButton: Boolean = false;\r\n  closeUpdateDetailsLoginFormButton: Boolean = false;\r\n  closeUpdatePasswordLoginFormButton: Boolean = false;\r\n\r\n  /* Loading Spinners */\r\n  loadingSpinnerDegreeProgram: Boolean = true;\r\n  loadingSpinnerBatch: Boolean = true;\r\n  loadingSpinnerCreditWeighting: Boolean = true;\r\n  loadingSpinnerLectureHall: Boolean = true;\r\n  loadingSpinnerLectureSessionStatus: Boolean = true;\r\n  loadingSpinnerUserAccountStatus: Boolean = true;\r\n  loadingSpinnerNoticeCategory: Boolean = true;\r\n\r\n  /* Add FormGroups */\r\n  addDegreeProgramForm: FormGroup;\r\n  addBatchForm: FormGroup;\r\n  addCreditWeightingForm: FormGroup;\r\n  addLectureHallForm: FormGroup;\r\n  addLectureSessionStatusForm: FormGroup;\r\n  addUserAccountStatusForm: FormGroup;\r\n  addNoticeCategoryForm: FormGroup;\r\n  updateDetailsLoginForm: FormGroup;\r\n  updatePasswordLoginForm: FormGroup;\r\n\r\n  awardingBodyUniversity;\r\n\r\n  constructor(\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private settingsService: FirebaseService,\r\n    private alertController: AlertController,\r\n    private formBuilder: FormBuilder,\r\n    private popoverController: PopoverController,\r\n    private modalController: ModalController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrievePublishedDegreeProgram();\r\n\r\n    this.retrievePublishedModuleCreditsWeighting();\r\n\r\n    this.retrievePublishedLectureHalls();\r\n\r\n    this.retrievePublishedLectureSessionStatuses();\r\n\r\n    this.retrievePublishedUserStatuses();\r\n\r\n    this.retrievePublishedNoticeCategories();\r\n\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n\r\n    /* FormControls */\r\n    this.addDegreeProgramForm = this.formBuilder.group({\r\n      degreeCode: new FormControl('', Validators.required),\r\n      degree: new FormControl('', Validators.required),\r\n      awardingBodyUniversity: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required),\r\n      programDelivery: new FormControl('', Validators.required),\r\n      programCoordinator: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addBatchForm = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addCreditWeightingForm = this.formBuilder.group({\r\n      creditWeighting: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addLectureHallForm = this.formBuilder.group({\r\n      lectureHall: new FormControl('', Validators.required),\r\n      level: new FormControl('', Validators.required),\r\n      approximateNoOfSeatsAvailable: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addLectureSessionStatusForm = this.formBuilder.group({\r\n      status: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addUserAccountStatusForm = this.formBuilder.group({\r\n      status: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addNoticeCategoryForm = this.formBuilder.group({\r\n      category: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.updateDetailsLoginForm = this.formBuilder.group({\r\n      emailAddress: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9]+[!@#$%^&*]?'),\r\n        Validators.minLength(10)\r\n      ]))\r\n    });\r\n\r\n    this.updatePasswordLoginForm = this.formBuilder.group({\r\n      emailAddress: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9]+[!@#$%^&*]?'),\r\n        Validators.minLength(10)\r\n      ]))\r\n    });\r\n  }\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n  // Retrieving published degree programs and their details from the firestore database\r\n  publishedDegreePrograms;\r\n  retrievePublishedDegreeProgram = () => \r\n    this.settingsService.retrievePublishedDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerDegreeProgram = false;\r\n      this.publishedDegreePrograms = response;\r\n    });\r\n\r\n  // Retrieving published batches and their details from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => \r\n    this.settingsService.retrievePublishedBatch(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerBatch = false;\r\n      this.publishedBatches = response;\r\n    });\r\n  \r\n  // Retrieving published no of credit weightings and their details from the firestore database\r\n  publishedNoOfCreditWeightings;\r\n  retrievePublishedModuleCreditsWeighting = () => \r\n    this.settingsService.retrievePublishedModuleCreditsWeighting().subscribe(response => {\r\n      this.loadingSpinnerCreditWeighting = false;\r\n      this.publishedNoOfCreditWeightings = response;\r\n    });\r\n\r\n  // Retrieving published lecture halls and their details from the firestore database\r\n  publishedLectureHalls;\r\n  retrievePublishedLectureHalls = () => \r\n    this.settingsService.retrievePublishedLectureHalls(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerLectureHall = false;\r\n      this.publishedLectureHalls = response;\r\n    });\r\n\r\n  // Retrieving published lecture session statuses and their details from the firestore database\r\n  publishedLectureSessionStatuses;\r\n  retrievePublishedLectureSessionStatuses = () =>\r\n    this.settingsService.retrievePublishedLectureSessionStatuses().subscribe(response => {\r\n      this.loadingSpinnerLectureSessionStatus = false;\r\n      this.publishedLectureSessionStatuses = response;\r\n    });\r\n\r\n  // Retrieving published user statuses and their details from the firestore database\r\n  publishedUserStatuses;\r\n  retrievePublishedUserStatuses = () =>\r\n    this.settingsService.retrievePublishedUserStatuses().subscribe(response => {\r\n      this.loadingSpinnerUserAccountStatus = false;\r\n      this.publishedUserStatuses = response;\r\n    });\r\n\r\n  // Retrieving published notice categories and their details from the firestore database\r\n  publishedNoticeCategory;\r\n  retrievePublishedNoticeCategories = () =>\r\n    this.settingsService.retrievePublishedNoticeCategories().subscribe(response => {\r\n      this.loadingSpinnerNoticeCategory = false;\r\n      this.publishedNoticeCategory = response;\r\n    });\r\n\r\n\r\n  // Retrieving registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () =>\r\n    this.settingsService.retrieveRegisteredLecturers().subscribe(response => {\r\n      this.registeredLecturers = response;\r\n    });\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n  /* Functions handling show add section and hide add section */\r\n  openAddDegreeProgramForm(){\r\n    if(this.addDegreeProgramButton == true){\r\n      this.addDegreeProgramButton = false;\r\n      this.closeDegreeProgramFormButton = true;\r\n      this.addDegreeProgramFormSection = true;\r\n    }\r\n    else if(this.addDegreeProgramButton == false){\r\n      this.addDegreeProgramForm.reset();\r\n      this.addDegreeProgramButton = true;\r\n      this.closeDegreeProgramFormButton = false;\r\n      this.addDegreeProgramFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddBatchForm(){\r\n    if(this.addBatchButton == true){\r\n      this.addBatchButton = false;\r\n      this.closeBatchFormButton = true;\r\n      this.addBatchFormSection = true;\r\n    }\r\n    else if(this.addBatchButton == false){\r\n      this.addBatchForm.reset();\r\n      this.addBatchButton = true;\r\n      this.closeBatchFormButton = false;\r\n      this.addBatchFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddCreditWeightingForm(){\r\n    if(this.addCreditWeightingButton == true){\r\n      this.addCreditWeightingButton = false;\r\n      this.closeCreditWeightingFormButton = true;\r\n      this.addCreditWeightingFormSection = true;\r\n    }\r\n    else if(this.addCreditWeightingButton == false){\r\n      this.addCreditWeightingForm.reset();\r\n      this.addCreditWeightingButton = true;\r\n      this.closeCreditWeightingFormButton = false;\r\n      this.addCreditWeightingFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddLectureHallForm(){\r\n    if(this.addLectureHallButton == true){\r\n      this.addLectureHallButton = false;\r\n      this.closeLectureHallFormButton = true;\r\n      this.addLectureHallFormSection = true;\r\n    }\r\n    else if(this.addLectureHallButton == false){\r\n      this.addLectureHallForm.reset();\r\n      this.addLectureHallButton = true;\r\n      this.closeLectureHallFormButton = false;\r\n      this.addLectureHallFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddLectureSessionStatusForm(){\r\n    if(this.addLectureSessionStatusButton == true){\r\n      this.addLectureSessionStatusButton = false;\r\n      this.closeLectureSessionStatusFormButton = true;\r\n      this.addLectureSessionStatusFormSection = true;\r\n    }\r\n    else if(this.addLectureSessionStatusButton == false){\r\n      this.addLectureSessionStatusForm.reset();\r\n      this.addLectureSessionStatusButton = true;\r\n      this.closeLectureSessionStatusFormButton = false;\r\n      this.addLectureSessionStatusFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddUserAccountStatusForm(){\r\n    if(this.addUserAccountStatusButton == true){\r\n      this.addUserAccountStatusButton = false;\r\n      this.closeUserAccountStatusFormButton = true;\r\n      this.addUserAccountStatusFormSection = true;\r\n    }\r\n    else if(this.addUserAccountStatusButton == false){\r\n      this.addUserAccountStatusForm.reset();\r\n      this.addUserAccountStatusButton = true;\r\n      this.closeUserAccountStatusFormButton = false;\r\n      this.addUserAccountStatusFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddNoticeCategoryForm(){\r\n    if(this.addNoticeCategoryButton == true){\r\n      this.addNoticeCategoryButton = false;\r\n      this.closeNoticeCategoryFormButton = true;\r\n      this.addNoticeCategoryFormSection = true;\r\n    }\r\n    else if(this.addNoticeCategoryButton == false){\r\n      this.addNoticeCategoryForm.reset();\r\n      this.addNoticeCategoryButton = true;\r\n      this.closeNoticeCategoryFormButton = false;\r\n      this.addNoticeCategoryFormSection = false;\r\n    }\r\n  }\r\n\r\n  openUpdateDetailsLoginForm(){\r\n    if(this.updatePasswordLoginFormSection == true){\r\n      this.updatePasswordLoginFormSection = false;\r\n      this.closeUpdatePasswordLoginFormButton = false;\r\n\r\n      // Resetting update account password form\r\n      this.updatePasswordLoginForm.reset();\r\n\r\n      this.updateDetailsLoginFormSection = true;\r\n      this.closeUpdateDetailsLoginFormButton = true;\r\n    }\r\n    else if(this.updateDetailsLoginFormSection == false){\r\n      this.updateDetailsLoginFormSection = true;\r\n      this.closeUpdateDetailsLoginFormButton = true;\r\n    }\r\n    else if(this.updateDetailsLoginFormSection == true){\r\n      this.updateDetailsLoginFormSection = false;\r\n      this.closeUpdateDetailsLoginFormButton = false;\r\n\r\n      // Resetting update account details form\r\n      this.updateDetailsLoginForm.reset();\r\n    }\r\n  }\r\n\r\n  openUpdatePasswordLoginForm(){\r\n    if(this.updateDetailsLoginFormSection == true){\r\n      this.updateDetailsLoginFormSection = false;\r\n      this.closeUpdateDetailsLoginFormButton = false;\r\n\r\n      // Resetting update account details form\r\n      this.updateDetailsLoginForm.reset();\r\n\r\n      this.updatePasswordLoginFormSection = true;\r\n      this.closeUpdatePasswordLoginFormButton = true;\r\n    }\r\n    else if(this.updatePasswordLoginFormSection == false){\r\n      this.updatePasswordLoginFormSection = true;\r\n      this.closeUpdatePasswordLoginFormButton = true;\r\n    }\r\n    else if (this.updatePasswordLoginFormSection == true){\r\n      this.updatePasswordLoginFormSection = false;\r\n      this.closeUpdatePasswordLoginFormButton = false;\r\n\r\n      // Resetting update account password form\r\n      this.updatePasswordLoginForm.reset();\r\n    }\r\n  }\r\n\r\n\r\n  // Update account details modal calling, opening modal\r\n  async updateAccountDetailsModal(){\r\n    const updateAccountDetailsModal = await this.modalController.create({\r\n      component: UpdateAccountDetailsModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    updateAccountDetailsModal.present();\r\n  }\r\n\r\n\r\n  // Process of verifying entered credentials and opening update user account details modal\r\n  openUpdateDetailsModal(value){\r\n\r\n    // Verifying entered login credentials\r\n    this.settingsService.verifyLoginCredentials(value).then(async response => {\r\n      \r\n      // Opening update account details modal\r\n      this.updateAccountDetailsModal();\r\n\r\n\r\n    }, error => {\r\n      console.log(\"Error during login credential verification: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // Update account password modal calling, opening modal\r\n  async updateAccountPasswordModal(){\r\n    const updateAccountPasswordModal = await this.modalController.create({\r\n      component: UpdateAccountPasswordModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    updateAccountPasswordModal.present();\r\n  }\r\n\r\n\r\n  // Process of verifying entered credentials and opening update user account password modal\r\n  openUpdatePasswordModal(value){\r\n\r\n    // Verifying entered login credentials\r\n    this.settingsService.verifyLoginCredentials(value).then(async response => {\r\n      \r\n      // Opening update account password modal\r\n      this.updateAccountPasswordModal();\r\n\r\n    }, error => {\r\n      console.log(\"Error during login credential verification: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  publishedAwardingBodyUniversityOfDegree;\r\n\r\n  // Retrieving the awardingBodyUniversity for the selected degree\r\n  getAwardingBodyUniversity(event){\r\n    let selectedDegree = event.detail.value;\r\n    console.log(selectedDegree);\r\n\r\n    // Retrieving the awardingBody University of the selected degree\r\n    this.settingsService.retrievingAwardingBodyUniversityOfDegree(selectedDegree, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedAwardingBodyUniversityOfDegree =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.awardingBodyUniversity = firestoreDoc.awardingBodyUniversity;\r\n        console.log(this.awardingBodyUniversity);\r\n      })\r\n    ));\r\n  \r\n    \r\n  }\r\n\r\n\r\n  /* Functions of calling serive functions and the values to firestore */\r\n  // Process of adding a new degree program\r\n  doAddDegreeProgram(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewDegreeProgram(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n    this.alertNotice(\"Degree Program Added\", \"New degree program has been added.\");\r\n\r\n    this.addDegreeProgramForm.reset();\r\n\r\n    if(this.addDegreeProgramButton == false){\r\n      this.addDegreeProgramForm.reset();\r\n      this.addDegreeProgramButton = true;\r\n      this.closeDegreeProgramFormButton = false;\r\n      this.addDegreeProgramFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new batch\r\n  doAddBatch(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewBatch(value, this.awardingBodyUniversity, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n  \r\n    this.alertNotice(\"Batch Added\", \"New batch has been added.\");\r\n\r\n    this.addBatchForm.reset();\r\n\r\n    if(this.addBatchButton == false){\r\n      this.addBatchForm.reset();\r\n      this.addBatchButton = true;\r\n      this.closeBatchFormButton = false;\r\n      this.addBatchFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new credit weighting\r\n  doAddCreditWeighting(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewCreditWeighting(value);\r\n\r\n    this.alertNotice(\"Credit Weighting Added\", \"New credit weighting has been added.\");\r\n\r\n    this.addCreditWeightingForm.reset();\r\n\r\n    if(this.addCreditWeightingButton == false){\r\n      this.addCreditWeightingForm.reset();\r\n      this.addCreditWeightingButton = true;\r\n      this.closeCreditWeightingFormButton = false;\r\n      this.addCreditWeightingFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new lecture hall\r\n  doAddLectureHall(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewLectureHall(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n    this.alertNotice(\"Lecture Hall Added\", \"New lecture hall has been added.\");\r\n\r\n    this.addLectureHallForm.reset();\r\n\r\n    if(this.addLectureHallButton == false){\r\n      this.addLectureHallForm.reset();\r\n      this.addLectureHallButton = true;\r\n      this.closeLectureHallFormButton = false;\r\n      this.addLectureHallFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new lecture session status\r\n  doAddLectureSessionStatus(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewLectureSessionStatus(value);\r\n\r\n    this.alertNotice(\"Lecture Session Status Added\", \"New lecture session status has been added.\");\r\n\r\n    this.addLectureSessionStatusForm.reset();\r\n\r\n    if(this.addLectureSessionStatusButton == false){\r\n      this.addLectureSessionStatusForm.reset();\r\n      this.addLectureSessionStatusButton = true;\r\n      this.closeLectureSessionStatusFormButton = false;\r\n      this.addLectureSessionStatusFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new user account status\r\n  doAddUserAccountStatus(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewUserAccountStatus(value);\r\n\r\n    this.alertNotice(\"User Account Status Added\", \"New user account status has been added.\");\r\n\r\n    this.addUserAccountStatusForm.reset();\r\n\r\n    if(this.addUserAccountStatusButton == false){\r\n      this.addUserAccountStatusForm.reset();\r\n      this.addUserAccountStatusButton = true;\r\n      this.closeUserAccountStatusFormButton = false;\r\n      this.addUserAccountStatusFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a notice category\r\n  doAddNoticeCategory(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewNoticeCategory(value);\r\n\r\n    this.alertNotice(\"Notice Category Added\", \"New notice category has been added.\");\r\n\r\n    this.addNoticeCategoryForm.reset();\r\n\r\n    if(this.addNoticeCategoryButton == false){\r\n      this.addNoticeCategoryForm.reset();\r\n      this.addNoticeCategoryButton = true;\r\n      this.closeNoticeCategoryFormButton = false;\r\n      this.addNoticeCategoryFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /* Remove confirm boxes and process of removing */\r\n  // Confirm Box Implementation (Process of removing a degree program)\r\n  async removeDegreeProgram ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Degree Program Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Degree Program Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove degree program\r\n            this.settingsService.removeDegreeProgram(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Degree Program has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a batch)\r\n  async removeBatch ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Batch Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Batch Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove batch\r\n            this.settingsService.removeBatch(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Batch has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a credit weighting)\r\n  async removeCreditWeighting ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Credit Weighting Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Credit Weighting Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove credit weightng\r\n            this.settingsService.removeCreditWeighting(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Credit Weighting has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a lecture hall)\r\n  async removeLectureHall ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Hall Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Hall Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove lecture hall\r\n            this.settingsService.removeLectureHall(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Lecture hall has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a lecture session status)\r\n  async removeLectureSessionStatus ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Status Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Status Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove lecture session status\r\n            this.settingsService.removeLectureSessionStatus(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Lecture session status has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a user account status)\r\n  async removeUserAccountStatus ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove User Account Status Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove User Account Status Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove user account status\r\n            this.settingsService.removeUserAccountStatus(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"User account status has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a notice category)\r\n  async removeNoticeCategory ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Notice Category Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Notice Category Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove notice category\r\n            this.settingsService.removeNoticeCategory(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Notice category has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n  /* Opening Edit Modals */\r\n  // Edit degree program modal calling, opening modal\r\n  async openEditDegreeProgramModal(value){\r\n    console.log(value);\r\n\r\n    const editDegreeProgramModal = await this.modalController.create({\r\n      component: EditDegreeProgramModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editDegreeProgramModal.present();\r\n  }\r\n\r\n  // Edit batch modal calling, opening modal\r\n  async openEditBatchModal(value){\r\n    console.log(value);\r\n\r\n    const editBatchModal = await this.modalController.create({\r\n      component: EditBatchModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editBatchModal.present();\r\n  }\r\n\r\n  // Edit credit weighting modal calling, opening modal\r\n  async openEditCreditWeightingModal(value){\r\n    console.log(value);\r\n\r\n    const editCreditWeightingModal = await this.modalController.create({\r\n      component: EditCreditWeightingModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editCreditWeightingModal.present();\r\n  }\r\n\r\n  // Edit lecture hall modal calling, opening modal\r\n  async openEditLectureHallModal(value){\r\n    console.log(value);\r\n\r\n    const editLectureHallModal = await this.modalController.create({\r\n      component: EditLectureHallModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureHallModal.present();\r\n  }\r\n\r\n  // Edit lecture session status modal calling, opening modal\r\n  async openEditLectureSessionStatusModal(value){\r\n    console.log(value);\r\n\r\n    const editLectureSessionStatusModal = await this.modalController.create({\r\n      component: EditLectureSessionStatusModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionStatusModal.present();\r\n  }\r\n\r\n  // Edit user account status modal calling, opening modal\r\n  async openEditUserAccountStatusModal(value){\r\n    console.log(value);\r\n\r\n    const editUserAccountStatusModal = await this.modalController.create({\r\n      component: EditUserAccountStatusModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editUserAccountStatusModal.present();\r\n  }\r\n\r\n  // Edit notice category modal calling, opening modal\r\n  async openEditNoticeCategoryModal(value){\r\n    console.log(value);\r\n\r\n    const editNoticeCategoryModal = await this.modalController.create({\r\n      component: EditNoticeCategoryModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editNoticeCategoryModal.present();\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}