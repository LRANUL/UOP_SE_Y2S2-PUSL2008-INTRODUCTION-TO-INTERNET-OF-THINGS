{"version":3,"sources":["src/app/office/settings/settings.page.html","src/app/office/settings/settings-routing.module.ts","src/app/office/settings/settings.module.ts","src/app/office/settings/settings.page.scss","src/app/office/settings/settings.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header style=\\\"height: 6%;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Settings</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                  width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Academic Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Degree Programs\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"width: 850px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Degree Code</th>\\r\\n                              <th>Degree Program</th>\\r\\n                              <th>No Of Years</th>\\r\\n                              <th>No Of Semesters Annually</th>\\r\\n                              <th>Program Delivery</th>\\r\\n                              <th>Program Coordinator</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedDegreePrograms\\\">\\r\\n                              <td>{{ item.payload.doc.data().degreeCode }}</td>\\r\\n                              <td>{{ item.payload.doc.data().degree }},<br> {{ item.payload.doc.data().awardingBodyUniversity }}</td>\\r\\n                              <td>{{ item.payload.doc.data().deliveryNoOfYears }}</td>\\r\\n                              <td>{{ item.payload.doc.data().deliveryNoOfSemestersAnnually }}</td>\\r\\n                              <td>{{ item.payload.doc.data().programDelivery }}</td>\\r\\n                              <td>{{ item.payload.doc.data().programCoordinator }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditDegreeProgramModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\" \\r\\n                                        (click)=\\\"removeDegreeProgram('Confirmation Required', 'This degree program will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                        \\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerDegreeProgram\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddDegreeProgramForm()\\\" *ngIf=\\\"addDegreeProgramButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddDegreeProgramForm()\\\" *ngIf=\\\"closeDegreeProgramFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addDegreeProgramFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Degree Program\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addDegreeProgramForm\\\" (ngSubmit)=\\\"doAddDegreeProgram(addDegreeProgramForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Code\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Code\\\" formControlName=\\\"degreeCode\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Program\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-textarea rows=\\\"3\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Degree\\\" formControlName=\\\"degree\\\"></ion-textarea>\\r\\n                                      </ion-item> \\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-textarea rows=\\\"3\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Awarding Body University\\\" formControlName=\\\"awardingBodyUniversity\\\"></ion-textarea>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Academic Period\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select No of Years\\\" formControlName=\\\"academicPeriodYear\\\">\\r\\n                                          <ion-select-option value=\\\"1\\\">1 Year</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"2\\\">2 Years</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"3\\\">3 Years</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"4\\\">4 Years</ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select No of Semesters Annually\\\" formControlName=\\\"academicPeriodSemester\\\">\\r\\n                                          <ion-select-option value=\\\"1\\\">1 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"2\\\">2 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"3\\\">3 Semesters</ion-select-option>\\r\\n                                          <ion-select-option value=\\\"4\\\">4 Semesters</ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Program Delivery \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Delivery\\\" formControlName=\\\"programDelivery\\\">\\r\\n                                      <ion-select-option value=\\\"Part-Time\\\">Part-Time Delivery</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Ful-Time\\\">Full-Time Delivery</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Program Coordinattor \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Coordinator\\\" formControlName=\\\"programCoordinator\\\">\\r\\n                                      <ion-select-option *ngFor=\\\"let item of registeredLecturers\\\" \\r\\n                                        value=\\\"\\r\\n                                          {{ item.payload.doc.data().name.prefix }}\\r\\n                                          {{ item.payload.doc.data().name.firstName }}\\r\\n                                          {{ item.payload.doc.data().name.middleName }}\\r\\n                                          {{ item.payload.doc.data().name.lastName }}\\r\\n                                        \\\">\\r\\n                                        {{ item.payload.doc.data().name.prefix }}\\r\\n                                        {{ item.payload.doc.data().name.firstName }}\\r\\n                                        {{ item.payload.doc.data().name.middleName }}\\r\\n                                        {{ item.payload.doc.data().name.lastName }}\\r\\n                                      </ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addDegreeProgramForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Batches\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Batch</th>\\r\\n                              <th>Degree Program</th>\\r\\n                              <th>Status</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedBatches\\\">\\r\\n                              <td>{{ item.payload.doc.data().batch }}</td>\\r\\n                              <td>{{ item.payload.doc.data().degree }},<br> {{ item.payload.doc.data().awardingBodyUniversity }}</td>\\r\\n                              <td>{{ item.payload.doc.data().batchStatus }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditBatchModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeBatch('Confirmation Required', 'This batch will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerBatch\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddBatchForm()\\\" *ngIf=\\\"addBatchButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddBatchForm()\\\" *ngIf=\\\"closeBatchFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addBatchFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Batch\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addBatchForm\\\" (ngSubmit)=\\\"doAddBatch(addBatchForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Batch\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" placeholder=\\\"Enter Batch\\\" formControlName=\\\"batch\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Degree Program\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-item>\\r\\n                                        <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Degree Program\\\" (ionChange)=\\\"getAwardingBodyUniversity($event)\\\" formControlName=\\\"degreeProgram\\\">\\r\\n                                          <ion-select-option *ngFor=\\\"let item of publishedDegreePrograms\\\" \\r\\n                                            value=\\\"{{ item.payload.doc.data().degree }}\\\">\\r\\n                                            {{ item.payload.doc.data().degree }}, {{ item.payload.doc.data().awardingBodyUniversity }}\\r\\n                                          </ion-select-option>\\r\\n                                        </ion-select>\\r\\n                                      </ion-item>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\">\\r\\n                                      <ion-select-option value=\\\"Pending\\\">Pending</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Active\\\">Active</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Graduated\\\">Graduated</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addBatchForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Credit Weightings\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 500px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Credit Weightings</th>\\r\\n                              <th>Description</th>\\r\\n                              <th>Status</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedNoOfCreditWeightings\\\">\\r\\n                              <td>{{ item.payload.doc.data().creditsWeighting }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditCreditWeightingModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeCreditWeighting('Confirmation Required', 'This credit weighting will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerCreditWeighting\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddCreditWeightingForm()\\\" *ngIf=\\\"addCreditWeightingButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddCreditWeightingForm()\\\" *ngIf=\\\"closeCreditWeightingFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addCreditWeightingFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Credit Weighting\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addCreditWeightingForm\\\" (ngSubmit)=\\\"doAddCreditWeighting(addCreditWeightingForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Credit Weighting\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"number\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter No of Credits\\\" formControlName=\\\"creditWeighting\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-select style=\\\"min-width: 100%;\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\">\\r\\n                                      <ion-select-option value=\\\"Pending\\\">Pending</ion-select-option>\\r\\n                                      <ion-select-option value=\\\"Active\\\">Active</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addCreditWeightingForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Lecture Halls\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 500px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Lecture Hall</th>\\r\\n                              <th>Level</th>\\r\\n                              <th>Approximate No Of Seats Available</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedLectureHalls\\\">\\r\\n                              <td>{{ item.payload.doc.data().lectureHall }}</td>\\r\\n                              <td>{{ item.payload.doc.data().level }}</td>\\r\\n                              <td>{{ item.payload.doc.data().approximateNoOfSeatsAvailable }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditLectureHallModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeLectureHall('Confirmation Required', 'This lecture hall will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerLectureHall\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddLectureHallForm()\\\" *ngIf=\\\"addLectureHallButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddLectureHallForm()\\\" *ngIf=\\\"closeLectureHallFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addLectureHallFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Lecture Hall\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addLectureHallForm\\\" (ngSubmit)=\\\"doAddLectureHall(addLectureHallForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Lecture Hall\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Lecture Hall\\\" formControlName=\\\"lectureHall\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Level\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Level\\\" formControlName=\\\"level\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Approximate No Of Seats Available \\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"number\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter No of Seats\\\" formControlName=\\\"approximateNoOfSeatsAvailable\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addLectureHallForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Status Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        Lecture Session Statuses\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Status</th>\\r\\n                              <th>Description</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedLectureSessionStatuses\\\">\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditLectureSessionStatusModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeLectureSessionStatus('Confirmation Required', 'This lecture session status will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerLectureSessionStatus\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 87%;\\r\\n                                                        transform: translateX(-13%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddLectureSessionStatusForm()\\\" *ngIf=\\\"addLectureSessionStatusButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddLectureSessionStatusForm()\\\" *ngIf=\\\"closeLectureSessionStatusFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addLectureSessionStatusFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add Lecture Session Status\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addLectureSessionStatusForm\\\" (ngSubmit)=\\\"doAddLectureSessionStatus(addLectureSessionStatusForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Status\\\" formControlName=\\\"status\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addLectureSessionStatusForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"6\\\">\\r\\n\\r\\n                  <ion-card>\\r\\n                    <ion-card-content>\\r\\n\\r\\n                      <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                        User Account Statuses\\r\\n                      </ion-label>\\r\\n\\r\\n                      <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  height: 460px;\\r\\n                                  overflow-y: scroll;\\\">\\r\\n\\r\\n                        <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Status</th>\\r\\n                              <th>Description</th>\\r\\n                              <th></th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of publishedUserStatuses\\\">\\r\\n                              <td>{{ item.payload.doc.data().status }}</td>\\r\\n                              <td>{{ item.payload.doc.data().description }}</td>\\r\\n                              <td>\\r\\n                                <ion-grid>\\r\\n                                  <ion-row>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditUserAccountStatusModal(item)\\\">\\r\\n                                        <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          EDIT\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                    <ion-col>\\r\\n                                      <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                        (click)=\\\"removeUserAccountStatus('Confirmation Required', 'This user account status will be removed, do you want to continue?', item)\\\">\\r\\n                                        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                        <ion-label style=\\\"color: white;\\r\\n                                                          margin-left: 5px;\\\">\\r\\n                                          REMOVE\\r\\n                                        </ion-label>\\r\\n                                      </ion-button>\\r\\n                                    </ion-col>\\r\\n                                  </ion-row>\\r\\n                                </ion-grid>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Loading Spinner -->\\r\\n                      <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                      left: 50%;\\r\\n                                                      top: 50%;\\r\\n                                                      transform: translate(-50%,-50%);\\r\\n                                                      margin-top: 20px;\\r\\n                                                      height: 100px;\\r\\n                                                      width: 100px;\\\" *ngIf=\\\"loadingSpinnerUserAccountStatus\\\"></ion-spinner>\\r\\n\\r\\n                      <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                        left: 85%;\\r\\n                                                        transform: translateX(-15%);\\r\\n                                                        width: 100px;\\\" (click)=\\\"openAddUserAccountStatusForm()\\\" *ngIf=\\\"addUserAccountStatusButton\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\\">\\r\\n                          ADD\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddUserAccountStatusForm()\\\" *ngIf=\\\"closeUserAccountStatusFormButton\\\">\\r\\n                        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                      </ion-button>\\r\\n\\r\\n                      <div *ngIf=\\\"addUserAccountStatusFormSection\\\">\\r\\n                        <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                          Add User Account Status\\r\\n                        </ion-label>\\r\\n                        <div style=\\\"margin-top: 5px;\\r\\n                                  border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  min-width: 100%;\\r\\n                                  padding-top: 10px;\\r\\n                                  padding: 25px;\\\">\\r\\n\\r\\n                          <form [formGroup]=\\\"addUserAccountStatusForm\\\" (ngSubmit)=\\\"doAddUserAccountStatus(addUserAccountStatusForm.value)\\\">\\r\\n\\r\\n                            <ion-grid>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Status\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Status\\\" formControlName=\\\"status\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"5\\\">\\r\\n                                  <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                                    Description\\r\\n                                  </ion-label>\\r\\n                                </ion-col>\\r\\n                                <ion-col size=\\\"7\\\">\\r\\n                                  <ion-item>\\r\\n                                    <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                                  </ion-item>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                              <ion-row>\\r\\n                                <ion-col size=\\\"12\\\">\\r\\n                                  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addUserAccountStatusForm.valid\\\">\\r\\n                                    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                                    <ion-label style=\\\"color: white;\\\">\\r\\n                                      ADD\\r\\n                                    </ion-label>\\r\\n                                  </ion-button>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n\\r\\n                          </form>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Notice Information\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-card>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                  Notice Categories\\r\\n                </ion-label>\\r\\n\\r\\n                <div style=\\\"margin-top: 5px;\\r\\n                            border: #ccc solid 1px;\\r\\n                            border-radius: 5px;\\r\\n                            min-width: 100%;\\r\\n                            height: 460px;\\r\\n                            overflow-y: scroll;\\\">\\r\\n\\r\\n                  <table class=\\\"table\\\" style=\\\"min-width: 300px;\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Category</th>\\r\\n                        <th>Description</th>\\r\\n                        <th></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of publishedNoticeCategory\\\">\\r\\n                        <td>{{ item.payload.doc.data().category }}</td>\\r\\n                        <td>{{ item.payload.doc.data().description }}</td>\\r\\n                        <td>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-button style=\\\"width: 120px;\\\" (click)=\\\"openEditNoticeCategoryModal(item)\\\">\\r\\n                                  <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    EDIT\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-button color=\\\"danger\\\" style=\\\"width: 120px;\\\"\\r\\n                                  (click)=\\\"removeNoticeCategory('Confirmation Required', 'This notice category will be removed, do you want to continue?', item)\\\">\\r\\n                                  <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                                  <ion-label style=\\\"color: white;\\r\\n                                                    margin-left: 5px;\\\">\\r\\n                                    REMOVE\\r\\n                                  </ion-label>\\r\\n                                </ion-button>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                top: 50%;\\r\\n                                                transform: translate(-50%,-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"loadingSpinnerNoticeCategory\\\"></ion-spinner>\\r\\n\\r\\n                <ion-button color=\\\"medium\\\" style=\\\"position: relative;\\r\\n                                                  left: 85%;\\r\\n                                                  transform: translateX(-15%);\\r\\n                                                  width: 100px;\\\" (click)=\\\"openAddNoticeCategoryForm()\\\" *ngIf=\\\"addNoticeCategoryButton\\\">\\r\\n                  <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                  <ion-label style=\\\"color: white;\\\">\\r\\n                    ADD\\r\\n                  </ion-label>\\r\\n                </ion-button>\\r\\n\\r\\n                <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                                        left: 90%;\\r\\n                                                        top: 20px;\\r\\n                                                        transform: translateX(-10%);\\\" (click)=\\\"openAddNoticeCategoryForm()\\\" *ngIf=\\\"closeNoticeCategoryFormButton\\\">\\r\\n                  <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n\\r\\n                \\r\\n                <div *ngIf=\\\"addNoticeCategoryFormSection\\\">\\r\\n                  <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                    Add Notice Category\\r\\n                  </ion-label>\\r\\n                  <div style=\\\"margin-top: 5px;\\r\\n                            border: #ccc solid 1px;\\r\\n                            border-radius: 5px;\\r\\n                            min-width: 100%;\\r\\n                            padding-top: 10px;\\r\\n                            padding: 25px;\\\">\\r\\n\\r\\n                    <form [formGroup]=\\\"addNoticeCategoryForm\\\" (ngSubmit)=\\\"doAddNoticeCategory(addNoticeCategoryForm.value)\\\">\\r\\n\\r\\n                      <ion-grid>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"5\\\">\\r\\n                            <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                              Category\\r\\n                            </ion-label>\\r\\n                          </ion-col>\\r\\n                          <ion-col size=\\\"7\\\">\\r\\n                            <ion-item>\\r\\n                              <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Category\\\" formControlName=\\\"category\\\"></ion-input>\\r\\n                            </ion-item>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"5\\\">\\r\\n                            <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                              Description\\r\\n                            </ion-label>\\r\\n                          </ion-col>\\r\\n                          <ion-col size=\\\"7\\\">\\r\\n                            <ion-item>\\r\\n                              <ion-input type=\\\"text\\\" style=\\\"min-width: 100%;\\\" clearInput placeholder=\\\"Enter Description\\\" formControlName=\\\"description\\\"></ion-input>\\r\\n                            </ion-item>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                          <ion-col size=\\\"12\\\">\\r\\n                            <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!addNoticeCategoryForm.valid\\\">\\r\\n                              <ion-icon name=\\\"add-circle-outline\\\" style=\\\"margin-right: 5px;\\\"></ion-icon>\\r\\n                              <ion-label style=\\\"color: white;\\\">\\r\\n                                ADD\\r\\n                              </ion-label>\\r\\n                            </ion-button>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n           \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              Change Account Details\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-button color=\\\"medium\\\" expand=\\\"block\\\" style=\\\"height: 50px;\\\" (click)=\\\"openUpdateDetailsLoginForm()\\\">\\r\\n                    Update Details\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button color=\\\"medium\\\" expand=\\\"block\\\" style=\\\"height: 50px;\\\" (click)=\\\"openUpdatePasswordLoginForm()\\\">\\r\\n                    Update Password\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <!-- Update Details Login Credentials Form -->\\r\\n            <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                              left: 5%;\\r\\n                                              top: 30px;\\r\\n                                              transform: translateX(-10%);\\\" (click)=\\\"openUpdateDetailsLoginForm()\\\" *ngIf=\\\"closeUpdateDetailsLoginFormButton\\\">\\r\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        margin: 30px;\\r\\n                        padding: 20px;\\\" *ngIf=\\\"updateDetailsLoginFormSection\\\">\\r\\n              <ion-label style=\\\"font-size: 18px;\\\">\\r\\n                Enter Login Credentials\\r\\n              </ion-label>\\r\\n\\r\\n              <form [formGroup]=\\\"updateDetailsLoginForm\\\" (ngSubmit)=\\\"doUpdateDetails(updateDetailsLoginForm.value)\\\">\\r\\n                <ion-grid style=\\\"margin-top: 10px;\\\">\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Email Address</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"email\\\" clearInput placeholder=\\\"Enter Email Address\\\" formControlName=\\\"emailAddress\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Password</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"password\\\" clearInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row style=\\\"margin-top: 20px;\\\">\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"block\\\" style=\\\"height: 50px;\\\" type=\\\"submit\\\" [disabled]=\\\"!updateDetailsLoginForm.valid\\\"> \\r\\n                        <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          VERIFY\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- Update Password Login Credentials Form -->\\r\\n            <ion-button color=\\\"danger\\\" style=\\\"position: relative;\\r\\n                                              left: 90%;\\r\\n                                              top: 30px;\\r\\n                                              transform: translateX(-10%);\\\" (click)=\\\"openUpdatePasswordLoginForm()\\\" *ngIf=\\\"closeUpdatePasswordLoginFormButton\\\">\\r\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        margin: 30px;\\r\\n                        padding: 20px;\\\" *ngIf=\\\"updatePasswordLoginFormSection\\\">\\r\\n              <ion-label style=\\\"font-size: 18px;\\\">\\r\\n                Enter Login Credentials\\r\\n              </ion-label>\\r\\n\\r\\n              <form [formGroup]=\\\"updatePasswordLoginForm\\\" (ngSubmit)=\\\"doUpdatePassword(updatePasswordLoginForm.value)\\\">\\r\\n                <ion-grid style=\\\"margin-top: 10px;\\\">\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Email Address</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"email\\\" clearInput placeholder=\\\"Enter Email Address\\\" formControlName=\\\"emailAddress\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-label class=\\\"settingsAddFormLabel\\\">\\r\\n                        <b>Password</b>\\r\\n                      </ion-label>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-input type=\\\"password\\\" clearInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row style=\\\"margin-top: 20px;\\\">\\r\\n                    <ion-col>\\r\\n                      <ion-button expand=\\\"block\\\" style=\\\"height: 50px;\\\" type=\\\"submit\\\" [disabled]=\\\"!updatePasswordLoginForm.valid\\\"> \\r\\n                        <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon>\\r\\n                        <ion-label style=\\\"color: white;\\r\\n                                          margin-left: 5px;\\\">\\r\\n                          VERIFY\\r\\n                        </ion-label>\\r\\n                      </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              ABOUT\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n          \\r\\n            <ion-card id=\\\"aboutCardStyle\\\">\\r\\n              <ion-card-header>\\r\\n                  <ion-avatar style=\\\"position: absolute;\\r\\n                                    top: 20px;\\r\\n                                    left: 50%;\\r\\n                                    transform: translateX(-50%);\\r\\n                                    background-color: white;\\r\\n                                    width: 100px;\\r\\n                                    height: 100px;\\\">\\r\\n                    <img src=\\\"assets/images/RPLS_Logo.png\\\">\\r\\n                  </ion-avatar>\\r\\n                </ion-card-header>   \\r\\n                <ion-card-content style=\\\"margin-top: 100px;\\\"> \\r\\n                  <h2 style=\\\"text-align: center;\\r\\n                            color: black;\\\">iSAM Platform built by University of Plymouth Second Year students <br> \\r\\n                              following BSc(Hons) Software Engineering Degree</h2><br>\\r\\n                  <h2 style=\\\"text-align: center;\\r\\n                            color: black;\\\">Assignment Title: Coursework PUSL2008 - Intorduction to Internet of Things</h2>\\r\\n                </ion-card-content>     \\r\\n            </ion-card>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingsPage } from './settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SettingsPageRoutingModule } from './settings-routing.module';\r\n\r\nimport { SettingsPage } from './settings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SettingsPageRoutingModule\r\n  ],\r\n  declarations: [SettingsPage]\r\n})\r\nexport class SettingsPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-card {\\n  --ion-background-color: white; }\\n\\nion-label {\\n  color: black; }\\n\\nion-item {\\n  border: #ccc solid 1px;\\n  border-radius: 5px; }\\n\\n#aboutCardStyle {\\n  min-height: 250px;\\n  --ion-background-color: rgb(235, 235, 235); }\\n\\n.settingsAddFormLabel {\\n  position: relative;\\n  top: 15px;\\n  font-size: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL3NldHRpbmdzL0M6XFxVc2Vyc1xccmFudWxcXERvY3VtZW50c1xcR2l0SHViXFwybmQgWWVhclxcMm5kIFNlbWVzdGVyXFxVT1BfU0VfWTJTMi1QVVNMMjAwOC1JTlRST0RVQ1RJT04tVE8tSU5URVJORVQtT0YtVEhJTkdTXFxXb3Jrc3BhY2VcXGlTQU0vc3JjXFxhcHBcXG9mZmljZVxcc2V0dGluZ3NcXHNldHRpbmdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLDZCQUF1QixFQUFBOztBQUczQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksaUJBQWlCO0VBQ2pCLDBDQUF1QixFQUFBOztBQUczQjtFQUNJLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb2ZmaWNlL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tbGFiZWx7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG4gICAgYm9yZGVyOiAjY2NjIHNvbGlkIDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuI2Fib3V0Q2FyZFN0eWxle1xyXG4gICAgbWluLWhlaWdodDogMjUwcHg7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbn1cclxuXHJcbi5zZXR0aW5nc0FkZEZvcm1MYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { AlertController, PopoverController, ModalController } from '@ionic/angular';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\nimport { UpdateAccountDetailsModalPage } from './update-account-details-modal/update-account-details-modal.page';\r\nimport { UpdateAccountPasswordModalPage } from './update-account-password-modal/update-account-password-modal.page';\r\nimport { EditLectureSessionModalPage } from '../semester-calendar/edit-lecture-session-modal/edit-lecture-session-modal.page';\r\nimport { EditDegreeProgramModalPage } from './editModals/edit-degree-program-modal/edit-degree-program-modal.page';\r\nimport { EditBatchModalPage } from './editModals/edit-batch-modal/edit-batch-modal.page';\r\nimport { EditCreditWeightingModalPage } from './editModals/edit-credit-weighting-modal/edit-credit-weighting-modal.page';\r\nimport { EditLectureHallModalPage } from './editModals/edit-lecture-hall-modal/edit-lecture-hall-modal.page';\r\nimport { EditLectureSessionStatusModalPage } from './editModals/edit-lecture-session-status-modal/edit-lecture-session-status-modal.page';\r\nimport { EditNoticeCategoryModalPage } from './editModals/edit-notice-category-modal/edit-notice-category-modal.page';\r\nimport { EditUserAccountStatusModalPage } from './editModals/edit-user-account-status-modal/edit-user-account-status-modal.page';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.page.html',\r\n  styleUrls: ['./settings.page.scss'],\r\n})\r\nexport class SettingsPage implements OnInit {\r\n\r\n  /* Add Form Sections */\r\n  addDegreeProgramFormSection: Boolean = false;\r\n  addBatchFormSection: Boolean = false;\r\n  addCreditWeightingFormSection: Boolean = false;\r\n  addLectureHallFormSection: Boolean = false;\r\n  addLectureSessionStatusFormSection: Boolean = false;\r\n  addUserAccountStatusFormSection: Boolean = false;\r\n  addNoticeCategoryFormSection: Boolean = false;\r\n  updateDetailsLoginFormSection: Boolean = false;\r\n  updatePasswordLoginFormSection: Boolean = false;\r\n\r\n  /* Add Buttons */\r\n  addDegreeProgramButton: Boolean = true;\r\n  addBatchButton: Boolean = true;\r\n  addCreditWeightingButton: Boolean = true;\r\n  addLectureHallButton: Boolean = true;\r\n  addLectureSessionStatusButton: Boolean = true;\r\n  addUserAccountStatusButton: Boolean = true;\r\n  addNoticeCategoryButton: Boolean = true;\r\n\r\n  /* Close Form Buttons */\r\n  closeDegreeProgramFormButton: Boolean = false;\r\n  closeBatchFormButton: Boolean = false;\r\n  closeCreditWeightingFormButton: Boolean = false;\r\n  closeLectureHallFormButton: Boolean = false;\r\n  closeLectureSessionStatusFormButton: Boolean = false;\r\n  closeUserAccountStatusFormButton: Boolean = false;\r\n  closeNoticeCategoryFormButton: Boolean = false;\r\n  closeUpdateDetailsLoginFormButton: Boolean = false;\r\n  closeUpdatePasswordLoginFormButton: Boolean = false;\r\n\r\n  /* Loading Spinners */\r\n  loadingSpinnerDegreeProgram: Boolean = true;\r\n  loadingSpinnerBatch: Boolean = true;\r\n  loadingSpinnerCreditWeighting: Boolean = true;\r\n  loadingSpinnerLectureHall: Boolean = true;\r\n  loadingSpinnerLectureSessionStatus: Boolean = true;\r\n  loadingSpinnerUserAccountStatus: Boolean = true;\r\n  loadingSpinnerNoticeCategory: Boolean = true;\r\n\r\n  /* Add FormGroups */\r\n  addDegreeProgramForm: FormGroup;\r\n  addBatchForm: FormGroup;\r\n  addCreditWeightingForm: FormGroup;\r\n  addLectureHallForm: FormGroup;\r\n  addLectureSessionStatusForm: FormGroup;\r\n  addUserAccountStatusForm: FormGroup;\r\n  addNoticeCategoryForm: FormGroup;\r\n  updateDetailsLoginForm: FormGroup;\r\n  updatePasswordLoginForm: FormGroup;\r\n\r\n  awardingBodyUniversity;\r\n\r\n  constructor(\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private settingsService: FirebaseService,\r\n    private alertController: AlertController,\r\n    private formBuilder: FormBuilder,\r\n    private popoverController: PopoverController,\r\n    private modalController: ModalController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.retrievePublishedBatch();\r\n\r\n    this.retrievePublishedDegreeProgram();\r\n\r\n    this.retrievePublishedModuleCreditsWeighting();\r\n\r\n    this.retrievePublishedLectureHalls();\r\n\r\n    this.retrievePublishedLectureSessionStatuses();\r\n\r\n    this.retrievePublishedUserStatuses();\r\n\r\n    this.retrievePublishedNoticeCategories();\r\n\r\n\r\n    this.retrieveRegisteredLecturers();\r\n\r\n\r\n    /* FormControls */\r\n    this.addDegreeProgramForm = this.formBuilder.group({\r\n      degreeCode: new FormControl('', Validators.required),\r\n      degree: new FormControl('', Validators.required),\r\n      awardingBodyUniversity: new FormControl('', Validators.required),\r\n      academicPeriodYear: new FormControl('', Validators.required),\r\n      academicPeriodSemester: new FormControl('', Validators.required),\r\n      programDelivery: new FormControl('', Validators.required),\r\n      programCoordinator: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addBatchForm = this.formBuilder.group({\r\n      batch: new FormControl('', Validators.required),\r\n      degreeProgram: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addCreditWeightingForm = this.formBuilder.group({\r\n      creditWeighting: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addLectureHallForm = this.formBuilder.group({\r\n      lectureHall: new FormControl('', Validators.required),\r\n      level: new FormControl('', Validators.required),\r\n      approximateNoOfSeatsAvailable: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addLectureSessionStatusForm = this.formBuilder.group({\r\n      status: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addUserAccountStatusForm = this.formBuilder.group({\r\n      status: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.addNoticeCategoryForm = this.formBuilder.group({\r\n      category: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.updateDetailsLoginForm = this.formBuilder.group({\r\n      emailAddress: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9]+[!@#$%^&*]?'),\r\n        Validators.minLength(10)\r\n      ]))\r\n    });\r\n\r\n    this.updatePasswordLoginForm = this.formBuilder.group({\r\n      emailAddress: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9]+[!@#$%^&*]?'),\r\n        Validators.minLength(10)\r\n      ]))\r\n    });\r\n  }\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n  // Retrieving published degree programs and their details from the firestore database\r\n  publishedDegreePrograms;\r\n  retrievePublishedDegreeProgram = () => \r\n    this.settingsService.retrievePublishedDegreeProgram(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerDegreeProgram = false;\r\n      this.publishedDegreePrograms = response;\r\n    });\r\n\r\n  // Retrieving published batches and their details from the firestore database\r\n  publishedBatches;\r\n  retrievePublishedBatch = () => \r\n    this.settingsService.retrievePublishedBatch(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerBatch = false;\r\n      this.publishedBatches = response;\r\n    });\r\n  \r\n  // Retrieving published no of credit weightings and their details from the firestore database\r\n  publishedNoOfCreditWeightings;\r\n  retrievePublishedModuleCreditsWeighting = () => \r\n    this.settingsService.retrievePublishedModuleCreditsWeighting().subscribe(response => {\r\n      this.loadingSpinnerCreditWeighting = false;\r\n      this.publishedNoOfCreditWeightings = response;\r\n    });\r\n\r\n  // Retrieving published lecture halls and their details from the firestore database\r\n  publishedLectureHalls;\r\n  retrievePublishedLectureHalls = () => \r\n    this.settingsService.retrievePublishedLectureHalls(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      this.loadingSpinnerLectureHall = false;\r\n      this.publishedLectureHalls = response;\r\n    });\r\n\r\n  // Retrieving published lecture session statuses and their details from the firestore database\r\n  publishedLectureSessionStatuses;\r\n  retrievePublishedLectureSessionStatuses = () =>\r\n    this.settingsService.retrievePublishedLectureSessionStatuses().subscribe(response => {\r\n      this.loadingSpinnerLectureSessionStatus = false;\r\n      this.publishedLectureSessionStatuses = response;\r\n    });\r\n\r\n  // Retrieving published user statuses and their details from the firestore database\r\n  publishedUserStatuses;\r\n  retrievePublishedUserStatuses = () =>\r\n    this.settingsService.retrievePublishedUserStatuses().subscribe(response => {\r\n      this.loadingSpinnerUserAccountStatus = false;\r\n      this.publishedUserStatuses = response;\r\n    });\r\n\r\n  // Retrieving published notice categories and their details from the firestore database\r\n  publishedNoticeCategory;\r\n  retrievePublishedNoticeCategories = () =>\r\n    this.settingsService.retrievePublishedNoticeCategories().subscribe(response => {\r\n      this.loadingSpinnerNoticeCategory = false;\r\n      this.publishedNoticeCategory = response;\r\n    });\r\n\r\n\r\n  // Retrieving registered lecturers from the firestore database\r\n  registeredLecturers;\r\n  retrieveRegisteredLecturers = () =>\r\n    this.settingsService.retrieveRegisteredLecturers().subscribe(response => {\r\n      this.registeredLecturers = response;\r\n    });\r\n\r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n\r\n  }\r\n\r\n  /* Functions handling show add section and hide add section */\r\n  openAddDegreeProgramForm(){\r\n    if(this.addDegreeProgramButton == true){\r\n      this.addDegreeProgramButton = false;\r\n      this.closeDegreeProgramFormButton = true;\r\n      this.addDegreeProgramFormSection = true;\r\n    }\r\n    else if(this.addDegreeProgramButton == false){\r\n      this.addDegreeProgramForm.reset();\r\n      this.addDegreeProgramButton = true;\r\n      this.closeDegreeProgramFormButton = false;\r\n      this.addDegreeProgramFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddBatchForm(){\r\n    if(this.addBatchButton == true){\r\n      this.addBatchButton = false;\r\n      this.closeBatchFormButton = true;\r\n      this.addBatchFormSection = true;\r\n    }\r\n    else if(this.addBatchButton == false){\r\n      this.addBatchForm.reset();\r\n      this.addBatchButton = true;\r\n      this.closeBatchFormButton = false;\r\n      this.addBatchFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddCreditWeightingForm(){\r\n    if(this.addCreditWeightingButton == true){\r\n      this.addCreditWeightingButton = false;\r\n      this.closeCreditWeightingFormButton = true;\r\n      this.addCreditWeightingFormSection = true;\r\n    }\r\n    else if(this.addCreditWeightingButton == false){\r\n      this.addCreditWeightingForm.reset();\r\n      this.addCreditWeightingButton = true;\r\n      this.closeCreditWeightingFormButton = false;\r\n      this.addCreditWeightingFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddLectureHallForm(){\r\n    if(this.addLectureHallButton == true){\r\n      this.addLectureHallButton = false;\r\n      this.closeLectureHallFormButton = true;\r\n      this.addLectureHallFormSection = true;\r\n    }\r\n    else if(this.addLectureHallButton == false){\r\n      this.addLectureHallForm.reset();\r\n      this.addLectureHallButton = true;\r\n      this.closeLectureHallFormButton = false;\r\n      this.addLectureHallFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddLectureSessionStatusForm(){\r\n    if(this.addLectureSessionStatusButton == true){\r\n      this.addLectureSessionStatusButton = false;\r\n      this.closeLectureSessionStatusFormButton = true;\r\n      this.addLectureSessionStatusFormSection = true;\r\n    }\r\n    else if(this.addLectureSessionStatusButton == false){\r\n      this.addLectureSessionStatusForm.reset();\r\n      this.addLectureSessionStatusButton = true;\r\n      this.closeLectureSessionStatusFormButton = false;\r\n      this.addLectureSessionStatusFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddUserAccountStatusForm(){\r\n    if(this.addUserAccountStatusButton == true){\r\n      this.addUserAccountStatusButton = false;\r\n      this.closeUserAccountStatusFormButton = true;\r\n      this.addUserAccountStatusFormSection = true;\r\n    }\r\n    else if(this.addUserAccountStatusButton == false){\r\n      this.addUserAccountStatusForm.reset();\r\n      this.addUserAccountStatusButton = true;\r\n      this.closeUserAccountStatusFormButton = false;\r\n      this.addUserAccountStatusFormSection = false;\r\n    }\r\n  }\r\n\r\n  openAddNoticeCategoryForm(){\r\n    if(this.addNoticeCategoryButton == true){\r\n      this.addNoticeCategoryButton = false;\r\n      this.closeNoticeCategoryFormButton = true;\r\n      this.addNoticeCategoryFormSection = true;\r\n    }\r\n    else if(this.addNoticeCategoryButton == false){\r\n      this.addNoticeCategoryForm.reset();\r\n      this.addNoticeCategoryButton = true;\r\n      this.closeNoticeCategoryFormButton = false;\r\n      this.addNoticeCategoryFormSection = false;\r\n    }\r\n  }\r\n\r\n  openUpdateDetailsLoginForm(){\r\n    if(this.updatePasswordLoginFormSection == true){\r\n      this.updatePasswordLoginFormSection = false;\r\n      this.closeUpdatePasswordLoginFormButton = false;\r\n\r\n      this.updateDetailsLoginFormSection = true;\r\n      this.closeUpdateDetailsLoginFormButton = true;\r\n    }\r\n    else if(this.updateDetailsLoginFormSection == false){\r\n      this.updateDetailsLoginFormSection = true;\r\n      this.closeUpdateDetailsLoginFormButton = true;\r\n    }\r\n    else if(this.updateDetailsLoginFormSection == true){\r\n      this.updateDetailsLoginFormSection = false;\r\n      this.closeUpdateDetailsLoginFormButton = false;\r\n    }\r\n  }\r\n\r\n  openUpdatePasswordLoginForm(){\r\n    if(this.updateDetailsLoginFormSection == true){\r\n      this.updateDetailsLoginFormSection = false;\r\n      this.closeUpdateDetailsLoginFormButton = false;\r\n\r\n      this.updatePasswordLoginFormSection = true;\r\n      this.closeUpdatePasswordLoginFormButton = true;\r\n    }\r\n    else if(this.updatePasswordLoginFormSection == false){\r\n      this.updatePasswordLoginFormSection = true;\r\n      this.closeUpdatePasswordLoginFormButton = true;\r\n    }\r\n    else if (this.updatePasswordLoginFormSection == true){\r\n      this.updatePasswordLoginFormSection = false;\r\n      this.closeUpdatePasswordLoginFormButton = false;\r\n    }\r\n  }\r\n\r\n  // Update account details modal calling, opening modal\r\n  async updateAccountDetailsModal(){\r\n    const updateAccountDetailsModal = await this.modalController.create({\r\n      component: UpdateAccountDetailsModalPage,\r\n      // Passing value to the modal using 'componentProps'\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    updateAccountDetailsModal.present();\r\n  }\r\n\r\n\r\n  // Process of updating user account details\r\n  doUpdateDetails(value){\r\n\r\n    // Verifying entered login credentials\r\n    this.settingsService.verifyLoginCredentials(value).then(async response => {\r\n      \r\n      // Opening update account details modal\r\n      this.updateAccountDetailsModal();\r\n\r\n\r\n    }, error => {\r\n      console.log(\"Error during login credential verification: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // Update account password modal calling, opening modal\r\n  async updateAccountPasswordModal(){\r\n    const updateAccountPasswordModal = await this.modalController.create({\r\n      component: UpdateAccountPasswordModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    updateAccountPasswordModal.present();\r\n  }\r\n\r\n\r\n  // Process of update user account password\r\n  doUpdatePassword(value){\r\n\r\n    // Verifying entered login credentials\r\n    this.settingsService.verifyLoginCredentials(value).then(async response => {\r\n      \r\n      // Opening update account password modal\r\n      this.updateAccountPasswordModal();\r\n\r\n    }, error => {\r\n      console.log(\"Error during login credential verification: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  publishedAwardingBodyUniversityOfDegree;\r\n\r\n  // Retrieving the awardingBodyUniversity for the selected degree\r\n  getAwardingBodyUniversity(event){\r\n    let selectedDegree = event.detail.value;\r\n    console.log(selectedDegree);\r\n\r\n    // Retrieving the awardingBody University of the selected degree\r\n    this.settingsService.retrievingAwardingBodyUniversityOfDegree(selectedDegree, this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => (this.publishedAwardingBodyUniversityOfDegree =\r\n      response.forEach(document => {\r\n        let firestoreDoc: any = document.payload.doc.data();\r\n        this.awardingBodyUniversity = firestoreDoc.awardingBodyUniversity;\r\n        console.log(this.awardingBodyUniversity);\r\n      })\r\n    ));\r\n  \r\n    \r\n  }\r\n\r\n\r\n  /* Functions of calling serive functions and the values to firestore */\r\n  // Process of adding a new degree program\r\n  doAddDegreeProgram(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewDegreeProgram(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n    this.alertNotice(\"Degree Program Added\", \"New degree program has been added.\");\r\n\r\n    this.addDegreeProgramForm.reset();\r\n\r\n    if(this.addDegreeProgramButton == false){\r\n      this.addDegreeProgramForm.reset();\r\n      this.addDegreeProgramButton = true;\r\n      this.closeDegreeProgramFormButton = false;\r\n      this.addDegreeProgramFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new batch\r\n  doAddBatch(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewBatch(value, this.awardingBodyUniversity, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n  \r\n    this.alertNotice(\"Batch Added\", \"New batch has been added.\");\r\n\r\n    this.addBatchForm.reset();\r\n\r\n    if(this.addBatchButton == false){\r\n      this.addBatchForm.reset();\r\n      this.addBatchButton = true;\r\n      this.closeBatchFormButton = false;\r\n      this.addBatchFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new credit weighting\r\n  doAddCreditWeighting(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewCreditWeighting(value);\r\n\r\n    this.alertNotice(\"Credit Weighting Added\", \"New credit weighting has been added.\");\r\n\r\n    this.addCreditWeightingForm.reset();\r\n\r\n    if(this.addCreditWeightingButton == false){\r\n      this.addCreditWeightingForm.reset();\r\n      this.addCreditWeightingButton = true;\r\n      this.closeCreditWeightingFormButton = false;\r\n      this.addCreditWeightingFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new lecture hall\r\n  doAddLectureHall(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewLectureHall(value, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n    this.alertNotice(\"Lecture Hall Added\", \"New lecture hall has been added.\");\r\n\r\n    this.addLectureHallForm.reset();\r\n\r\n    if(this.addLectureHallButton == false){\r\n      this.addLectureHallForm.reset();\r\n      this.addLectureHallButton = true;\r\n      this.closeLectureHallFormButton = false;\r\n      this.addLectureHallFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new lecture session status\r\n  doAddLectureSessionStatus(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewLectureSessionStatus(value);\r\n\r\n    this.alertNotice(\"Lecture Session Status Added\", \"New lecture session status has been added.\");\r\n\r\n    this.addLectureSessionStatusForm.reset();\r\n\r\n    if(this.addLectureSessionStatusButton == false){\r\n      this.addLectureSessionStatusForm.reset();\r\n      this.addLectureSessionStatusButton = true;\r\n      this.closeLectureSessionStatusFormButton = false;\r\n      this.addLectureSessionStatusFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a new user account status\r\n  doAddUserAccountStatus(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewUserAccountStatus(value);\r\n\r\n    this.alertNotice(\"User Account Status Added\", \"New user account status has been added.\");\r\n\r\n    this.addUserAccountStatusForm.reset();\r\n\r\n    if(this.addUserAccountStatusButton == false){\r\n      this.addUserAccountStatusForm.reset();\r\n      this.addUserAccountStatusButton = true;\r\n      this.closeUserAccountStatusFormButton = false;\r\n      this.addUserAccountStatusFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // Process of adding a notice category\r\n  doAddNoticeCategory(value){\r\n\r\n    // Adding values to the firestore database\r\n    this.settingsService.addNewNoticeCategory(value);\r\n\r\n    this.alertNotice(\"Notice Category Added\", \"New notice category has been added.\");\r\n\r\n    this.addNoticeCategoryForm.reset();\r\n\r\n    if(this.addNoticeCategoryButton == false){\r\n      this.addNoticeCategoryForm.reset();\r\n      this.addNoticeCategoryButton = true;\r\n      this.closeNoticeCategoryFormButton = false;\r\n      this.addNoticeCategoryFormSection = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /* Remove confirm boxes and process of removing */\r\n  // Confirm Box Implementation (Process of removing a degree program)\r\n  async removeDegreeProgram ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Degree Program Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Degree Program Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove degree program\r\n            this.settingsService.removeDegreeProgram(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Degree Program has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a batch)\r\n  async removeBatch ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Batch Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Batch Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove batch\r\n            this.settingsService.removeBatch(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Batch has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a credit weighting)\r\n  async removeCreditWeighting ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Credit Weighting Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Credit Weighting Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove credit weightng\r\n            this.settingsService.removeCreditWeighting(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Credit Weighting has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a lecture hall)\r\n  async removeLectureHall ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Hall Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Hall Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove lecture hall\r\n            this.settingsService.removeLectureHall(docId, this.sideMenuPageUserFaculty.passLoggedInUserFaculty());\r\n\r\n            this.alertNotice(\"Removed\", \"Lecture hall has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a lecture session status)\r\n  async removeLectureSessionStatus ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Status Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Lecture Session Status Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove lecture session status\r\n            this.settingsService.removeLectureSessionStatus(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Lecture session status has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a user account status)\r\n  async removeUserAccountStatus ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove User Account Status Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove User Account Status Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove user account status\r\n            this.settingsService.removeUserAccountStatus(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"User account status has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Confirm Box Implementation (Process of removing a notice category)\r\n  async removeNoticeCategory ( title: string, content: string, value) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Notice Category Request Denied\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Continue',\r\n          handler: () => {\r\n            console.log(\"Alert Box: Remove Notice Category Request Accepted\");\r\n\r\n            let docId = value.payload.doc.id\r\n\r\n            // Calling function to remove notice category\r\n            this.settingsService.removeNoticeCategory(docId);\r\n\r\n            this.alertNotice(\"Removed\", \"Notice category has been removed\");\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n  /* Opening Edit Modals */\r\n  // Edit degree program modal calling, opening modal\r\n  async openEditDegreeProgramModal(value){\r\n    console.log(value);\r\n\r\n    const editDegreeProgramModal = await this.modalController.create({\r\n      component: EditDegreeProgramModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editDegreeProgramModal.present();\r\n  }\r\n\r\n  // Edit batch modal calling, opening modal\r\n  async openEditBatchModal(value){\r\n    console.log(value);\r\n\r\n    const editBatchModal = await this.modalController.create({\r\n      component: EditBatchModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editBatchModal.present();\r\n  }\r\n\r\n  // Edit credit weighting modal calling, opening modal\r\n  async openEditCreditWeightingModal(value){\r\n    console.log(value);\r\n\r\n    const editCreditWeightingModal = await this.modalController.create({\r\n      component: EditCreditWeightingModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editCreditWeightingModal.present();\r\n  }\r\n\r\n  // Edit lecture hall modal calling, opening modal\r\n  async openEditLectureHallModal(value){\r\n    console.log(value);\r\n\r\n    const editLectureHallModal = await this.modalController.create({\r\n      component: EditLectureHallModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureHallModal.present();\r\n  }\r\n\r\n  // Edit lecture session status modal calling, opening modal\r\n  async openEditLectureSessionStatusModal(value){\r\n    console.log(value);\r\n\r\n    const editLectureSessionStatusModal = await this.modalController.create({\r\n      component: EditLectureSessionStatusModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editLectureSessionStatusModal.present();\r\n  }\r\n\r\n  // Edit user account status modal calling, opening modal\r\n  async openEditUserAccountStatusModal(value){\r\n    console.log(value);\r\n\r\n    const editUserAccountStatusModal = await this.modalController.create({\r\n      component: EditUserAccountStatusModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editUserAccountStatusModal.present();\r\n  }\r\n\r\n  // Edit notice category modal calling, opening modal\r\n  async openEditNoticeCategoryModal(value){\r\n    console.log(value);\r\n\r\n    const editNoticeCategoryModal = await this.modalController.create({\r\n      component: EditNoticeCategoryModalPage,\r\n      // Disabling modal closing from any outside clicks\r\n      backdropDismiss: false\r\n    });\r\n    editNoticeCategoryModal.present();\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"settings-settings-module-es5.js"}