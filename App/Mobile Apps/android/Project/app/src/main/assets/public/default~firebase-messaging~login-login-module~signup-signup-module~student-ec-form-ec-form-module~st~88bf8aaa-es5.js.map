{"version":3,"sources":["node_modules/@firebase/installations/dist/index.esm.js","node_modules/@firebase/messaging/dist/index.esm.js","node_modules/idb/build/idb.js"],"names":[],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spread, __values, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar name = \"@firebase/installations\";\nvar version = \"0.4.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    var key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    var e_1, _a;\r\n    var callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    try {\r\n        for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n            var callback = callbacks_1_1.value;\r\n            callback(fid);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    var channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key: key, fid: fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nvar broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = function (e) {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, objectStore, oldValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, objectStore.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    return [4 /*yield*/, objectStore.put(value, key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 4:\r\n                    _a.sent();\r\n                    if (!oldValue || oldValue.fid !== value.fid) {\r\n                        fidChanged(appConfig, value.fid);\r\n                    }\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n                        fidChanged(appConfig, newValue.fid);\r\n                    }\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n */\r\nfunction onIdChange(_a, callback) {\r\n    var appConfig = _a.appConfig;\r\n    addCallback(appConfig, callback);\r\n    return function () {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        var installations = {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); },\r\n            onIdChange: function (callback) {\r\n                return onIdChange(dependencies, callback);\r\n            }\r\n        };\r\n        return installations;\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n","import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { __values, __spread, __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory } from '@firebase/util';\nimport { deleteDb, openDb } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The notification permission was not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The notification permission was not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's required to use the firebase SDK.\",\r\n    _a[\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */] = 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    _a[\"invalid-bg-handler\" /* INVALID_BG_HANDLER */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"invalid-vapid-key\" /* INVALID_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    var options = app.options;\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    var uint8Array = new Uint8Array(array);\r\n    var base64String = btoa(String.fromCharCode.apply(String, __spread(uint8Array)));\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher,\r\n * so that the upgrade callback is called for all versions of the old DB.\r\n */\r\nvar OLD_DB_VERSION = 5;\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction migrateOldDatabase(senderId) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var databases, dbNames, tokenDetails, db;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!('databases' in indexedDB)) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, indexedDB.databases()];\r\n                case 1:\r\n                    databases = _a.sent();\r\n                    dbNames = databases.map(function (db) { return db.name; });\r\n                    if (!dbNames.includes(OLD_DB_NAME)) {\r\n                        // old DB didn't exist, no need to open.\r\n                        return [2 /*return*/, null];\r\n                    }\r\n                    _a.label = 2;\r\n                case 2:\r\n                    tokenDetails = null;\r\n                    return [4 /*yield*/, openDb(OLD_DB_NAME, OLD_DB_VERSION, function (db) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var objectStore, value, oldDetails, oldDetails, oldDetails;\r\n                            var _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        if (db.oldVersion < 2) {\r\n                                            // Database too old, skip migration.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                                            // Database did not exist. Nothing to do.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n                                        return [4 /*yield*/, objectStore.index('fcmSenderId').get(senderId)];\r\n                                    case 1:\r\n                                        value = _b.sent();\r\n                                        return [4 /*yield*/, objectStore.clear()];\r\n                                    case 2:\r\n                                        _b.sent();\r\n                                        if (!value) {\r\n                                            // No entry in the database, nothing to migrate.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        if (db.oldVersion === 2) {\r\n                                            oldDetails = value;\r\n                                            if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                                                subscriptionOptions: {\r\n                                                    auth: oldDetails.auth,\r\n                                                    p256dh: oldDetails.p256dh,\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                                                        ? oldDetails.vapidKey\r\n                                                        : arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        else if (db.oldVersion === 3) {\r\n                                            oldDetails = value;\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: oldDetails.createTime,\r\n                                                subscriptionOptions: {\r\n                                                    auth: arrayToBase64(oldDetails.auth),\r\n                                                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        else if (db.oldVersion === 4) {\r\n                                            oldDetails = value;\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: oldDetails.createTime,\r\n                                                subscriptionOptions: {\r\n                                                    auth: arrayToBase64(oldDetails.auth),\r\n                                                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                case 3:\r\n                    db = _a.sent();\r\n                    db.close();\r\n                    // Delete all old databases.\r\n                    return [4 /*yield*/, deleteDb(OLD_DB_NAME)];\r\n                case 4:\r\n                    // Delete all old databases.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deleteDb('fcm_vapid_details_db')];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deleteDb('undefined')];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [2 /*return*/, checkTokenDetails(tokenDetails) ? tokenDetails : null];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    var subscriptionOptions = tokenDetails.subscriptionOptions;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nvar DATABASE_NAME = 'firebase-messaging-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDb) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDb.oldVersion) {\r\n                case 0:\r\n                    upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nfunction dbGet(firebaseDependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tokenDetails, oldTokenDetails;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    return [4 /*yield*/, db\r\n                            .transaction(OBJECT_STORE_NAME)\r\n                            .objectStore(OBJECT_STORE_NAME)\r\n                            .get(key)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails) return [3 /*break*/, 3];\r\n                    return [2 /*return*/, tokenDetails];\r\n                case 3: return [4 /*yield*/, migrateOldDatabase(firebaseDependencies.appConfig.senderId)];\r\n                case 4:\r\n                    oldTokenDetails = _a.sent();\r\n                    if (!oldTokenDetails) return [3 /*break*/, 6];\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, oldTokenDetails)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [2 /*return*/, oldTokenDetails];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction dbSet(firebaseDependencies, tokenDetails) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction dbRemove(firebaseDependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(_a) {\r\n    var appConfig = _a.appConfig;\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\r\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\n/** Key of FCM Payload in Notification's data field. */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, body, subscribeOptions, responseData, response, err_1, message;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(subscriptionOptions);\r\n                    subscribeOptions = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_1 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_1\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, body, updateOptions, responseData, response, err_2, message;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(tokenDetails.subscriptionOptions);\r\n                    updateOptions = {\r\n                        method: 'PATCH',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + tokenDetails.token, updateOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_2 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                        errorInfo: err_2\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestDeleteToken(firebaseDependencies, token) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, unsubscribeOptions, response, responseData, message, err_3;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    unsubscribeOptions = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + token, unsubscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_3 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_3\r\n                    });\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return ENDPOINT + \"/projects/\" + projectId + \"/registrations\";\r\n}\r\nfunction getHeaders(_a) {\r\n    var appConfig = _a.appConfig, installations = _a.installations;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getToken()];\r\n                case 1:\r\n                    authToken = _b.sent();\r\n                    return [2 /*return*/, new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'application/json',\r\n                            'x-goog-api-key': appConfig.apiKey,\r\n                            'x-goog-firebase-installations-auth': \"FIS \" + authToken\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getBody(_a) {\r\n    var p256dh = _a.p256dh, auth = _a.auth, endpoint = _a.endpoint, vapidKey = _a.vapidKey;\r\n    var body = {\r\n        web: {\r\n            endpoint: endpoint,\r\n            auth: auth,\r\n            p256dh: p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** UpdateRegistration will be called once every week. */\r\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nfunction getToken(firebaseDependencies, swRegistration, vapidKey) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var pushSubscription, tokenDetails, subscriptionOptions, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (Notification.permission !== 'granted') {\r\n                        throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                    }\r\n                    return [4 /*yield*/, getPushSubscription(swRegistration, vapidKey)];\r\n                case 1:\r\n                    pushSubscription = _a.sent();\r\n                    return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    subscriptionOptions = {\r\n                        vapidKey: vapidKey,\r\n                        swScope: swRegistration.scope,\r\n                        endpoint: pushSubscription.endpoint,\r\n                        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n                        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n                    };\r\n                    if (!!tokenDetails) return [3 /*break*/, 3];\r\n                    // No token, get a new one.\r\n                    return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 3:\r\n                    if (!!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) return [3 /*break*/, 8];\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, 6, , 7]);\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 6:\r\n                    e_1 = _a.sent();\r\n                    // Suppress errors because of #2364\r\n                    console.warn(e_1);\r\n                    return [3 /*break*/, 7];\r\n                case 7: return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 8:\r\n                    if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n                        // Weekly token refresh\r\n                        return [2 /*return*/, updateToken({\r\n                                token: tokenDetails.token,\r\n                                createTime: Date.now(),\r\n                                subscriptionOptions: subscriptionOptions\r\n                            }, firebaseDependencies, swRegistration)];\r\n                    }\r\n                    else {\r\n                        // Valid token, nothing to do.\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                    }\r\n                case 9: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from\r\n * FCM, and unregisters the push subscription if it exists.\r\n */\r\nfunction deleteToken(firebaseDependencies, swRegistration) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenDetails, pushSubscription;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 1:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, dbRemove(firebaseDependencies)];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 5:\r\n                    pushSubscription = _a.sent();\r\n                    if (pushSubscription) {\r\n                        return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                    }\r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction updateToken(tokenDetails, firebaseDependencies, swRegistration) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var updatedToken, updatedTokenDetails, e_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 5]);\r\n                    return [4 /*yield*/, requestUpdateToken(firebaseDependencies, tokenDetails)];\r\n                case 1:\r\n                    updatedToken = _a.sent();\r\n                    updatedTokenDetails = __assign({ token: updatedToken, createTime: Date.now() }, tokenDetails);\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, updatedTokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, updatedToken];\r\n                case 3:\r\n                    e_2 = _a.sent();\r\n                    return [4 /*yield*/, deleteToken(firebaseDependencies, swRegistration)];\r\n                case 4:\r\n                    _a.sent();\r\n                    throw e_2;\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var token, tokenDetails;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requestGetToken(firebaseDependencies, subscriptionOptions)];\r\n                case 1:\r\n                    token = _a.sent();\r\n                    tokenDetails = {\r\n                        token: token,\r\n                        createTime: Date.now(),\r\n                        subscriptionOptions: subscriptionOptions\r\n                    };\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, tokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails.token];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nfunction getPushSubscription(swRegistration, vapidKey) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var subscription;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 1:\r\n                    subscription = _a.sent();\r\n                    if (subscription) {\r\n                        return [2 /*return*/, subscription];\r\n                    }\r\n                    return [2 /*return*/, swRegistration.pushManager.subscribe({\r\n                            userVisibleOnly: true,\r\n                            // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n                            // submitted to pushManager#subscribe must be of type Uint8Array.\r\n                            applicationServerKey: base64ToArray(vapidKey)\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    var isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the\r\n    // Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function () {\r\n    function WindowController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        this.vapidKey = null;\r\n        this.onMessageCallback = null;\r\n        navigator.serviceWorker.addEventListener('message', function (e) {\r\n            return _this.messageEventListener(e);\r\n        });\r\n    }\r\n    Object.defineProperty(WindowController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WindowController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swRegistration;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.vapidKey) {\r\n                            this.vapidKey = DEFAULT_VAPID_KEY;\r\n                        }\r\n                        return [4 /*yield*/, this.getServiceWorkerRegistration()];\r\n                    case 1:\r\n                        swRegistration = _a.sent();\r\n                        if (!(Notification.permission === 'default')) return [3 /*break*/, 3];\r\n                        // The user hasn't allowed or denied notifications yet. Ask them.\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 2:\r\n                        // The user hasn't allowed or denied notifications yet. Ask them.\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (Notification.permission !== 'granted') {\r\n                            throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        return [2 /*return*/, getToken(this.firebaseDependencies, swRegistration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.deleteToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swRegistration;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getServiceWorkerRegistration()];\r\n                    case 1:\r\n                        swRegistration = _a.sent();\r\n                        return [2 /*return*/, deleteToken(this.firebaseDependencies, swRegistration)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted.\r\n     *\r\n     * @return Resolves if the permission was granted, rejects otherwise.\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Notification.permission === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw ERROR_FACTORY.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: Deprecate this and make VAPID key a parameter in getToken.\r\n    WindowController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    WindowController.prototype.useServiceWorker = function (swRegistration) {\r\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n            throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n        }\r\n        if (this.swRegistration) {\r\n            throw ERROR_FACTORY.create(\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */);\r\n        }\r\n        this.swRegistration = swRegistration;\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    // TODO: Simplify this to only accept a function and not an Observer.\r\n    WindowController.prototype.onMessage = function (nextOrObserver) {\r\n        var _this = this;\r\n        this.onMessageCallback =\r\n            typeof nextOrObserver === 'function'\r\n                ? nextOrObserver\r\n                : nextOrObserver.next;\r\n        return function () {\r\n            _this.onMessageCallback = null;\r\n        };\r\n    };\r\n    WindowController.prototype.setBackgroundMessageHandler = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    // Unimplemented\r\n    WindowController.prototype.onTokenRefresh = function () {\r\n        return function () { };\r\n    };\r\n    /**\r\n     * Creates or updates the default service worker registration.\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getServiceWorkerRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, e_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.swRegistration) return [3 /*break*/, 4];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, navigator.serviceWorker.register(DEFAULT_SW_PATH, {\r\n                                scope: DEFAULT_SW_SCOPE\r\n                            })];\r\n                    case 2:\r\n                        _a.swRegistration = _b.sent();\r\n                        // The timing when browser updates sw when sw has an update is unreliable by my experiment.\r\n                        // It leads to version conflict when the SDK upgrades to a newer version in the main page, but\r\n                        // sw is stuck with the old version. For example, https://github.com/firebase/firebase-js-sdk/issues/2590\r\n                        // The following line reliably updates sw if there was an update.\r\n                        this.swRegistration.update().catch(function () {\r\n                            /* it is non blocking and we don't care if it failed */\r\n                        });\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                            browserErrorMessage: e_1.message\r\n                        });\r\n                    case 4: return [2 /*return*/, this.swRegistration];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.messageEventListener = function (event) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _b, type, payload, data;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!((_a = event.data) === null || _a === void 0 ? void 0 : _a.firebaseMessaging)) {\r\n                            // Not a message from FCM\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _b = event.data.firebaseMessaging, type = _b.type, payload = _b.payload;\r\n                        if (this.onMessageCallback && type === MessageType.PUSH_RECEIVED) {\r\n                            this.onMessageCallback(payload);\r\n                        }\r\n                        data = payload.data;\r\n                        if (!(isConsoleMessage(data) &&\r\n                            data[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1')) return [3 /*break*/, 2];\r\n                        // Analytics is enabled on this message, so we should log it.\r\n                        return [4 /*yield*/, this.logEvent(type, data)];\r\n                    case 1:\r\n                        // Analytics is enabled on this message, so we should log it.\r\n                        _c.sent();\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.logEvent = function (messageType, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eventType, analytics;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        eventType = getEventType(messageType);\r\n                        return [4 /*yield*/, this.firebaseDependencies.analyticsProvider.get()];\r\n                    case 1:\r\n                        analytics = _a.sent();\r\n                        analytics.logEvent(eventType, {\r\n                            /* eslint-disable camelcase */\r\n                            message_id: data[CONSOLE_CAMPAIGN_ID],\r\n                            message_name: data[CONSOLE_CAMPAIGN_NAME],\r\n                            message_time: data[CONSOLE_CAMPAIGN_TIME],\r\n                            message_device_time: Math.floor(Date.now() / 1000)\r\n                            /* eslint-enable camelcase */\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return WindowController;\r\n}());\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SwController = /** @class */ (function () {\r\n    function SwController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        this.vapidKey = null;\r\n        this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            e.waitUntil(_this.onPush(e));\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            e.waitUntil(_this.onSubChange(e));\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            e.waitUntil(_this.onNotificationClick(e));\r\n        });\r\n    }\r\n    Object.defineProperty(SwController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-bg-handler\" /* INVALID_BG_HANDLER */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    // TODO: Remove getToken from SW Controller.\r\n    // Calling this from an old SW can cause all kinds of trouble.\r\n    SwController.prototype.getToken = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.vapidKey) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 1:\r\n                        tokenDetails = _c.sent();\r\n                        this.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/, getToken(this.firebaseDependencies, self.registration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: Remove deleteToken from SW Controller.\r\n    // Calling this from an old SW can cause all kinds of trouble.\r\n    SwController.prototype.deleteToken = function () {\r\n        return deleteToken(this.firebaseDependencies, self.registration);\r\n    };\r\n    SwController.prototype.requestPermission = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    // TODO: Deprecate this and make VAPID key a parameter in getToken.\r\n    // TODO: Remove this together with getToken from SW Controller.\r\n    SwController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    SwController.prototype.useServiceWorker = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onMessage = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onTokenRefresh = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var payload, clientList, notificationDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        payload = getMessagePayload(event);\r\n                        if (!payload) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        if (hasVisibleClients(clientList)) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, sendMessageToWindowClients(clientList, payload)];\r\n                        }\r\n                        notificationDetails = getNotificationData(payload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, showNotification(notificationDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(payload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange = function (event) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newSubscription, tokenDetails;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        newSubscription = event.newSubscription;\r\n                        if (!!newSubscription) return [3 /*break*/, 2];\r\n                        // Subscription revoked, delete token\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 1:\r\n                        // Subscription revoked, delete token\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 3:\r\n                        tokenDetails = _c.sent();\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [4 /*yield*/, getToken(this.firebaseDependencies, self.registration, (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY)];\r\n                    case 5:\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var payload, link, client, message;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        payload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\r\n                        if (!payload) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        link = getLink(payload);\r\n                        if (!link) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getWindowClient(link)];\r\n                    case 1:\r\n                        client = _c.sent();\r\n                        if (!!client) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        // This also focuses the opened client.\r\n                        client = _c.sent();\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        return [4 /*yield*/, sleep(3000)];\r\n                    case 3:\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        _c.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4: return [4 /*yield*/, client.focus()];\r\n                    case 5:\r\n                        client = _c.sent();\r\n                        _c.label = 6;\r\n                    case 6:\r\n                        if (!client) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        message = createNewMessage(MessageType.NOTIFICATION_CLICKED, payload);\r\n                        return [2 /*return*/, client.postMessage(message)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}());\r\nfunction getMessagePayload(_a) {\r\n    var data = _a.data;\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    try {\r\n        return data.json();\r\n    }\r\n    catch (err) {\r\n        // Not JSON so not an FCM message.\r\n        return null;\r\n    }\r\n}\r\nfunction getNotificationData(payload) {\r\n    var _a;\r\n    if (!payload || typeof payload.notification !== 'object') {\r\n        return;\r\n    }\r\n    var notificationInformation = __assign({}, payload.notification);\r\n    // Put the message payload under FCM_MSG name so we can identify the\r\n    // notification as being an FCM notification vs a notification from\r\n    // somewhere else (i.e. normal web push or developer generated\r\n    // notification).\r\n    notificationInformation.data = __assign(__assign({}, payload.notification.data), (_a = {}, _a[FCM_MSG] = payload, _a));\r\n    return notificationInformation;\r\n}\r\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\r\nfunction getWindowClient(url) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var parsedURL, clientList, clientList_1, clientList_1_1, client, parsedClientUrl;\r\n        var e_1, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    parsedURL = new URL(url, self.location.href).href;\r\n                    return [4 /*yield*/, getClientList()];\r\n                case 1:\r\n                    clientList = _b.sent();\r\n                    try {\r\n                        for (clientList_1 = __values(clientList), clientList_1_1 = clientList_1.next(); !clientList_1_1.done; clientList_1_1 = clientList_1.next()) {\r\n                            client = clientList_1_1.value;\r\n                            parsedClientUrl = new URL(client.url, self.location.href).href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                return [2 /*return*/, client];\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (clientList_1_1 && !clientList_1_1.done && (_a = clientList_1.return)) _a.call(clientList_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                    return [2 /*return*/, null];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns If there is currently a visible WindowClient, this method will\r\n * resolve to true, otherwise false.\r\n */\r\nfunction hasVisibleClients(clientList) {\r\n    return clientList.some(function (client) {\r\n        return client.visibilityState === 'visible' &&\r\n            // Ignore chrome-extension clients as that matches the background pages\r\n            // of extensions, which are always considered visible for some reason.\r\n            !client.url.startsWith('chrome-extension://');\r\n    });\r\n}\r\n/**\r\n * @param payload The data from the push event that should be sent to all\r\n * available pages.\r\n * @returns Returns a promise that resolves once the message has been sent to\r\n * all WindowClients.\r\n */\r\nfunction sendMessageToWindowClients(clientList, payload) {\r\n    var e_2, _a;\r\n    var message = createNewMessage(MessageType.PUSH_RECEIVED, payload);\r\n    try {\r\n        for (var clientList_2 = __values(clientList), clientList_2_1 = clientList_2.next(); !clientList_2_1.done; clientList_2_1 = clientList_2.next()) {\r\n            var client = clientList_2_1.value;\r\n            client.postMessage(message);\r\n        }\r\n    }\r\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n    finally {\r\n        try {\r\n            if (clientList_2_1 && !clientList_2_1.done && (_a = clientList_2.return)) _a.call(clientList_2);\r\n        }\r\n        finally { if (e_2) throw e_2.error; }\r\n    }\r\n}\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMessage(type, payload) {\r\n    return {\r\n        firebaseMessaging: { type: type, payload: payload }\r\n    };\r\n}\r\nfunction showNotification(details) {\r\n    var _a;\r\n    var title = (_a = details.title) !== null && _a !== void 0 ? _a : '';\r\n    var actions = details.actions;\r\n    // Note: Firefox does not support the maxActions property.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\r\n    var maxActions = Notification.maxActions;\r\n    if (actions && maxActions && actions.length > maxActions) {\r\n        console.warn(\"This browser only supports \" + maxActions + \" actions. The remaining actions will not be displayed.\");\r\n    }\r\n    return self.registration.showNotification(title, details);\r\n}\r\nfunction getLink(payload) {\r\n    var _a, _b, _c;\r\n    // eslint-disable-next-line camelcase\r\n    var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\r\n    if (link) {\r\n        return link;\r\n    }\r\n    if (isConsoleMessage(payload.data)) {\r\n        // Notification created in the Firebase Console. Redirect to origin.\r\n        return self.location.origin;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MESSAGING_NAME = 'messaging';\r\nfunction factoryMethod(container) {\r\n    // Dependencies.\r\n    var app = container.getProvider('app').getImmediate();\r\n    var appConfig = extractAppConfig(app);\r\n    var installations = container.getProvider('installations').getImmediate();\r\n    var analyticsProvider = container.getProvider('analytics-internal');\r\n    var firebaseDependencies = {\r\n        app: app,\r\n        appConfig: appConfig,\r\n        installations: installations,\r\n        analyticsProvider: analyticsProvider\r\n    };\r\n    if (!isSupported()) {\r\n        throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n    }\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return new SwController(firebaseDependencies);\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return new WindowController(firebaseDependencies);\r\n    }\r\n}\r\nvar NAMESPACE_EXPORTS = {\r\n    isSupported: isSupported\r\n};\r\nfirebase.INTERNAL.registerComponent(new Component(MESSAGING_NAME, factoryMethod, \"PUBLIC\" /* PUBLIC */).setServiceProps(NAMESPACE_EXPORTS));\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return ('indexedDB' in window &&\r\n        indexedDB !== null &&\r\n        navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('indexedDB' in self &&\r\n        indexedDB !== null &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n//# sourceMappingURL=index.esm.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"sourceRoot":"webpack:///","file":"default~firebase-messaging~login-login-module~signup-signup-module~student-ec-form-ec-form-module~st~88bf8aaa-es5.js"}