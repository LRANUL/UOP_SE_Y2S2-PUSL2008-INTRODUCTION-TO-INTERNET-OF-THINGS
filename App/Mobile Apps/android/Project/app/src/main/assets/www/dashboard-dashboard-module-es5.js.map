{"version":3,"sources":["src/app/office/dashboard/dashboard.page.html","src/app/office/dashboard/dashboard-routing.module.ts","src/app/office/dashboard/dashboard.module.ts","src/app/office/dashboard/dashboard.page.scss","src/app/office/dashboard/dashboard.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ky7BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,4CAAA,CAAA,eAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,0BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJtC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIsC,CAAA,EAA1B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAa,mBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV/B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,sDAAA,CAAA,4BAAA,CAJO,EAKP,4CAAA,CAAA,kBAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,4CAAA,CAAA,eAAA,CAAD;AARN,KAAT,CAU+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACrBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8tCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,aAAb;AA0CE,6BACU,uBADV,EAEU,gBAFV,EAGU,eAHV,EAIU,iBAJV,EAI8C;AAAA;;AAAA;;AAHpC,aAAA,uBAAA,GAAA,uBAAA;AACA,aAAA,gBAAA,GAAA,gBAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,iBAAA,GAAA,iBAAA;AAtCV,aAAA,oBAAA,GAAgC,KAAhC;AAEA,aAAA,mCAAA,GAA+C,IAA/C;AAEA,aAAA,qCAAA,GAAiD,IAAjD;AAEA,aAAA,sCAAA,GAAkD,IAAlD;AAEA,aAAA,0BAAA,GAAsC,KAAtC;AAEA,aAAA,sBAAA,GAAkC,KAAlC;AAGA,aAAA,gCAAA,GAA4C,IAA5C;AAEA,aAAA,iCAAA,GAA6C,IAA7C;AAEA,aAAA,sCAAA,GAAkD,IAAlD;AAEA,aAAA,sCAAA,GAAkD,IAAlD;AAEA,aAAA,uCAAA,GAAmD,IAAnD;AAEA,aAAA,4CAAA,GAAwD,IAAxD;AAEA,aAAA,gBAAA,GAA2B,CAA3B;AACA,aAAA,uBAAA,GAAkC,CAAlC;AACA,aAAA,wBAAA,GAAmC,CAAnC;AACA,aAAA,6BAAA,GAAwC,CAAxC;;AAyFA,aAAA,yBAAA,GAA4B,YAAK;AAC/B;AACA,UAAA,KAAI,CAAC,gBAAL,CAAsB,yBAAtB,CAAgD,cAAhD,EAAgE,SAAhE,CAA0E,UAAA,QAAQ,EAAG;AACnF,YAAA,KAAI,CAAC,gCAAL,GAAwC,KAAxC;AACA,YAAA,KAAI,CAAC,uBAAL,GAA+B,QAAQ,CAAC,MAAxC;AACA,YAAA,KAAI,CAAC,sCAAL,GAA8C,KAA9C;AACA,YAAA,KAAI,CAAC,wBAAL,GAAgC,QAAhC;AACD,WALD,EAF+B,CAS/B;;;AACA,UAAA,KAAI,CAAC,gBAAL,CAAsB,yBAAtB,CAAgD,eAAhD,EAAiE,SAAjE,CAA2E,UAAA,QAAQ,EAAG;AACpF,YAAA,KAAI,CAAC,iCAAL,GAAyC,KAAzC;AACA,YAAA,KAAI,CAAC,wBAAL,GAAgC,QAAQ,CAAC,MAAzC;AACA,YAAA,KAAI,CAAC,uCAAL,GAA+C,KAA/C;AACA,YAAA,KAAI,CAAC,yBAAL,GAAiC,QAAjC;AACD,WALD,EAV+B,CAiB/B;;;AACA,UAAA,KAAI,CAAC,gBAAL,CAAsB,yBAAtB,CAAgD,oBAAhD,EAAsE,SAAtE,CAAgF,UAAA,QAAQ,EAAG;AACzF,YAAA,KAAI,CAAC,sCAAL,GAA8C,KAA9C;AACA,YAAA,KAAI,CAAC,6BAAL,GAAqC,QAAQ,CAAC,MAA9C;AACA,YAAA,KAAI,CAAC,4CAAL,GAAoD,KAApD;AACA,YAAA,KAAI,CAAC,8BAAL,GAAsC,QAAtC;AACD,WALD;AAMD,SAxBD;;AA6HA,aAAA,2CAAA,GAA8C;AAAA,iBAC5C,KAAI,CAAC,gBAAL,CAAsB,2CAAtB,CAAkE,KAAI,CAAC,uBAAL,CAA6B,uBAA7B,EAAlE,EAA0H,KAAI,CAAC,WAA/H,EAA4I,KAAI,CAAC,QAAjJ,EAA2J,SAA3J,CAAqK,UAAA,QAAQ,EAAG;AAC9K,gBAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAA,KAAI,CAAC,mCAAL,GAA2C,KAA3C;AACA,cAAA,KAAI,CAAC,mCAAL,GAA2C,QAA3C;AACD,aAHD,MAIK;AACH,cAAA,KAAI,CAAC,mCAAL,GAA2C,KAA3C;AACA,cAAA,KAAI,CAAC,0BAAL,GAAkC,IAAlC;AACD;AACJ,WATC,CAD4C;AAAA,SAA9C;;AAeA,aAAA,mCAAA,GAAsC;AAAA,iBACpC,KAAI,CAAC,gBAAL,CAAsB,mCAAtB,CAA0D,KAAI,CAAC,iBAA/D,EAAkF,KAAI,CAAC,8BAAvF,EAAuH,SAAvH,CAAiI,UAAA,QAAQ,EAAG;AAC1I,gBAAG,QAAQ,CAAC,MAAT,GAAkB,CAArB,EAAuB;AACrB,cAAA,KAAI,CAAC,sCAAL,GAA8C,KAA9C;AACA,cAAA,KAAI,CAAC,4BAAL,GAAoC,QAApC;AACD,aAHD,MAII;AACF,cAAA,KAAI,CAAC,sCAAL,GAA8C,KAA9C;AACA,cAAA,KAAI,CAAC,sBAAL,GAA8B,IAA9B;AACD;AACF,WATD,CADoC;AAAA,SAAtC,CA3N8C,CAwP9C;;;AACA,aAAA,uBAAA,GAA0B,EAA1B;AAMA,aAAA,uBAAA,GAA0B;AACxB,UAAA,IAAI,EAAE,OADkB;AAExB,UAAA,WAAW,EAAE,IAAI,IAAJ;AAFW,SAA1B;AAKA,aAAA,YAAA,GAAe,IAAI,IAAJ,EAAf;AAnQK,OA/CP,CAiDE;;;AAjDF;AAAA;AAAA,2CAkDkB;AACd,eAAK,QAAL;AACD;AApDH;AAAA;AAAA,mCAsDU;AAAA;;AAEN,eAAK,qBAAL,GAFM,CAIN;AACA;;AACA,eAAK,WAAL,GAAmB,IAAI,IAAJ,EAAnB,CANM,CAQN;AACA;;AACA,eAAK,WAAL,CAAiB,QAAjB,CAA0B,CAA1B,EAA4B,CAA5B,EAA8B,CAA9B,EAAgC,CAAhC,EAVM,CAYN;AACA;;AACA,eAAK,QAAL,GAAgB,IAAI,IAAJ,EAAhB,CAdM,CAgBN;AACA;;AACA,eAAK,QAAL,CAAc,QAAd,CAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAlBM,CAoBN;AACA;;AACA,eAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,QAAL,CAAc,OAAd,KAAwB,CAA9C;AAIA,eAAK,iBAAL,GAAyB,IAAI,IAAJ,EAAzB;AAEA,eAAK,8BAAL,GAAsC,IAAI,IAAJ,EAAtC;AAEA,eAAK,8BAAL,CAAoC,OAApC,CAA4C,KAAK,WAAL,CAAiB,OAAjB,KAA2B,CAAvE;AAGA,eAAK,2CAAL;AAEA,eAAK,mCAAL;AAEA,eAAK,yBAAL,GArCM,CAwCN;;AACA,eAAK,gBAAL,CAAsB,wCAAtB,CAA+D,KAAK,uBAAL,CAA6B,uBAA7B,EAA/D,EAAuH,SAAvH,CAAiI,UAAA,QAAQ,EAAG;AAE1I;AACA,YAAA,MAAI,CAAC,qCAAL,GAA6C,KAA7C;AAEA,YAAA,MAAI,CAAC,0BAAL,GAAkC,EAAlC,CAL0I,CAKpG;;AACtC,YAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,IAAI,EAAG;AACtB,kBAAI,mBAAmB,GAAO,IAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,IAAjB,EAA9B;AACA,cAAA,mBAAmB,CAAC,EAApB,GAAyB,IAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,EAA1C;AACA,cAAA,mBAAmB,CAAC,KAApB,GAA4B,mBAAmB,CAAC,UAApB,GAAiC,GAAjC,GAAuC,mBAAmB,CAAC,WAAvF;AACA,cAAA,mBAAmB,CAAC,SAApB,GAAgC,mBAAmB,CAAC,aAApB,CAAkC,MAAlC,EAAhC;AACA,cAAA,mBAAmB,CAAC,OAApB,GAA8B,mBAAmB,CAAC,WAApB,CAAgC,MAAhC,EAA9B;AAEA,cAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AAEA,cAAA,MAAI,CAAC,0BAAL,CAAgC,IAAhC,CAAqC,mBAArC;AACD,aAVD;AAYD,WAlBD,EAkBG,UAAA,KAAK,EAAG;AACT;AACA,YAAA,MAAI,CAAC,qCAAL,GAA6C,KAA7C;AAEA,YAAA,OAAO,CAAC,GAAR,CAAY,YAAY,KAAxB;;AACA,YAAA,MAAI,CAAC,WAAL,CAAiB,OAAjB,EAA0B,4BAA4B,KAAtD;AACD,WAxBD;AA0BD,SAzHH,CAuJE;AACA;;AAxJF;AAAA;AAAA,0CAyJoB,YAzJpB,EAyJwC;AACpC,cAAG,YAAY,GAAG,EAAlB,EAAqB;AACnB,mBAAO,MAAM,YAAb;AACD,WAFD,MAGI;AACF,mBAAO,YAAP;AACD;AACF,SAhKH,CAkKE;;AAlKF;AAAA;AAAA,kDAmK4B,kBAnK5B,EAmKwD,mBAnKxD,EAmKqF,wBAnKrF,EAmKqH;AACjH,cAAI,gBAAgB,GAAG,kBAAkB,GAAG,mBAArB,GAA2C,wBAAlE,CADiH,CAGjH;AACA;AACA;AACA;;AACA,iBAAO,KAAK,iBAAL,CAAuB,gBAAvB,CAAP;AACD,SA3KH,CAkLE;;AAlLF;AAAA;AAAA,gDAmLgC,EAnLhC,EAmLyC;;;;;;;;AACI,2BAAM,KAAK,iBAAL,CAAuB,MAAvB,CAA8B;AAC3E,sBAAA,SAAS,EAAE,8EAAA,CAAA,0BAAA,CADgE;AAE3E,sBAAA,cAAc,EAAE;AACd,wBAAA,cAAc,EAAE,KAAK,uBAAL,CAA6B,kBAA7B;AADF,uBAF2D;AAK3E,sBAAA,KAAK,EAAE;AALoE,qBAA9B,CAAN;;;AAAnC,oBAAA,gC;AAON,oBAAA,gCAAgC,CAAC,OAAjC;;;;;;;;;AACD;AA5LH;AAAA;AAAA,gDAqMuB;AACnB,eAAK,IAAL,GAAY,IAAI,qCAAA,CAAA,OAAA,CAAJ,CAAU,KAAK,QAAL,CAAc,aAAxB,EAAuC;AACjD,YAAA,IAAI,EAAE,MAD2C;AAEjD,YAAA,IAAI,EAAE;AACJ,cAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CADJ;AAEJ,cAAA,QAAQ,EAAE,CAAC;AACT,gBAAA,KAAK,EAAE,eADE;AAET,gBAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAFG;AAGT,gBAAA,eAAe,EAAE,oBAHR;AAIT,gBAAA,WAAW,EAAE,oBAJJ;AAKT,gBAAA,WAAW,EAAE;AALJ,eAAD;AAFN,aAF2C;AAYjD,YAAA,OAAO,EAAE;AACP,cAAA,UAAU,EAAE,IADL;AAEP,cAAA,mBAAmB,EAAE,KAFd;AAGP,cAAA,MAAM,EAAE;AACN,gBAAA,OAAO,EAAE;AADH,eAHD;AAMP,cAAA,MAAM,EAAE;AACN,gBAAA,KAAK,EAAE,CAAC;AACN,kBAAA,KAAK,EAAE;AACL,oBAAA,WAAW,EAAE,KADR;AAEL,oBAAA,OAAO,EAAE;AAFJ,mBADD;AAKN,kBAAA,SAAS,EAAE;AACT,oBAAA,OAAO,EAAE;AADA;AALL,iBAAD,CADD;AAUN,gBAAA,KAAK,EAAE,CAAC;AACN,kBAAA,KAAK,EAAE;AACL,oBAAA,OAAO,EAAE;AADJ,mBADD;AAIN,kBAAA,SAAS,EAAE;AACT,oBAAA,OAAO,EAAE;AADA;AAJL,iBAAD;AAVD;AAND;AAZwC,WAAvC,CAAZ;AAuCD;AA7OH;AAAA;AAAA,wDAgPkC,KAhPlC,EAgPyC,KAhPzC,EAgP8C,CAE3C;AAlPH;AAAA;AAAA,0DAoPoC,KApPpC,EAoP2C,KApP3C,EAoPgD,CAE7C,CAtPH,CAyRE;;AAzRF;AAAA;AAAA,oCA0RsB,KA1RtB,EA0RqC,OA1RrC,EA0RoD;;;;;;;;AAClC,2BAAM,KAAK,eAAL,CAAqB,MAArB,CAA4B;AAC9C,sBAAA,MAAM,EAAE,KADsC;AAE9C,sBAAA,OAAO,EAAE,OAFqC;AAG9C,sBAAA,OAAO,EAAE,CAAC,IAAD;AAHqC,qBAA5B,CAAN;;;AAAR,oBAAA,K;;AAKN,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;AACD;AAjSH;AAAA;AAAA,2CAoTkB;AACd,cAAI,iBAAiB,GAAG,QAAQ,CAAC,cAAT,CAAwB,8BAAxB,EAAwD,aAAxD,CAAsE,mBAAtE,EAA2F,QAA3F,CAAxB;AACA,UAAA,iBAAiB,CAAC,SAAlB;AACD;AAvTH;AAAA;AAAA,+CAyTsB;AAClB,cAAI,gBAAgB,GAAG,QAAQ,CAAC,cAAT,CAAwB,8BAAxB,EAAwD,aAAxD,CAAsE,mBAAtE,EAA2F,QAA3F,CAAvB;AACA,UAAA,gBAAgB,CAAC,SAAjB;AACD;AA5TH;AAAA;AAAA,0DA8ToC,KA9TpC,EA8TyC;AACrC,UAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,eAAK,sBAAL,GAA8B,KAA9B;AACD;AAjUH;AAAA;AAAA,uDAmUiC,KAnUjC,EAmUsC;AAClC,UAAA,OAAO,CAAC,GAAR,CAAY,+BAA+B,KAAK,CAAC,SAArC,GAAiD,KAAjD,GAAyD,KAAK,CAAC,OAA/D,GAAyE,IAAzE,GAAgF,KAAK,CAAC,KAAlG;AACD;AArUH;AAAA;AAAA,sDAuUgC,GAvUhC,EAuUmC;AAC/B,UAAA,OAAO,CAAC,GAAR,CAAY,oCAAoC,GAAG,CAAC,YAAxC,GAAuD,kBAAvD,IAA6E,GAAG,CAAC,MAAJ,KAAe,SAAf,IAA4B,GAAG,CAAC,MAAJ,CAAW,MAAX,KAAsB,CAA/H,IACV,cADU,GACO,GAAG,CAAC,QADvB;;AAGE,cAAG,CAAC,GAAG,CAAC,MAAJ,KAAe,SAAf,IAA4B,GAAG,CAAC,MAAJ,CAAW,MAAX,KAAsB,CAAnD,KAAyD,KAA5D,EAAkE;AAChE,iBAAK,oBAAL,GAA4B,IAA5B;AACA,iBAAK,uBAAL,GAA+B,EAA/B;AACD,WAHD,MAIK,IAAI,CAAC,GAAG,CAAC,MAAJ,KAAe,SAAf,IAA4B,GAAG,CAAC,MAAJ,CAAW,MAAX,KAAsB,CAAnD,KAAyD,IAA7D,EAAkE;AACrE,iBAAK,oBAAL,GAA4B,KAA5B;AACA,iBAAK,uBAAL,GAA+B,GAAG,CAAC,MAAnC;AACD;;AACD,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,uBAAjB;AACH;AApVH;AAAA;AAAA,4DAsVsC,KAtVtC,EAsViD;AAC7C,UAAA,OAAO,CAAC,GAAR,CAAY,0CAA0C,KAAtD;AAEA,eAAK,uBAAL,GAA+B,EAA/B;AACD;AA1VH;AAAA;AAAA,sDA4VgC,GA5VhC,EA4VmC;AAC/B,UAAA,OAAO,CAAC,GAAR,CAAY,kDAAkD,GAAG,CAAC,SAAtD,GAAkE,cAAlE,GAAmF,GAAG,CAAC,OAAnG;AACD;AA9VH;;AAAA;AAAA,OAAA;;;;cA2CqC,sDAAA,CAAA,cAAA;;cACP,8DAAA,CAAA,iBAAA;;cACD,2CAAA,CAAA,iBAAA;;cACE,2CAAA,CAAA,mBAAA;;;;AAqJuB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAnD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,uBAAV,EAAmC;AAAC,gBAAQ;AAAT,KAAnC,CAAmD,E,uEAAA,CAAA,E,uBAAA,E,UAAA,E,KAAS,CAAT;AAnMzC,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4FAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKyB,E,uEA2CW,sDAAA,CAAA,cAAA,C,EACP,8DAAA,CAAA,iBAAA,C,EACD,2CAAA,CAAA,iBAAA,C,EACE,2CAAA,CAAA,mBAAA,C,EA9CL,CAAA,EAAb,aAAa,CAAb","sourcesContent":["export default \"<ion-header style=\\\"height: 70px;\\\">\\r\\n  <ion-toolbar>\\r\\n\\r\\n\\r\\n    <!-- This will add a button to show the side menu when the side menu is hidden in small screens -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    \\r\\n    <ion-title style=\\\"position: absolute;\\r\\n                      top: 40%;\\\">Dashboard</ion-title>\\r\\n\\r\\n    <!-- Header Contents Section -->\\r\\n    <div style=\\\"position: absolute;\\r\\n                right: 5px;\\r\\n                top: 8px;\\\">\\r\\n                \\r\\n      <!-- Notification Bell, Unread Notifications Count, Drop Down -->          \\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" style=\\\"width: 100px;\\r\\n                                                  height: 45px;\\r\\n                                                  background-color: white;\\\" (click)=\\\"openNotificationPopover($event)\\\">\\r\\n\\r\\n        <!-- Notification Bell Icon -->\\r\\n        <div style=\\\"height: 42px;\\r\\n                    width: 42px;\\\"> \\r\\n          <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 35px;\\r\\n                                                        position: absolute;\\r\\n                                                        top: 5px;\\r\\n                                                        left: 0px;\\\"></ion-icon>\\r\\n        </div>\\r\\n\\r\\n          <!-- Arrow Icon -->\\r\\n        <div style=\\\"position: absolute;\\r\\n                    left: 50px;\\r\\n                    top: 10px;\\r\\n                    font-size: 26px;\\\">\\r\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\r\\n        </div>\\r\\n        \\r\\n      </ion-button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"9.5\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n\\r\\n            <ion-card style=\\\"height: 580px;\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-card-title>\\r\\n                  Today's Lecturers\\r\\n                </ion-card-title>\\r\\n              </ion-card-header>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <ion-grid style=\\\"height: 510px;\\r\\n                                overflow-y: auto;\\\">\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"3\\\" size-sm=\\\"12\\\" size-lg=\\\"3\\\" size-xl=\\\"3\\\" *ngFor=\\\"let item of publishedLectureSessionsCurrentDate\\\">\\r\\n\\r\\n                      <ion-card style=\\\"margin-top: -5px;\\\">\\r\\n                        <ion-card-header>\\r\\n                          <ion-button shape=\\\"round\\\" color=\\\"primary\\\" size=\\\"small\\\" style=\\\"position: absolute;\\r\\n                                                                                      top: 0px;\\r\\n                                                                                      left: 75%;\\r\\n                                                                                      width: 40px;\\r\\n                                                                                      height: 40px;\\\" (click)=\\\"moreDetailsTodaysLectureSession($event, item)\\\">\\r\\n                            <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\r\\n                          </ion-button>\\r\\n                          <ion-card-title>\\r\\n                            <ion-label>\\r\\n                              {{ item.payload.doc.data().moduleCode }}\\r\\n                            </ion-label>\\r\\n                          </ion-card-title>\\r\\n                          <ion-card-subtitle>\\r\\n                            <ion-label>\\r\\n                              {{ item.payload.doc.data().moduleTitle }}\\r\\n                            </ion-label>\\r\\n                          </ion-card-subtitle>\\r\\n                        </ion-card-header>\\r\\n                        <ion-card-content>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col size=\\\"6\\\">\\r\\n                                <ion-label>\\r\\n                                  <b>Lecture Hall: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col size=\\\"6\\\">\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().lectureHall }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>Batch: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().batch }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>Degree Code: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().degreeCode }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>Lecturer: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().lecturer }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>Start Time: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().startDateTime.toDate() | date: 'h:mm a' }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>End Time: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().endDateTime.toDate() | date: 'h:mm a' }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  <b>Status: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col>\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().status }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-content>\\r\\n                      </ion-card>\\r\\n\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                top: 40%;\\r\\n                                                transform: translate(-50%,-60%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"showLoadingDotsTodaysLectureSession\\\"></ion-spinner>\\r\\n\\r\\n                 <!-- Page loading search module text -->\\r\\n                <div *ngIf=\\\"noLectureSessionsTodayText\\\" style=\\\"position: absolute;\\r\\n                                                            top: 150px;\\r\\n                                                            left: 50%;\\r\\n                                                            transform: translateX(-50%);\\r\\n                                                            font-size: 18px;\\r\\n                                                            border: #ccc solid 2px;\\r\\n                                                            border-radius: 5px;\\r\\n                                                            padding: 15px;\\r\\n                                                            min-width: 200px;\\\">\\r\\n                  <ion-icon name=\\\"close-circle-outline\\\" style=\\\"color: rgb(8, 177, 219);\\r\\n                                                              font-size: 30px;\\r\\n                                                              margin-top: 2px;\\r\\n                                                              margin-right: 10px;\\\"></ion-icon>\\r\\n                  <ion-label style=\\\"position: relative;\\r\\n                                    top: -8px;\\r\\n                                    text-align: center;\\\">\\r\\n                    No Lecture Sessions assigned for today.\\r\\n                  </ion-label>\\r\\n                </div>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n\\r\\n            <ion-card style=\\\"margin-top: -5px;\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-card-title>\\r\\n                  Weeks Upcoming Lectures\\r\\n                </ion-card-title>\\r\\n              </ion-card-header>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            transform: translateX(-50%);\\r\\n                            top: -40px;\\\">\\r\\n                \\r\\n                  <ion-button fill=\\\"clear\\\" (click)=\\\"previousMonthLecture()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                    <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n\\r\\n                  <ion-label style=\\\"font-size: 20px;\\\">\\r\\n                    {{ viewingUpcomingLecture }}\\r\\n                  </ion-label>\\r\\n\\r\\n                  <ion-button fill=\\\"clear\\\" (click)=\\\"nextMonthLecture()\\\" style=\\\"margin-top: -12px;\\\">\\r\\n                    <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n\\r\\n                </div>\\r\\n                \\r\\n\\r\\n                <div style=\\\"overflow-y: auto;\\r\\n                            margin-top: 30px;\\\">\\r\\n                  <div style=\\\"height: 700px;\\\">\\r\\n                    <calendar [eventSource]=\\\"eventSourceUpcomingLecture\\\"\\r\\n                    [calendarMode]=\\\"calendarUpcomingLecture.mode\\\"\\r\\n                    [currentDate]=\\\"calendarUpcomingLecture.currentDate\\\"\\r\\n                    (onCurrentDateChanged)=\\\"onCurrentDateChangedUpcomingLecture($event)\\\"\\r\\n                    (onRangeChanged)=\\\"onRangeChangedUpcomingLecture($event)\\\"\\r\\n                    (onEventSelected)=\\\"onEventSelectedUpcomingLecture($event)\\\"\\r\\n                    (onTitleChanged)=\\\"onViewTitleChangedUpcomingLecture($event)\\\"\\r\\n                    (onTimeSelected)=\\\"onTimeSelectedUpcomingLecture($event)\\\"\\r\\n                    startHour=\\\"9\\\"\\r\\n                    endHour=\\\"17\\\"\\r\\n                    step=\\\"30\\\"\\r\\n                    startingDayWeek=\\\"1\\\" id=\\\"weeksUpcomingLectureCalendar\\\">\\r\\n                  \\r\\n                    </calendar>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div style=\\\"position: absolute;\\r\\n                            top: 282px;\\r\\n                            right: 3.4%;\\\" *ngFor=\\\"let item of lectureSessionDocuments\\\">\\r\\n                  <ion-button size=\\\"small\\\" title=\\\"Lecture Session Read More\\\" color=\\\"secondary\\\" (click)=\\\"moreDetailsUpcomingLectureSession($event, item)\\\" style=\\\"width: 40px;\\r\\n                                                                                                                                                                  height: 40px;\\r\\n                                                                                                                                                                  border-radius: 5px;\\r\\n                                                                                                                                                                  margin-bottom: -5px;\\r\\n                                                                                                                                                                  margin-left: -10px;\\\">\\r\\n                    <ion-icon name=\\\"document-text\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </div>\\r\\n\\r\\n                <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            top: 60%;\\r\\n                            transform: translate(-50%,-40%);\\\" *ngIf=\\\"noLectureSessionText\\\">\\r\\n                  <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  padding: 5px;\\\">\\r\\n                    <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                      No Lecture Sessions on the selected date\\r\\n                    </ion-label>\\r\\n                  </ion-item>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                top: 50%;\\r\\n                                                transform: translate(-50%,-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"showLoadingDotsUpcomingLectureSession\\\"></ion-spinner>\\r\\n\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n\\r\\n            <ion-card style=\\\"margin-top: -5px;\\r\\n                            height: 800px;\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-card-title>\\r\\n                  Latest Notices from Lecturers\\r\\n                </ion-card-title>\\r\\n              </ion-card-header>\\r\\n              <ion-card-content>\\r\\n\\r\\n                <ion-grid style=\\\"height: 725px;\\r\\n                                overflow-y: auto;\\\">\\r\\n                  <ion-row *ngFor=\\\"let item of publishedLecturerToPONotices\\\">\\r\\n                    <ion-col size=\\\"12\\\">\\r\\n\\r\\n                      <ion-card>\\r\\n                        <ion-card-header>\\r\\n                          <ion-card-title>\\r\\n                            <ion-label>\\r\\n                              {{ item.payload.doc.data().noticeTitle }}\\r\\n                            </ion-label>\\r\\n                          </ion-card-title>\\r\\n                          <ion-card-subtitle>\\r\\n                            <ion-label>\\r\\n                              {{ item.payload.doc.data().noticeDescription }}\\r\\n                            </ion-label>\\r\\n                          </ion-card-subtitle>\\r\\n                        </ion-card-header>\\r\\n                        <ion-card-content>\\r\\n                          <ion-grid>\\r\\n                            <ion-row>\\r\\n                              <ion-col size=\\\"5\\\">\\r\\n                                <ion-label>\\r\\n                                  <b>Notice Category: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col size=\\\"7\\\">\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().noticeCategory }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col size=\\\"5\\\">\\r\\n                                <ion-label>\\r\\n                                  <b>Sent By: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col size=\\\"7\\\">\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().noticeCreatedInfo.createdByLecturerUserId }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                            <ion-row>\\r\\n                              <ion-col size=\\\"5\\\">\\r\\n                                <ion-label>\\r\\n                                  <b>Sent At: </b>\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                              <ion-col size=\\\"7\\\">\\r\\n                                <ion-label>\\r\\n                                  {{ item.payload.doc.data().noticeCreatedInfo.createdDateTime.toDate() | date: 'dd-MM-yyyy | h:mm a'}}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-content>\\r\\n                      </ion-card>\\r\\n\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n                <!-- Loading Spinner -->\\r\\n                <ion-spinner name=\\\"dots\\\" style=\\\"position: absolute;\\r\\n                                                left: 50%;\\r\\n                                                top: 50%;\\r\\n                                                transform: translate(-50%,-50%);\\r\\n                                                margin-top: 20px;\\r\\n                                                height: 100px;\\r\\n                                                width: 100px;\\\" *ngIf=\\\"showLoadingDotsLatestLecturerPONotices\\\"></ion-spinner>\\r\\n                                                \\r\\n                <!-- Text shown if there are no available lecturer to PO notices for the past three days -->\\r\\n                <div style=\\\"position: absolute;\\r\\n                            left: 50%;\\r\\n                            top: 50%;\\r\\n                            transform: translate(-50%,-50%);\\\" *ngIf=\\\"noLecturerPONoticeText\\\">\\r\\n                  <ion-item style=\\\"border: #ccc solid 1px;\\r\\n                                  border-radius: 5px;\\r\\n                                  padding: 5px;\\\">\\r\\n                    <ion-label style=\\\"font-size: 17px;\\\">\\r\\n                      No Notices Available\\r\\n                    </ion-label>\\r\\n                  </ion-item>\\r\\n                </div>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card>\\r\\n\\r\\n          </ion-col>\\r\\n  \\r\\n        </ion-row>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2.5\\\">\\r\\n\\r\\n        <ion-card style=\\\"margin-top: 15px;\\r\\n                        margin-left: -10px;\\r\\n                        width: 103%;\\r\\n                        min-height: 60%;\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              User Activity\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        width: 100%;\\r\\n                        height: 130px;\\r\\n                        padding-right: 10px;\\\">\\r\\n                <canvas #userActivityAreaChart></canvas>  \\r\\n            </div>\\r\\n\\r\\n            <ion-label style=\\\"position: relative;\\r\\n                              top: 20px;\\r\\n                              font-size: 17px;\\\">\\r\\n              Active Users - \\r\\n                <span style=\\\"color: rgb(0, 94, 122)\\\">\\r\\n                  <b>\\r\\n                      {{ calculateTotalOnlineUsers(onlineStudentUsersCount, onlineLecturerUsersCount, onlineProgramOfficeUsersCount) }}\\r\\n                  </b>\\r\\n                </span>\\r\\n            </ion-label>\\r\\n\\r\\n            <div style=\\\"border: #ccc solid 1px;\\r\\n                        border-radius: 5px;\\r\\n                        width: 100%;\\r\\n                        min-height: 590px;\\r\\n                        position: relative;\\r\\n                        top: 20px;\\\">\\r\\n              \\r\\n              <ion-grid style=\\\"min-height: 580px;\\\">\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label>\\r\\n                      <b>Students: \\r\\n                        <span style=\\\"color: rgb(4, 126, 163)\\\">\\r\\n                          {{ convertToTwoDigit(onlineStudentUsersCount) }}\\r\\n                          <ion-spinner name=\\\"crescent\\\" style=\\\"height: 15px;\\r\\n                                                        width: 15px;\\\" *ngIf=\\\"activeStudentUsersLoadingSpinner\\\"></ion-spinner>\\r\\n                        </span>\\r\\n                      </b>\\r\\n                    </ion-label>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n\\r\\n                    <ion-grid style=\\\"height: 144px;\\r\\n                                    overflow-y: auto;\\\">\\r\\n                      <ion-row>\\r\\n                        <ion-col>\\r\\n                          <ion-grid style=\\\"position: relative;\\r\\n                                          left: 50%;\\r\\n                                          top: -15px;\\r\\n                                          transform: translateX(-50%);\\\">\\r\\n                            <ion-spinner name=\\\"crescent\\\" style=\\\"height: 50px;\\r\\n                                                  width: 50px;\\r\\n                                                  position: absolute;\\r\\n                                                  left: 50%;\\r\\n                                                  top: 40px;\\r\\n                                                  transform: translateX(-50%);\\\" *ngIf=\\\"activeStudentUserDetailsLoadingSpinner\\\"></ion-spinner>\\r\\n                            <ion-row *ngFor=\\\"let item of onlineStudentUserDetails\\\">\\r\\n                              <ion-col>\\r\\n                                <ion-label style=\\\"font-size: 13px;\\r\\n                                            position: relative;\\r\\n                                            left: 20%;\\\">\\r\\n                                  {{ item.payload.doc.data().name.prefix }}\\r\\n                                  {{ item.payload.doc.data().name.firstName }}\\r\\n                                  {{ item.payload.doc.data().name.lastName }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <div style=\\\"border-top: #ccc solid 2px;\\\"></div>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label>\\r\\n                      <b>Lecturers: \\r\\n                        <span style=\\\"color: rgb(4, 126, 163)\\\">\\r\\n                          {{ convertToTwoDigit(onlineLecturerUsersCount) }}\\r\\n                          <ion-spinner name=\\\"crescent\\\" style=\\\"height: 15px;\\r\\n                                                        width: 15px;\\\" *ngIf=\\\"activeLecturerUsersLoadingSpinner\\\"></ion-spinner>\\r\\n                        </span>\\r\\n                      </b>\\r\\n                    </ion-label>    \\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n\\r\\n                    <ion-grid style=\\\"height: 144px;\\r\\n                                    overflow-y: auto;\\\">\\r\\n                      <ion-row>\\r\\n                        <ion-col>\\r\\n                          <ion-grid style=\\\"position: relative;\\r\\n                                          left: 50%;\\r\\n                                          top: -15px;\\r\\n                                          transform: translateX(-50%);\\\">\\r\\n                            <ion-spinner name=\\\"crescent\\\" style=\\\"height: 50px;\\r\\n                                                                width: 50px;\\r\\n                                                                position: absolute;\\r\\n                                                                left: 50%;\\r\\n                                                                top: 40px;\\r\\n                                                                transform: translateX(-50%);\\\" *ngIf=\\\"activeLecturerUserDetailsLoadingSpinner\\\"></ion-spinner>\\r\\n                            <ion-row *ngFor=\\\"let item of onlineLecturerUserDetails\\\">\\r\\n                              <ion-col>\\r\\n                                <ion-label style=\\\"font-size: 13px;\\r\\n                                            position: relative;\\r\\n                                            left: 20%;\\\">\\r\\n                                  {{ item.payload.doc.data().name.prefix }}\\r\\n                                  {{ item.payload.doc.data().name.firstName }}\\r\\n                                  {{ item.payload.doc.data().name.lastName }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n\\r\\n                  </ion-col>  \\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <div style=\\\"border-top: #ccc solid 2px;\\\"></div>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label>\\r\\n                      <b>Program Office Staff: \\r\\n                        <span style=\\\"color: rgb(4, 126, 163)\\\">\\r\\n                          {{ convertToTwoDigit(onlineProgramOfficeUsersCount) }}\\r\\n                          <ion-spinner name=\\\"crescent\\\" style=\\\"height: 15px;\\r\\n                                                        width: 15px;\\\" *ngIf=\\\"activeProgramOfficeUsersLoadingSpinner\\\"></ion-spinner>\\r\\n                        </span>\\r\\n                      </b>\\r\\n                    </ion-label>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n\\r\\n                    <ion-grid style=\\\"height: 144px;\\r\\n                                    overflow-y: auto;\\\">\\r\\n                      <ion-row>\\r\\n                        <ion-col>\\r\\n                          <ion-grid style=\\\"position: relative;\\r\\n                                          left: 50%;\\r\\n                                          top: -15px;\\r\\n                                          transform: translateX(-50%);\\\">\\r\\n                            <ion-spinner name=\\\"crescent\\\" style=\\\"height: 50px;\\r\\n                                                                width: 50px;\\r\\n                                                                position: absolute;\\r\\n                                                                left: 50%;\\r\\n                                                                top: 40px;\\r\\n                                                                transform: translateX(-50%);\\\" *ngIf=\\\"activeProgramOfficeUserDetailsLoadingSpinner\\\"></ion-spinner>\\r\\n                            <ion-row *ngFor=\\\"let item of onlineProgramOfficeUserDetails\\\">\\r\\n                              <ion-col>\\r\\n                                <ion-label style=\\\"font-size: 13px;\\r\\n                                                  position: relative;\\r\\n                                                  left: 20%;\\\">\\r\\n                                  {{ item.payload.doc.data().name.prefix }}\\r\\n                                  {{ item.payload.doc.data().name.firstName }}\\r\\n                                  {{ item.payload.doc.data().name.lastName }}\\r\\n                                </ion-label>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n              \\r\\n            </div>\\r\\n\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DashboardPageRoutingModule,\r\n    NgCalendarModule\r\n  ],\r\n  declarations: [DashboardPage]\r\n})\r\nexport class DashboardPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color: rgb(243, 243, 243);\\n}\\n\\nion-card {\\n  --ion-background-color: white;\\n}\\n\\nion-label {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb2ZmaWNlL2Rhc2hib2FyZC9DOlxcVXNlcnNcXHJhbnVsXFxEb2N1bWVudHNcXEdpdEh1YlxcMm5kIFllYXJcXDJuZCBTZW1lc3RlclxcVU9QX1NFX1kyUzItUFVTTDIwMDgtSU5UUk9EVUNUSU9OLVRPLUlOVEVSTkVULU9GLVRISU5HU1xcV29ya3NwYWNlXFxpU0FNL3NyY1xcYXBwXFxvZmZpY2VcXGRhc2hib2FyZFxcZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb2ZmaWNlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMENBQUE7QUNDSjs7QURFQTtFQUNJLDZCQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9vZmZpY2UvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNDMsIDI0MywgMjQzKTtcclxufVxyXG5cclxuaW9uLWNhcmR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuaW9uLWxhYmVse1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4iLCJpb24tY29udGVudCB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNDMsIDI0MywgMjQzKTtcbn1cblxuaW9uLWNhcmQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuaW9uLWxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SideMenuPage } from '../side-menu/side-menu.page';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\n\r\nimport { Chart } from 'chart.js';\r\nimport { NotificationsPopoverPage } from '../notifications-popover/notifications-popover.page';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.scss'],\r\n})\r\nexport class DashboardPage implements OnInit {\r\n\r\n  currentDate;\r\n  nextDate;\r\n\r\n  currentDateNotice;\r\n  dateThreeDaysBeforeCurrentDate\r\n\r\n  noLectureSessionText: Boolean = false;\r\n\r\n  showLoadingDotsTodaysLectureSession: Boolean = true;\r\n\r\n  showLoadingDotsUpcomingLectureSession: Boolean = true;\r\n\r\n  showLoadingDotsLatestLecturerPONotices: Boolean = true;\r\n\r\n  noLectureSessionsTodayText: Boolean = false;\r\n\r\n  noLecturerPONoticeText: Boolean = false;\r\n\r\n\r\n  activeStudentUsersLoadingSpinner: Boolean = true;\r\n\r\n  activeLecturerUsersLoadingSpinner: Boolean = true;\r\n\r\n  activeProgramOfficeUsersLoadingSpinner: Boolean = true;\r\n\r\n  activeStudentUserDetailsLoadingSpinner: Boolean = true;\r\n\r\n  activeLecturerUserDetailsLoadingSpinner: Boolean = true;\r\n\r\n  activeProgramOfficeUserDetailsLoadingSpinner: Boolean = true;\r\n\r\n  onlineUsersCount: number = 0;\r\n  onlineStudentUsersCount: number = 0;\r\n  onlineLecturerUsersCount: number = 0;\r\n  onlineProgramOfficeUsersCount: number = 0;\r\n  onlineStudentUserDetails;\r\n  onlineLecturerUserDetails;\r\n  onlineProgramOfficeUserDetails;\r\n\r\n\r\n  constructor(\r\n    private sideMenuPageUserFaculty: SideMenuPage,\r\n    private dashboardService: FirebaseService,\r\n    private alertController: AlertController,\r\n    private popoverController: PopoverController\r\n  ) { }\r\n\r\n  // Calling the ngOnInit() function when page is rendered on the user's screen\r\n  ionViewWillEnter(){\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userActivityAreaChart();\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.currentDate = new Date();\r\n\r\n    // Setting currentDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.currentDate.setHours(0,0,0,0);\r\n\r\n    // Retrieving current date and time\r\n    // Sample: Sun Apr 19 2020 18:44:52 GMT+0530 (India Standard Time)\r\n    this.nextDate = new Date();\r\n\r\n    // Setting nextDate time section to zero leaving the date as it is\r\n    // Sample: Sun Apr 19 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setHours(0,0,0,0);\r\n\r\n    // Setting date section to increment by one\r\n    // Sample: Sun Apr 20 2020 00:00:00 GMT+0530 (India Standard Time)\r\n    this.nextDate.setDate(this.nextDate.getDate()+1);\r\n\r\n\r\n\r\n    this.currentDateNotice = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate = new Date();\r\n\r\n    this.dateThreeDaysBeforeCurrentDate.setDate(this.currentDate.getDate()-3);\r\n\r\n\r\n    this.retrievePublishedLectureSessionsCurrentDate();\r\n\r\n    this.retrievePublishedLecturerToPONotice();\r\n\r\n    this.retrieveOnlineUserDetails();\r\n\r\n\r\n    // Retrieving upcoming published lecture sessions from the firestore database and assigning them to the calendar\r\n    this.dashboardService.retrievePublishedLectureSessionsUpcoming(this.sideMenuPageUserFaculty.passLoggedInUserFaculty()).subscribe(response => {\r\n      \r\n      // Setting loading spinner in upcoming lecture sessions to stop spinning\r\n      this.showLoadingDotsUpcomingLectureSession = false;\r\n\r\n      this.eventSourceUpcomingLecture = []; // Clearing the existing lecture sessions on the calendar before syncing \r\n      response.forEach(snap => {\r\n        let eventLectureSession:any = snap.payload.doc.data();\r\n        eventLectureSession.id = snap.payload.doc.id;\r\n        eventLectureSession.title = eventLectureSession.moduleCode + \"-\" + eventLectureSession.moduleTitle;\r\n        eventLectureSession.startTime = eventLectureSession.startDateTime.toDate();\r\n        eventLectureSession.endTime = eventLectureSession.endDateTime.toDate();\r\n\r\n        console.log(eventLectureSession);\r\n\r\n        this.eventSourceUpcomingLecture.push(eventLectureSession);\r\n      });\r\n\r\n    }, error => {\r\n      // Setting loading spinner in upcoming lecture sessions to stop spinning\r\n      this.showLoadingDotsUpcomingLectureSession = false;\r\n\r\n      console.log(\"Error: \" + error);\r\n      this.alertNotice(\"Error\", \"An error has occurred: \" + error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  retrieveOnlineUserDetails = () => {\r\n    // Retrieving user details of student users that have an account status \"Online\" from the firestore database\r\n    this.dashboardService.retrieveOnlineUserDetails(\"studentUsers\").subscribe(response => {\r\n      this.activeStudentUsersLoadingSpinner = false;\r\n      this.onlineStudentUsersCount = response.length;\r\n      this.activeStudentUserDetailsLoadingSpinner = false;\r\n      this.onlineStudentUserDetails = response;\r\n    });\r\n\r\n    // Retrieving user details of lecturer users that have an account status \"Online\" from the firestore database\r\n    this.dashboardService.retrieveOnlineUserDetails(\"lecturerUsers\").subscribe(response => {\r\n      this.activeLecturerUsersLoadingSpinner = false;\r\n      this.onlineLecturerUsersCount = response.length;\r\n      this.activeLecturerUserDetailsLoadingSpinner = false;\r\n      this.onlineLecturerUserDetails = response;\r\n    });\r\n\r\n    // Retrieving user details of program office users that have an account status \"Online\" from the firestore database\r\n    this.dashboardService.retrieveOnlineUserDetails(\"programOfficeUsers\").subscribe(response => {\r\n      this.activeProgramOfficeUsersLoadingSpinner = false;\r\n      this.onlineProgramOfficeUsersCount = response.length;\r\n      this.activeProgramOfficeUserDetailsLoadingSpinner = false;\r\n      this.onlineProgramOfficeUserDetails = response;\r\n    });\r\n  }\r\n\r\n  // Process of returning two digits if there is only one digit in a number\r\n  // Sample: Passing - 5, Returning - 05\r\n  convertToTwoDigit(numericValue: number){\r\n    if(numericValue < 10){\r\n      return \"0\" + numericValue;\r\n    }\r\n    else{\r\n      return numericValue;\r\n    }\r\n  }\r\n\r\n  // Processing of adding all the active users\r\n  calculateTotalOnlineUsers(onlineStudentUsers: number, onlineLecturerUsers: number, onlineProgramOfficeUsers: number){\r\n    let totalActiveUsers = onlineStudentUsers + onlineLecturerUsers + onlineProgramOfficeUsers;\r\n\r\n    // Checking if number has one or two digits\r\n    // Adding one more digit if number only has one digit\r\n    // Sample: Passing - 5, Returning = 05\r\n    // Returning total number of active users \r\n    return this.convertToTwoDigit(totalActiveUsers);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Opening notifications popover\r\n  async openNotificationPopover(ev: Event){\r\n    const moreDetailsLectureSessionPopover = await this.popoverController.create({\r\n      component: NotificationsPopoverPage,\r\n      componentProps: {\r\n        loggedInUserId: this.sideMenuPageUserFaculty.passLoggedInUserId()\r\n      },\r\n      event: ev\r\n    });\r\n    moreDetailsLectureSessionPopover.present();\r\n  }\r\n\r\n\r\n  // User activity area chart (daily no of active users)\r\n  bars: any;\r\n  colorArray: any;\r\n  \r\n  @ViewChild('userActivityAreaChart', {static: true}) barChart;\r\n\r\n  userActivityAreaChart() {\r\n    this.bars = new Chart(this.barChart.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n        datasets: [{\r\n          label: 'User Activity',\r\n          data: [320,353,339,323,342,359,335],\r\n          backgroundColor: 'rgb(109, 156, 235)', \r\n          borderColor: 'rgb(109, 219, 235)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: false,\r\n              display: false\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          }],\r\n          xAxes: [{\r\n            ticks: {\r\n              display: false\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          }],\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  moreDetailsTodaysLectureSession(event, value){\r\n\r\n  }\r\n\r\n  moreDetailsUpcomingLectureSession(event, value){\r\n\r\n  }\r\n  \r\n  // Retrieving published lecture sessions for the current date from the firestore database\r\n  publishedLectureSessionsCurrentDate;\r\n  retrievePublishedLectureSessionsCurrentDate = () => \r\n    this.dashboardService.retrievePublishedLectureSessionsCurrentDate(this.sideMenuPageUserFaculty.passLoggedInUserFaculty(), this.currentDate, this.nextDate).subscribe(response => {\r\n      if (response.length > 0) {\r\n        this.showLoadingDotsTodaysLectureSession = false;\r\n        this.publishedLectureSessionsCurrentDate = response;\r\n      }\r\n      else {\r\n        this.showLoadingDotsTodaysLectureSession = false;\r\n        this.noLectureSessionsTodayText = true;\r\n      }\r\n  });\r\n\r\n\r\n  // Retrieving published lecturer to PO notice from the current date to three days ago from the firestore database\r\n  publishedLecturerToPONotices;\r\n  retrievePublishedLecturerToPONotice = () => \r\n    this.dashboardService.retrievePublishedLecturerToPONotice(this.currentDateNotice, this.dateThreeDaysBeforeCurrentDate).subscribe(response => {\r\n      if(response.length > 0){\r\n        this.showLoadingDotsLatestLecturerPONotices = false;\r\n        this.publishedLecturerToPONotices = response;\r\n      }\r\n      else{\r\n        this.showLoadingDotsLatestLecturerPONotices = false;\r\n        this.noLecturerPONoticeText = true;\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n  \r\n  // Alert Box Implementation\r\n  async alertNotice ( title: string, content: string ) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: content,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n\r\n  // Declared to hold the events as array to store the sessions\r\n  lectureSessionDocuments = [];\r\n\r\n  // Lecture Calendar\r\n  eventSourceUpcomingLecture;\r\n  viewingUpcomingLecture;\r\n\r\n  calendarUpcomingLecture = {\r\n    mode: 'month',\r\n    currentDate: new Date()\r\n  }\r\n\r\n  selectedDate = new Date();\r\n\r\n  nextMonthLecture(){\r\n    var frontSwipeLecture = document.getElementById('weeksUpcomingLectureCalendar').querySelector('.swiper-container')['swiper'];\r\n    frontSwipeLecture.slideNext();\r\n  }\r\n\r\n  previousMonthLecture(){\r\n    var backSwipeLecture = document.getElementById('weeksUpcomingLectureCalendar').querySelector('.swiper-container')['swiper'];\r\n    backSwipeLecture.slidePrev();\r\n  }\r\n\r\n  onViewTitleChangedUpcomingLecture(title){\r\n    console.log(title);\r\n    this.viewingUpcomingLecture = title; \r\n  }\r\n\r\n  onEventSelectedUpcomingLecture(event) {\r\n    console.log(\"Lecture Session Selected: \" + event.startTime + \" - \" + event.endTime + \", \" + event.title);\r\n  }\r\n\r\n  onTimeSelectedUpcomingLecture(evt){\r\n    console.log(\"Lecture Session Selected Time: \" + evt.selectedTime + \", has sessions: \" + (evt.events !== undefined && evt.events.length !== 0) +\r\n      \", disabled: \" + evt.disabled);\r\n\r\n      if((evt.events !== undefined && evt.events.length !== 0) == false){\r\n        this.noLectureSessionText = true;\r\n        this.lectureSessionDocuments = [];\r\n      }\r\n      else if ((evt.events !== undefined && evt.events.length !== 0) == true){\r\n        this.noLectureSessionText = false;\r\n        this.lectureSessionDocuments = evt.events;\r\n      }\r\n      console.log(this.lectureSessionDocuments);\r\n  }\r\n\r\n  onCurrentDateChangedUpcomingLecture(event: Date){\r\n    console.log(\"Current Lecture Session Date Change: \" + event);\r\n\r\n    this.lectureSessionDocuments = [];\r\n  }\r\n\r\n  onRangeChangedUpcomingLecture(evt) {\r\n    console.log(\"Lecture Session (Range) Changed: Start Time: \" + evt.startTime + \", End Time: \" + evt.endTime);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"dashboard-dashboard-module-es5.js"}